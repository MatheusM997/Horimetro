

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 08 08:44:48 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     	FNCALL	_main,_T0_init
  1336                           	FNCALL	_main,_T0_start
  1337                           	FNCALL	_main,_T0_status
  1338                           	FNCALL	_main,_b0
  1339                           	FNCALL	_main,_b1
  1340                           	FNCALL	_main,_botao_init
  1341                           	FNCALL	_main,_habTemporizador
  1342                           	FNCALL	_main,_lcd_init
  1343                           	FNCALL	_main,_lcd_num
  1344                           	FNCALL	_main,_lcd_print
  1345                           	FNCALL	_main,_resetTemporizador
  1346                           	FNCALL	_main,_temporizar
  1347                           	FNCALL	_temporizar,___awmod
  1348                           	FNCALL	_lcd_print,_lcd_dataReg
  1349                           	FNCALL	_lcd_print,_lcd_lincol
  1350                           	FNCALL	_lcd_num,___awdiv
  1351                           	FNCALL	_lcd_num,___awmod
  1352                           	FNCALL	_lcd_num,_lcd_dataReg
  1353                           	FNCALL	_lcd_num,_lcd_lincol
  1354                           	FNCALL	_lcd_lincol,_lcd_instReg
  1355                           	FNCALL	_lcd_init,_delay
  1356                           	FNCALL	_lcd_init,_lcd_instReg
  1357                           	FNROOT	_main
  1358                           	FNCALL	_isr,_T0_int
  1359                           	FNCALL	_isr,_T1_int
  1360                           	FNCALL	_isr,_T2_int
  1361                           	FNCALL	intlevel1,_isr
  1362                           	global	intlevel1
  1363                           	FNROOT	intlevel1
  1364                           	global	_b1Anterior
  1365                           	global	_b0Anterior
  1366                           	global	_T2count
  1367                           	global	_T1count
  1368                           	global	_T0count
  1369                           	global	_tempo
  1370                           	global	_PORTD
  1371                           _PORTD	set	0x8
  1372  0008                     	global	_PORTDbits
  1373                           _PORTDbits	set	0x8
  1374  0008                     	global	_PIR1bits
  1375                           _PIR1bits	set	0xC
  1376  000C                     	global	_T2CONbits
  1377                           _T2CONbits	set	0x12
  1378  0012                     	global	_TMR2
  1379                           _TMR2	set	0x11
  1380  0011                     	global	_TMR1L
  1381                           _TMR1L	set	0xE
  1382  000E                     	global	_TMR1H
  1383                           _TMR1H	set	0xF
  1384  000F                     	global	_T1CONbits
  1385                           _T1CONbits	set	0x10
  1386  0010                     	global	_TMR0
  1387                           _TMR0	set	0x1
  1388  0001                     	global	_INTCONbits
  1389                           _INTCONbits	set	0xB
  1390  000B                     	global	_TRISDbits
  1391                           _TRISDbits	set	0x88
  1392  0088                     	global	_PR2
  1393                           _PR2	set	0x92
  1394  0092                     	global	_PIE1bits
  1395                           _PIE1bits	set	0x8C
  1396  008C                     	global	_OPTION_REGbits
  1397                           _OPTION_REGbits	set	0x81
  1398  0081                     psect	strings,class=STRING,delta=2,noexec
  1399                           global __pstrings
  1400                           __pstrings:
  1401  0524                     stringtab:
  1402  0524                     	global    __stringtab
  1403                           __stringtab:
  1404  0524                     ;	String table - string pointers are 1 byte each
  1405                           stringcode:stringdir:
  1406  0524                     movlw high(stringdir)
      + 0524                     stringdir:	
  1407  0524  3005               movwf pclath
  1408  0525  008A               movf fsr,w
  1409  0526  0804               incf fsr
  1410  0527  0A84               	addwf pc
  1411  0528  0782               	global __stringbase
  1412                           __stringbase:
  1413  0529                     	retlw	0
  1414  0529  3400               psect	strings
  1415                           	global    __end_of__stringtab
  1416                           __end_of__stringtab:
  1417  052A                     	
  1418                           STR_1:	
  1419  052A                     	retlw	48	;'0'
  1420  052A  3430               	retlw	48	;'0'
  1421  052B  3430               	retlw	58	;':'
  1422  052C  343A               	retlw	48	;'0'
  1423  052D  3430               	retlw	48	;'0'
  1424  052E  3430               	retlw	32	;' '
  1425  052F  3420               	retlw	32	;' '
  1426  0530  3420               	retlw	32	;' '
  1427  0531  3420               	retlw	32	;' '
  1428  0532  3420               	retlw	32	;' '
  1429  0533  3420               	retlw	32	;' '
  1430  0534  3420               	retlw	48	;'0'
  1431  0535  3430               	retlw	48	;'0'
  1432  0536  3430               	retlw	58	;':'
  1433  0537  343A               	retlw	48	;'0'
  1434  0538  3430               	retlw	48	;'0'
  1435  0539  3430               	retlw	0
  1436  053A  3400               psect	strings
  1437                           STR_2	equ	STR_1+0
  1438  052A                     ; #config settings
  1439                           global __CFG_FOSC$INTRC_NOCLKOUT
  1440                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1441  0000                     global __CFG_WDTE$OFF
  1442                           __CFG_WDTE$OFF equ 0x0
  1443  0000                     global __CFG_PWRTE$OFF
  1444                           __CFG_PWRTE$OFF equ 0x0
  1445  0000                     global __CFG_MCLRE$OFF
  1446                           __CFG_MCLRE$OFF equ 0x0
  1447  0000                     global __CFG_CP$OFF
  1448                           __CFG_CP$OFF equ 0x0
  1449  0000                     global __CFG_CPD$OFF
  1450                           __CFG_CPD$OFF equ 0x0
  1451  0000                     global __CFG_BOREN$OFF
  1452                           __CFG_BOREN$OFF equ 0x0
  1453  0000                     global __CFG_IESO$OFF
  1454                           __CFG_IESO$OFF equ 0x0
  1455  0000                     global __CFG_FCMEN$OFF
  1456                           __CFG_FCMEN$OFF equ 0x0
  1457  0000                     global __CFG_LVP$OFF
  1458                           __CFG_LVP$OFF equ 0x0
  1459  0000                     global __CFG_BOR4V$BOR40V
  1460                           __CFG_BOR4V$BOR40V equ 0x0
  1461  0000                     global __CFG_WRT$OFF
  1462                           __CFG_WRT$OFF equ 0x0
  1463  0000                     	file	"C:\Users\21193459\AppData\Local\Temp\scn0."
  1464                           	line	#
  1465                           psect cinit,class=CODE,delta=2
  1466                           global start_initialization
  1467                           start_initialization:
  1468  000F                     
  1469                           global __initialization
  1470                           __initialization:
  1471  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1472                           global __pbssCOMMON
  1473                           __pbssCOMMON:
  1474  007A                     _b1Anterior:
  1475  007A                            ds      1
  1476  007A                     
  1477                           _b0Anterior:
  1478  007B                            ds      1
  1479  007B                     
  1480                           psect	bssBANK0,class=BANK0,space=1,noexec
  1481                           global __pbssBANK0
  1482                           __pbssBANK0:
  1483  0020                     _T2count:
  1484  0020                            ds      2
  1485  0020                     
  1486                           _T1count:
  1487  0022                            ds      2
  1488  0022                     
  1489                           _T0count:
  1490  0024                            ds      2
  1491  0024                     
  1492                           _tempo:
  1493  0026                            ds      24
  1494  0026                     
  1495                           	file	"C:\Users\21193459\AppData\Local\Temp\scn0."
  1496                           	line	#
  1497                           psect clrtext,class=CODE,delta=2
  1498                           global clear_ram0
  1499                           ;	Called with FSR containing the base address, and
  1500                           ;	W with the last address+1
  1501                           clear_ram0:
  1502  05D5                     	clrwdt			;clear the watchdog before getting into this loop
  1503  05D5  0064               clrloop0:
  1504  05D6                     	clrf	indf		;clear RAM location pointed to by FSR
  1505  05D6  0180               	incf	fsr,f		;increment pointer
  1506  05D7  0A84               	xorwf	fsr,w		;XOR with final address
  1507  05D8  0604               	btfsc	status,2	;have we reached the end yet?
  1508  05D9  1903               	retlw	0		;all done for this memory range, return
  1509  05DA  3400               	xorwf	fsr,w		;XOR again to restore value
  1510  05DB  0604               	goto	clrloop0		;do the next byte
  1511  05DC  2DD6               
  1512                           ; Clear objects allocated to COMMON
  1513                           psect cinit,class=CODE,delta=2,merge=1
  1514                           	clrf	((__pbssCOMMON)+0)&07Fh
  1515  000F  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  1516  0010  01FB               ; Clear objects allocated to BANK0
  1517                           psect cinit,class=CODE,delta=2,merge=1
  1518                           	bcf	status, 7	;select IRP bank0
  1519  0011  1383               	movlw	low(__pbssBANK0)
  1520  0012  3020               	movwf	fsr
  1521  0013  0084               	movlw	low((__pbssBANK0)+01Eh)
  1522  0014  303E               	fcall	clear_ram0
  1523  0015  120A  118A  25D5  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1524                           global end_of_initialization,__end_of__initialization
  1525                           
  1526                           ;End of C runtime variable initialization code
  1527                           
  1528                           end_of_initialization:
  1529  001A                     __end_of__initialization:
  1530  001A                     clrf status
  1531  001A  0183               ljmp _main	;jump to C main() function
  1532  001B  120A  118A  281E   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1533                           global __pcstackCOMMON
  1534                           __pcstackCOMMON:
  1535  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1536  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1537  0070                     ?_botao_init:	; 1 bytes @ 0x0
  1538  0070                     ?_resetTemporizador:	; 1 bytes @ 0x0
  1539  0070                     ?_b0:	; 1 bytes @ 0x0
  1540  0070                     ?_b1:	; 1 bytes @ 0x0
  1541  0070                     ?_temporizar:	; 1 bytes @ 0x0
  1542  0070                     ?_main:	; 1 bytes @ 0x0
  1543  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1544  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1545  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1546  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1547  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1548  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1549  0070                     ?_isr:	; 1 bytes @ 0x0
  1550  0070                     ??_isr:	; 1 bytes @ 0x0
  1551  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1552  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1553  0070                     	ds	2
  1554  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1555  0072                     ??_botao_init:	; 1 bytes @ 0x2
  1556  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1557  0072                     ??_resetTemporizador:	; 1 bytes @ 0x2
  1558  0072                     ?_habTemporizador:	; 1 bytes @ 0x2
  1559  0072                     ??_b0:	; 1 bytes @ 0x2
  1560  0072                     ??_b1:	; 1 bytes @ 0x2
  1561  0072                     ?_delay:	; 1 bytes @ 0x2
  1562  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1563  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1564  0072                     	global	?_T0_status
  1565                           ?_T0_status:	; 2 bytes @ 0x2
  1566  0072                     	global	?___awdiv
  1567                           ?___awdiv:	; 2 bytes @ 0x2
  1568  0072                     	global	?___awmod
  1569                           ?___awmod:	; 2 bytes @ 0x2
  1570  0072                     	global	habTemporizador@h
  1571                           habTemporizador@h:	; 1 bytes @ 0x2
  1572  0072                     	global	resetTemporizador@t
  1573                           resetTemporizador@t:	; 1 bytes @ 0x2
  1574  0072                     	global	T0_start@c
  1575                           T0_start@c:	; 2 bytes @ 0x2
  1576  0072                     	global	delay@t
  1577                           delay@t:	; 2 bytes @ 0x2
  1578  0072                     	global	___awdiv@divisor
  1579                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1580  0072                     	global	___awmod@divisor
  1581                           ___awmod@divisor:	; 2 bytes @ 0x2
  1582  0072                     	ds	1
  1583  0072                     ??_habTemporizador:	; 1 bytes @ 0x3
  1584  0073                     	ds	1
  1585  0073                     ??_T0_start:	; 1 bytes @ 0x4
  1586  0074                     ??_T0_status:	; 1 bytes @ 0x4
  1587  0074                     ??_delay:	; 1 bytes @ 0x4
  1588  0074                     	global	lcd_instReg@i
  1589                           lcd_instReg@i:	; 1 bytes @ 0x4
  1590  0074                     	global	lcd_dataReg@d
  1591                           lcd_dataReg@d:	; 1 bytes @ 0x4
  1592  0074                     	global	habTemporizador@t
  1593                           habTemporizador@t:	; 1 bytes @ 0x4
  1594  0074                     	global	___awdiv@dividend
  1595                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1596  0074                     	global	___awmod@dividend
  1597                           ___awmod@dividend:	; 2 bytes @ 0x4
  1598  0074                     	ds	1
  1599  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  1600  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  1601  0075                     	global	lcd_lincol@col
  1602                           lcd_lincol@col:	; 1 bytes @ 0x5
  1603  0075                     	ds	1
  1604  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  1605  0076                     ??___awdiv:	; 1 bytes @ 0x6
  1606  0076                     ??___awmod:	; 1 bytes @ 0x6
  1607  0076                     	ds	1
  1608  0076                     	global	lcd_lincol@lin
  1609                           lcd_lincol@lin:	; 1 bytes @ 0x7
  1610  0077                     	global	___awmod@counter
  1611                           ___awmod@counter:	; 1 bytes @ 0x7
  1612  0077                     	ds	1
  1613  0077                     ?_lcd_print:	; 1 bytes @ 0x8
  1614  0078                     	global	lcd_print@col
  1615                           lcd_print@col:	; 1 bytes @ 0x8
  1616  0078                     	global	___awmod@sign
  1617                           ___awmod@sign:	; 1 bytes @ 0x8
  1618  0078                     	ds	1
  1619  0078                     	global	lcd_print@str
  1620                           lcd_print@str:	; 1 bytes @ 0x9
  1621  0079                     	global	temporizar@t
  1622                           temporizar@t:	; 1 bytes @ 0x9
  1623  0079                     	ds	1
  1624  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1625                           global __pcstackBANK0
  1626                           __pcstackBANK0:
  1627  003E                     ??_lcd_print:	; 1 bytes @ 0x0
  1628  003E                     ??_temporizar:	; 1 bytes @ 0x0
  1629  003E                     	global	___awdiv@counter
  1630                           ___awdiv@counter:	; 1 bytes @ 0x0
  1631  003E                     	ds	1
  1632  003E                     	global	lcd_print@pos
  1633                           lcd_print@pos:	; 1 bytes @ 0x1
  1634  003F                     	global	___awdiv@sign
  1635                           ___awdiv@sign:	; 1 bytes @ 0x1
  1636  003F                     	ds	1
  1637  003F                     	global	lcd_print@lin
  1638                           lcd_print@lin:	; 1 bytes @ 0x2
  1639  0040                     	global	___awdiv@quotient
  1640                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1641  0040                     	ds	2
  1642  0040                     ?_lcd_num:	; 1 bytes @ 0x4
  1643  0042                     	global	lcd_num@col
  1644                           lcd_num@col:	; 1 bytes @ 0x4
  1645  0042                     	ds	1
  1646  0042                     	global	lcd_num@num
  1647                           lcd_num@num:	; 2 bytes @ 0x5
  1648  0043                     	ds	2
  1649  0043                     	global	lcd_num@tam
  1650                           lcd_num@tam:	; 1 bytes @ 0x7
  1651  0045                     	ds	1
  1652  0045                     ??_lcd_num:	; 1 bytes @ 0x8
  1653  0046                     	ds	3
  1654  0046                     	global	lcd_num@lin
  1655                           lcd_num@lin:	; 1 bytes @ 0xB
  1656  0049                     	ds	1
  1657  0049                     	global	lcd_num@size
  1658                           lcd_num@size:	; 1 bytes @ 0xC
  1659  004A                     	ds	1
  1660  004A                     	global	lcd_num@sinal
  1661                           lcd_num@sinal:	; 1 bytes @ 0xD
  1662  004B                     	ds	1
  1663  004B                     	global	lcd_num@div
  1664                           lcd_num@div:	; 2 bytes @ 0xE
  1665  004C                     	ds	2
  1666  004C                     ??_main:	; 1 bytes @ 0x10
  1667  004E                     	ds	4
  1668  004E                     ;!
  1669                           ;!Data Sizes:
  1670                           ;!    Strings     17
  1671                           ;!    Constant    0
  1672                           ;!    Data        0
  1673                           ;!    BSS         32
  1674                           ;!    Persistent  0
  1675                           ;!    Stack       0
  1676                           ;!
  1677                           ;!Auto Spaces:
  1678                           ;!    Space          Size  Autos    Used
  1679                           ;!    COMMON           14     10      12
  1680                           ;!    BANK0            80     20      50
  1681                           ;!    BANK1            80      0       0
  1682                           ;!    BANK3            96      0       0
  1683                           ;!    BANK2            96      0       0
  1684                           
  1685                           ;!
  1686                           ;!Pointer List with Targets:
  1687                           ;!
  1688                           ;!    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  1689                           ;!		 -> tempo(BANK0[24]), 
  1690                           ;!
  1691                           ;!    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  1692                           ;!		 -> tempo(BANK0[24]), 
  1693                           ;!
  1694                           ;!    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
  1695                           ;!		 -> tempo(BANK0[24]), 
  1696                           ;!
  1697                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  1698                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1699                           ;!
  1700                           
  1701                           
  1702                           ;!
  1703                           ;!Critical Paths under _main in COMMON
  1704                           ;!
  1705                           ;!    _main->_lcd_print
  1706                           ;!    _main->_temporizar
  1707                           ;!    _temporizar->___awmod
  1708                           ;!    _lcd_print->_lcd_lincol
  1709                           ;!    _lcd_num->___awmod
  1710                           ;!    _lcd_lincol->_lcd_instReg
  1711                           ;!    _lcd_init->_delay
  1712                           ;!    _lcd_init->_lcd_instReg
  1713                           ;!
  1714                           ;!Critical Paths under _isr in COMMON
  1715                           ;!
  1716                           ;!    None.
  1717                           ;!
  1718                           ;!Critical Paths under _main in BANK0
  1719                           ;!
  1720                           ;!    _main->_lcd_num
  1721                           ;!    _lcd_num->___awdiv
  1722                           ;!
  1723                           ;!Critical Paths under _isr in BANK0
  1724                           ;!
  1725                           ;!    None.
  1726                           ;!
  1727                           ;!Critical Paths under _main in BANK1
  1728                           ;!
  1729                           ;!    None.
  1730                           ;!
  1731                           ;!Critical Paths under _isr in BANK1
  1732                           ;!
  1733                           ;!    None.
  1734                           ;!
  1735                           ;!Critical Paths under _main in BANK3
  1736                           ;!
  1737                           ;!    None.
  1738                           ;!
  1739                           ;!Critical Paths under _isr in BANK3
  1740                           ;!
  1741                           ;!    None.
  1742                           ;!
  1743                           ;!Critical Paths under _main in BANK2
  1744                           ;!
  1745                           ;!    None.
  1746                           ;!
  1747                           ;!Critical Paths under _isr in BANK2
  1748                           ;!
  1749                           ;!    None.
  1750                           
  1751 ;;
  1752 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1753 ;;
  1754                           
  1755                           ;!
  1756                           ;!Call Graph Tables:
  1757                           ;!
  1758                           ;! ---------------------------------------------------------------------------------
  1759                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1760                           ;! ---------------------------------------------------------------------------------
  1761                           ;! (0) _main                                                 4     4      0    8568
  1762                           ;!                                             16 BANK0      4     4      0
  1763                           ;!                            _T0_init
  1764                           ;!                           _T0_start
  1765                           ;!                          _T0_status
  1766                           ;!                                 _b0
  1767                           ;!                                 _b1
  1768                           ;!                         _botao_init
  1769                           ;!                    _habTemporizador
  1770                           ;!                           _lcd_init
  1771                           ;!                            _lcd_num
  1772                           ;!                          _lcd_print
  1773                           ;!                  _resetTemporizador
  1774                           ;!                         _temporizar
  1775                           ;! ---------------------------------------------------------------------------------
  1776                           ;! (1) _temporizar                                           5     5      0    1278
  1777                           ;!                                              9 COMMON     1     1      0
  1778                           ;!                                              0 BANK0      4     4      0
  1779                           ;!                            ___awmod
  1780                           ;! ---------------------------------------------------------------------------------
  1781                           ;! (1) _resetTemporizador                                    1     1      0     195
  1782                           ;!                                              2 COMMON     1     1      0
  1783                           ;! ---------------------------------------------------------------------------------
  1784                           ;! (1) _lcd_print                                            5     3      2     940
  1785                           ;!                                              8 COMMON     2     0      2
  1786                           ;!                                              0 BANK0      3     3      0
  1787                           ;!                        _lcd_dataReg
  1788                           ;!                         _lcd_lincol
  1789                           ;! ---------------------------------------------------------------------------------
  1790                           ;! (1) _lcd_num                                             12     8      4    5292
  1791                           ;!                                              4 BANK0     12     8      4
  1792                           ;!                            ___awdiv
  1793                           ;!                            ___awmod
  1794                           ;!                        _lcd_dataReg
  1795                           ;!                         _lcd_lincol
  1796                           ;! ---------------------------------------------------------------------------------
  1797                           ;! (2) _lcd_lincol                                           3     2      1     372
  1798                           ;!                                              5 COMMON     3     2      1
  1799                           ;!                        _lcd_instReg
  1800                           ;! ---------------------------------------------------------------------------------
  1801                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1802                           ;!                                              2 COMMON     3     3      0
  1803                           ;! ---------------------------------------------------------------------------------
  1804                           ;! (2) ___awmod                                              7     3      4     904
  1805                           ;!                                              2 COMMON     7     3      4
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (2) ___awdiv                                              9     5      4    1165
  1808                           ;!                                              2 COMMON     5     1      4
  1809                           ;!                                              0 BANK0      4     4      0
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! (1) _lcd_init                                             0     0      0     427
  1812                           ;!                              _delay
  1813                           ;!                        _lcd_instReg
  1814                           ;! ---------------------------------------------------------------------------------
  1815                           ;! (3) _lcd_instReg                                          3     3      0     176
  1816                           ;!                                              2 COMMON     3     3      0
  1817                           ;! ---------------------------------------------------------------------------------
  1818                           ;! (2) _delay                                                3     1      2     251
  1819                           ;!                                              2 COMMON     3     1      2
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (1) _habTemporizador                                      3     2      1     262
  1822                           ;!                                              2 COMMON     3     2      1
  1823                           ;!                                 _b0 (ARG)
  1824                           ;!                                 _b1 (ARG)
  1825                           ;! ---------------------------------------------------------------------------------
  1826                           ;! (1) _botao_init                                           0     0      0       0
  1827                           ;! ---------------------------------------------------------------------------------
  1828                           ;! (1) _b1                                                   0     0      0       0
  1829                           ;! ---------------------------------------------------------------------------------
  1830                           ;! (1) _b0                                                   0     0      0       0
  1831                           ;! ---------------------------------------------------------------------------------
  1832                           ;! (1) _T0_status                                            2     0      2       0
  1833                           ;!                                              2 COMMON     2     0      2
  1834                           ;! ---------------------------------------------------------------------------------
  1835                           ;! (1) _T0_start                                             2     0      2     174
  1836                           ;!                                              2 COMMON     2     0      2
  1837                           ;! ---------------------------------------------------------------------------------
  1838                           ;! (1) _T0_init                                              0     0      0       0
  1839                           ;! ---------------------------------------------------------------------------------
  1840                           ;! Estimated maximum stack depth 3
  1841                           ;! ---------------------------------------------------------------------------------
  1842                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1843                           ;! ---------------------------------------------------------------------------------
  1844                           ;! (4) _isr                                                  2     2      0       0
  1845                           ;!                                              0 COMMON     2     2      0
  1846                           ;!                             _T0_int
  1847                           ;!                             _T1_int
  1848                           ;!                             _T2_int
  1849                           ;! ---------------------------------------------------------------------------------
  1850                           ;! (5) _T2_int                                               0     0      0       0
  1851                           ;! ---------------------------------------------------------------------------------
  1852                           ;! (5) _T1_int                                               0     0      0       0
  1853                           ;! ---------------------------------------------------------------------------------
  1854                           ;! (5) _T0_int                                               0     0      0       0
  1855                           ;! ---------------------------------------------------------------------------------
  1856                           ;! Estimated maximum stack depth 5
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;!
  1859                           ;! Call Graph Graphs:
  1860                           ;!
  1861                           ;! _main (ROOT)
  1862                           ;!   _T0_init
  1863                           ;!   _T0_start
  1864                           ;!   _T0_status
  1865                           ;!   _b0
  1866                           ;!   _b1
  1867                           ;!   _botao_init
  1868                           ;!   _habTemporizador
  1869                           ;!     _b0 (ARG)
  1870                           ;!     _b1 (ARG)
  1871                           ;!   _lcd_init
  1872                           ;!     _delay
  1873                           ;!     _lcd_instReg
  1874                           ;!   _lcd_num
  1875                           ;!     ___awdiv
  1876                           ;!     ___awmod
  1877                           ;!     _lcd_dataReg
  1878                           ;!     _lcd_lincol
  1879                           ;!       _lcd_instReg
  1880                           ;!   _lcd_print
  1881                           ;!     _lcd_dataReg
  1882                           ;!     _lcd_lincol
  1883                           ;!       _lcd_instReg
  1884                           ;!   _resetTemporizador
  1885                           ;!   _temporizar
  1886                           ;!     ___awmod
  1887                           ;!
  1888                           ;! _isr (ROOT)
  1889                           ;!   _T0_int
  1890                           ;!   _T1_int
  1891                           ;!   _T2_int
  1892                           ;!
  1893                           
  1894                           ;! Address spaces:
  1895                           
  1896                           ;!Name               Size   Autos  Total    Cost      Usage
  1897                           ;!BITCOMMON            E      0       0       0        0.0%
  1898                           ;!EEDATA             100      0       0       0        0.0%
  1899                           ;!NULL                 0      0       0       0        0.0%
  1900                           ;!CODE                 0      0       0       0        0.0%
  1901                           ;!COMMON               E      A       C       1       85.7%
  1902                           ;!BITSFR0              0      0       0       1        0.0%
  1903                           ;!SFR0                 0      0       0       1        0.0%
  1904                           ;!BITSFR1              0      0       0       2        0.0%
  1905                           ;!SFR1                 0      0       0       2        0.0%
  1906                           ;!STACK                0      0       0       2        0.0%
  1907                           ;!ABS                  0      0      3E       3        0.0%
  1908                           ;!BITBANK0            50      0       0       4        0.0%
  1909                           ;!BITSFR3              0      0       0       4        0.0%
  1910                           ;!SFR3                 0      0       0       4        0.0%
  1911                           ;!BANK0               50     14      32       5       62.5%
  1912                           ;!BITSFR2              0      0       0       5        0.0%
  1913                           ;!SFR2                 0      0       0       5        0.0%
  1914                           ;!BITBANK1            50      0       0       6        0.0%
  1915                           ;!BANK1               50      0       0       7        0.0%
  1916                           ;!BITBANK3            60      0       0       8        0.0%
  1917                           ;!BANK3               60      0       0       9        0.0%
  1918                           ;!BITBANK2            60      0       0      10        0.0%
  1919                           ;!BANK2               60      0       0      11        0.0%
  1920                           ;!DATA                 0      0      3E      12        0.0%
  1921                           
  1922                           	global	_main
  1923                           
  1924 ;; *************** function _main *****************
  1925 ;; Defined at:
  1926 ;;		line 17 in file "main.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;		None
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;		None
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : B00/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1940 ;;      Params:         0       0       0       0       0
  1941 ;;      Locals:         0       0       0       0       0
  1942 ;;      Temps:          0       4       0       0       0
  1943 ;;      Totals:         0       4       0       0       0
  1944 ;;Total ram usage:        4 bytes
  1945 ;; Hardware stack levels required when called:    5
  1946 ;; This function calls:
  1947 ;;		_T0_init
  1948 ;;		_T0_start
  1949 ;;		_T0_status
  1950 ;;		_b0
  1951 ;;		_b1
  1952 ;;		_botao_init
  1953 ;;		_habTemporizador
  1954 ;;		_lcd_init
  1955 ;;		_lcd_num
  1956 ;;		_lcd_print
  1957 ;;		_resetTemporizador
  1958 ;;		_temporizar
  1959 ;; This function is called by:
  1960 ;;		Startup code after reset
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1964                           	file	"main.c"
  1965                           	line	17
  1966                           global __pmaintext
  1967                           __pmaintext:	;psect for function _main
  1968  001E                     psect	maintext
  1969                           	file	"main.c"
  1970                           	line	17
  1971                           	global	__size_of_main
  1972                           	__size_of_main	equ	__end_of_main-_main
  1973  014F                     	
  1974                           _main:	
  1975  001E                     ;incstack = 0
  1976                           	opt	stack 3
  1977                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1978                           	line	19
  1979                           	
  1980                           l1824:	
  1981  001E                     ;main.c: 19:     lcd_init();
  1982                           	fcall	_lcd_init
  1983  001E  120A  118A  244C  120A  118A  	line	20
  1984                           ;main.c: 20:     T0_init();
  1985                           	fcall	_T0_init
  1986  0023  120A  118A  25A2  120A  118A  	line	21
  1987                           	
  1988                           l1826:	
  1989  0028                     ;main.c: 21:     botao_init();
  1990                           	fcall	_botao_init
  1991  0028  120A  118A  25F1  120A  118A  	line	23
  1992                           	
  1993                           l1828:	
  1994  002D                     ;main.c: 23:     lcd_print(0,0,"00:00      00:00");
  1995                           	clrf	(lcd_print@col)
  1996  002D  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1997  002E  3001               	bcf	status, 5	;RP0=0, select bank0
  1998  002F  1283               	bcf	status, 6	;RP1=0, select bank0
  1999  0030  1303               	movwf	(??_main+0)+0
  2000  0031  00CE               	movf	(??_main+0)+0,w
  2001  0032  084E               	movwf	(lcd_print@str)
  2002  0033  00F9               	movlw	low(0)
  2003  0034  3000               	fcall	_lcd_print
  2004  0035  120A  118A  248B  120A  118A  	line	24
  2005                           	
  2006                           l1830:	
  2007  003A                     ;main.c: 24:     lcd_print(1,0,"00:00      00:00");
  2008                           	clrf	(lcd_print@col)
  2009  003A  01F8               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2010  003B  3001               	bcf	status, 5	;RP0=0, select bank0
  2011  003C  1283               	bcf	status, 6	;RP1=0, select bank0
  2012  003D  1303               	movwf	(??_main+0)+0
  2013  003E  00CE               	movf	(??_main+0)+0,w
  2014  003F  084E               	movwf	(lcd_print@str)
  2015  0040  00F9               	movlw	low(01h)
  2016  0041  3001               	fcall	_lcd_print
  2017  0042  120A  118A  248B  120A  118A  	line	25
  2018                           	
  2019                           l1832:	
  2020  0047                     ;main.c: 25:     T0_start(1000);
  2021                           	movlw	0E8h
  2022  0047  30E8               	movwf	(T0_start@c)
  2023  0048  00F2               	movlw	03h
  2024  0049  3003               	movwf	((T0_start@c))+1
  2025  004A  00F3               	fcall	_T0_start
  2026  004B  120A  118A  25C2  120A  118A  	line	26
  2027                           	
  2028                           l1834:	
  2029  0050                     ;main.c: 26:     resetTemporizador( &tempo[0] );
  2030                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2031  0050  3026               	fcall	_resetTemporizador
  2032  0051  120A  118A  253B  120A  118A  	line	27
  2033                           	
  2034                           l1836:	
  2035  0056                     ;main.c: 27:     resetTemporizador( &tempo[1] );
  2036                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2037  0056  302C               	fcall	_resetTemporizador
  2038  0057  120A  118A  253B  120A  118A  	line	28
  2039                           	
  2040                           l1838:	
  2041  005C                     ;main.c: 28:     resetTemporizador( &tempo[2] );
  2042                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2043  005C  3032               	fcall	_resetTemporizador
  2044  005D  120A  118A  253B  120A  118A  	line	29
  2045                           	
  2046                           l1840:	
  2047  0062                     ;main.c: 29:     resetTemporizador( &tempo[3] );
  2048                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2049  0062  3038               	fcall	_resetTemporizador
  2050  0063  120A  118A  253B  120A  118A  	goto	l1842
  2051  0068  2869               	line	31
  2052                           ;main.c: 31:     while( 1 )
  2053                           	
  2054                           l31:	
  2055  0069                     	line	33
  2056                           	
  2057                           l1842:	
  2058  0069                     ;main.c: 32:     {;main.c: 33:         habTemporizador( &tempo[0], b0() );
  2059                           	fcall	_b0
  2060  0069  120A  118A  25EB  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2061  006E  1283               	bcf	status, 6	;RP1=0, select bank0
  2062  006F  1303               	movwf	(??_main+0)+0
  2063  0070  00CE               	movf	(??_main+0)+0,w
  2064  0071  084E               	movwf	(habTemporizador@h)
  2065  0072  00F2               	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2066  0073  3026               	fcall	_habTemporizador
  2067  0074  120A  118A  25CC  120A  118A  	line	34
  2068                           	
  2069                           l1844:	
  2070  0079                     ;main.c: 34:         habTemporizador( &tempo[1], b1() );
  2071                           	fcall	_b1
  2072  0079  120A  118A  25E5  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2073  007E  1283               	bcf	status, 6	;RP1=0, select bank0
  2074  007F  1303               	movwf	(??_main+0)+0
  2075  0080  00CE               	movf	(??_main+0)+0,w
  2076  0081  084E               	movwf	(habTemporizador@h)
  2077  0082  00F2               	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2078  0083  302C               	fcall	_habTemporizador
  2079  0084  120A  118A  25CC  120A  118A  	line	36
  2080                           	
  2081                           l1846:	
  2082  0089                     ;main.c: 36:         if( T0_status() == 0 )
  2083                           	fcall	_T0_status
  2084  0089  120A  118A  25DD  120A  118A  	movf	((0+(?_T0_status))),w
  2085  008E  0872               iorwf	((1+(?_T0_status))),w
  2086  008F  0473               	btfss	status,2
  2087  0090  1D03               	goto	u1471
  2088  0091  2893               	goto	u1470
  2089  0092  2894               u1471:
  2090  0093                     	goto	l1842
  2091  0093  2869               u1470:
  2092  0094                     	line	38
  2093                           	
  2094                           l1848:	
  2095  0094                     ;main.c: 37:         {;main.c: 38:             T0_start(1000);
  2096                           	movlw	0E8h
  2097  0094  30E8               	movwf	(T0_start@c)
  2098  0095  00F2               	movlw	03h
  2099  0096  3003               	movwf	((T0_start@c))+1
  2100  0097  00F3               	fcall	_T0_start
  2101  0098  120A  118A  25C2  120A  118A  	line	40
  2102                           	
  2103                           l1850:	
  2104  009D                     ;main.c: 40:             temporizar( &tempo[0] );
  2105                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2106  009D  3026               	fcall	_temporizar
  2107  009E  120A  118A  225B  120A  118A  	line	41
  2108                           	
  2109                           l1852:	
  2110  00A3                     ;main.c: 41:             temporizar( &tempo[1] );
  2111                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2112  00A3  302C               	fcall	_temporizar
  2113  00A4  120A  118A  225B  120A  118A  	line	42
  2114                           	
  2115                           l1854:	
  2116  00A9                     ;main.c: 42:             temporizar( &tempo[2] );
  2117                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2118  00A9  3032               	fcall	_temporizar
  2119  00AA  120A  118A  225B  120A  118A  	line	43
  2120                           	
  2121                           l1856:	
  2122  00AF                     ;main.c: 43:             temporizar( &tempo[3] );
  2123                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2124  00AF  3038               	fcall	_temporizar
  2125  00B0  120A  118A  225B  120A  118A  	line	45
  2126                           	
  2127                           l1858:	
  2128  00B5                     ;main.c: 45:             lcd_num(0, 0, tempo[0].hor, 2);
  2129                           	bcf	status, 5	;RP0=0, select bank0
  2130  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2131  00B6  1303               	clrf	(lcd_num@col)
  2132  00B7  01C2               	movf	0+(_tempo)+03h,w
  2133  00B8  0829               	movwf	(??_main+0)+0
  2134  00B9  00CE               	clrf	(??_main+0)+0+1
  2135  00BA  01CF               	movf	0+(??_main+0)+0,w
  2136  00BB  084E               	movwf	(lcd_num@num)
  2137  00BC  00C3               	movf	1+(??_main+0)+0,w
  2138  00BD  084F               	movwf	(lcd_num@num+1)
  2139  00BE  00C4               	movlw	low(02h)
  2140  00BF  3002               	movwf	(??_main+2)+0
  2141  00C0  00D0               	movf	(??_main+2)+0,w
  2142  00C1  0850               	movwf	(lcd_num@tam)
  2143  00C2  00C5               	movlw	low(0)
  2144  00C3  3000               	fcall	_lcd_num
  2145  00C4  120A  118A  216D  120A  118A  	line	46
  2146                           	
  2147                           l1860:	
  2148  00C9                     ;main.c: 46:             lcd_num(0, 3, tempo[0].min, 2);
  2149                           	movlw	low(03h)
  2150  00C9  3003               	bcf	status, 5	;RP0=0, select bank0
  2151  00CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2152  00CB  1303               	movwf	(??_main+0)+0
  2153  00CC  00CE               	movf	(??_main+0)+0,w
  2154  00CD  084E               	movwf	(lcd_num@col)
  2155  00CE  00C2               	movf	0+(_tempo)+02h,w
  2156  00CF  0828               	movwf	(??_main+1)+0
  2157  00D0  00CF               	clrf	(??_main+1)+0+1
  2158  00D1  01D0               	movf	0+(??_main+1)+0,w
  2159  00D2  084F               	movwf	(lcd_num@num)
  2160  00D3  00C3               	movf	1+(??_main+1)+0,w
  2161  00D4  0850               	movwf	(lcd_num@num+1)
  2162  00D5  00C4               	movlw	low(02h)
  2163  00D6  3002               	movwf	(??_main+3)+0
  2164  00D7  00D1               	movf	(??_main+3)+0,w
  2165  00D8  0851               	movwf	(lcd_num@tam)
  2166  00D9  00C5               	movlw	low(0)
  2167  00DA  3000               	fcall	_lcd_num
  2168  00DB  120A  118A  216D  120A  118A  	line	48
  2169                           	
  2170                           l1862:	
  2171  00E0                     ;main.c: 48:             lcd_num(0, 11, tempo[1].min, 2);
  2172                           	movlw	low(0Bh)
  2173  00E0  300B               	bcf	status, 5	;RP0=0, select bank0
  2174  00E1  1283               	bcf	status, 6	;RP1=0, select bank0
  2175  00E2  1303               	movwf	(??_main+0)+0
  2176  00E3  00CE               	movf	(??_main+0)+0,w
  2177  00E4  084E               	movwf	(lcd_num@col)
  2178  00E5  00C2               	movf	0+(_tempo)+08h,w
  2179  00E6  082E               	movwf	(??_main+1)+0
  2180  00E7  00CF               	clrf	(??_main+1)+0+1
  2181  00E8  01D0               	movf	0+(??_main+1)+0,w
  2182  00E9  084F               	movwf	(lcd_num@num)
  2183  00EA  00C3               	movf	1+(??_main+1)+0,w
  2184  00EB  0850               	movwf	(lcd_num@num+1)
  2185  00EC  00C4               	movlw	low(02h)
  2186  00ED  3002               	movwf	(??_main+3)+0
  2187  00EE  00D1               	movf	(??_main+3)+0,w
  2188  00EF  0851               	movwf	(lcd_num@tam)
  2189  00F0  00C5               	movlw	low(0)
  2190  00F1  3000               	fcall	_lcd_num
  2191  00F2  120A  118A  216D  120A  118A  	line	49
  2192                           	
  2193                           l1864:	
  2194  00F7                     ;main.c: 49:             lcd_num(0, 14, tempo[1].seg, 2);
  2195                           	movlw	low(0Eh)
  2196  00F7  300E               	bcf	status, 5	;RP0=0, select bank0
  2197  00F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2198  00F9  1303               	movwf	(??_main+0)+0
  2199  00FA  00CE               	movf	(??_main+0)+0,w
  2200  00FB  084E               	movwf	(lcd_num@col)
  2201  00FC  00C2               	movf	0+(_tempo)+07h,w
  2202  00FD  082D               	movwf	(??_main+1)+0
  2203  00FE  00CF               	clrf	(??_main+1)+0+1
  2204  00FF  01D0               	movf	0+(??_main+1)+0,w
  2205  0100  084F               	movwf	(lcd_num@num)
  2206  0101  00C3               	movf	1+(??_main+1)+0,w
  2207  0102  0850               	movwf	(lcd_num@num+1)
  2208  0103  00C4               	movlw	low(02h)
  2209  0104  3002               	movwf	(??_main+3)+0
  2210  0105  00D1               	movf	(??_main+3)+0,w
  2211  0106  0851               	movwf	(lcd_num@tam)
  2212  0107  00C5               	movlw	low(0)
  2213  0108  3000               	fcall	_lcd_num
  2214  0109  120A  118A  216D  120A  118A  	line	51
  2215                           	
  2216                           l1866:	
  2217  010E                     ;main.c: 51:             lcd_num(1, 0, tempo[2].min, 2);
  2218                           	bcf	status, 5	;RP0=0, select bank0
  2219  010E  1283               	bcf	status, 6	;RP1=0, select bank0
  2220  010F  1303               	clrf	(lcd_num@col)
  2221  0110  01C2               	movf	0+(_tempo)+0Eh,w
  2222  0111  0834               	movwf	(??_main+0)+0
  2223  0112  00CE               	clrf	(??_main+0)+0+1
  2224  0113  01CF               	movf	0+(??_main+0)+0,w
  2225  0114  084E               	movwf	(lcd_num@num)
  2226  0115  00C3               	movf	1+(??_main+0)+0,w
  2227  0116  084F               	movwf	(lcd_num@num+1)
  2228  0117  00C4               	movlw	low(02h)
  2229  0118  3002               	movwf	(??_main+2)+0
  2230  0119  00D0               	movf	(??_main+2)+0,w
  2231  011A  0850               	movwf	(lcd_num@tam)
  2232  011B  00C5               	movlw	low(01h)
  2233  011C  3001               	fcall	_lcd_num
  2234  011D  120A  118A  216D  120A  118A  	line	52
  2235                           	
  2236                           l1868:	
  2237  0122                     ;main.c: 52:             lcd_num(1, 3, tempo[2].seg, 2);
  2238                           	movlw	low(03h)
  2239  0122  3003               	bcf	status, 5	;RP0=0, select bank0
  2240  0123  1283               	bcf	status, 6	;RP1=0, select bank0
  2241  0124  1303               	movwf	(??_main+0)+0
  2242  0125  00CE               	movf	(??_main+0)+0,w
  2243  0126  084E               	movwf	(lcd_num@col)
  2244  0127  00C2               	movf	0+(_tempo)+0Dh,w
  2245  0128  0833               	movwf	(??_main+1)+0
  2246  0129  00CF               	clrf	(??_main+1)+0+1
  2247  012A  01D0               	movf	0+(??_main+1)+0,w
  2248  012B  084F               	movwf	(lcd_num@num)
  2249  012C  00C3               	movf	1+(??_main+1)+0,w
  2250  012D  0850               	movwf	(lcd_num@num+1)
  2251  012E  00C4               	movlw	low(02h)
  2252  012F  3002               	movwf	(??_main+3)+0
  2253  0130  00D1               	movf	(??_main+3)+0,w
  2254  0131  0851               	movwf	(lcd_num@tam)
  2255  0132  00C5               	movlw	low(01h)
  2256  0133  3001               	fcall	_lcd_num
  2257  0134  120A  118A  216D  120A  118A  	line	54
  2258                           	
  2259                           l1870:	
  2260  0139                     ;main.c: 54:             lcd_num(1, 11, tempo[3].min, 2);
  2261                           	movlw	low(0Bh)
  2262  0139  300B               	bcf	status, 5	;RP0=0, select bank0
  2263  013A  1283               	bcf	status, 6	;RP1=0, select bank0
  2264  013B  1303               	movwf	(??_main+0)+0
  2265  013C  00CE               	movf	(??_main+0)+0,w
  2266  013D  084E               	movwf	(lcd_num@col)
  2267  013E  00C2               	movf	0+(_tempo)+014h,w
  2268  013F  083A               	movwf	(??_main+1)+0
  2269  0140  00CF               	clrf	(??_main+1)+0+1
  2270  0141  01D0               	movf	0+(??_main+1)+0,w
  2271  0142  084F               	movwf	(lcd_num@num)
  2272  0143  00C3               	movf	1+(??_main+1)+0,w
  2273  0144  0850               	movwf	(lcd_num@num+1)
  2274  0145  00C4               	movlw	low(02h)
  2275  0146  3002               	movwf	(??_main+3)+0
  2276  0147  00D1               	movf	(??_main+3)+0,w
  2277  0148  0851               	movwf	(lcd_num@tam)
  2278  0149  00C5               	movlw	low(01h)
  2279  014A  3001               	fcall	_lcd_num
  2280  014B  120A  118A  216D  120A  118A  	line	55
  2281                           	
  2282                           l1872:	
  2283  0150                     ;main.c: 55:             lcd_num(1, 14, tempo[3].seg, 2);
  2284                           	movlw	low(0Eh)
  2285  0150  300E               	bcf	status, 5	;RP0=0, select bank0
  2286  0151  1283               	bcf	status, 6	;RP1=0, select bank0
  2287  0152  1303               	movwf	(??_main+0)+0
  2288  0153  00CE               	movf	(??_main+0)+0,w
  2289  0154  084E               	movwf	(lcd_num@col)
  2290  0155  00C2               	movf	0+(_tempo)+013h,w
  2291  0156  0839               	movwf	(??_main+1)+0
  2292  0157  00CF               	clrf	(??_main+1)+0+1
  2293  0158  01D0               	movf	0+(??_main+1)+0,w
  2294  0159  084F               	movwf	(lcd_num@num)
  2295  015A  00C3               	movf	1+(??_main+1)+0,w
  2296  015B  0850               	movwf	(lcd_num@num+1)
  2297  015C  00C4               	movlw	low(02h)
  2298  015D  3002               	movwf	(??_main+3)+0
  2299  015E  00D1               	movf	(??_main+3)+0,w
  2300  015F  0851               	movwf	(lcd_num@tam)
  2301  0160  00C5               	movlw	low(01h)
  2302  0161  3001               	fcall	_lcd_num
  2303  0162  120A  118A  216D  120A  118A  	goto	l1842
  2304  0167  2869               	line	57
  2305                           ;main.c: 57:         }
  2306                           	
  2307                           l32:	
  2308  0168                     	goto	l1842
  2309  0168  2869               	line	58
  2310                           ;main.c: 58:     }
  2311                           	
  2312                           l33:	
  2313  0169                     	goto	l1842
  2314  0169  2869               	
  2315                           l34:	
  2316  016A                     	line	59
  2317                           	
  2318                           l35:	
  2319  016A                     	global	start
  2320                           	ljmp	start
  2321  016A  120A  118A  280C   	opt stack 0
  2322                           GLOBAL	__end_of_main
  2323                           	__end_of_main:
  2324  016D                     	signat	_main,89
  2325                           	global	_temporizar
  2326                           
  2327 ;; *************** function _temporizar *****************
  2328 ;; Defined at:
  2329 ;;		line 13 in file "tempo.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  t               1    wreg     PTR struct temporizadorT
  2332 ;;		 -> tempo(24), 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  t               1    9[COMMON] PTR struct temporizadorT
  2335 ;;		 -> tempo(24), 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0
  2347 ;;      Temps:          0       4       0       0       0
  2348 ;;      Totals:         1       4       0       0       0
  2349 ;;Total ram usage:        5 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    3
  2352 ;; This function calls:
  2353 ;;		___awmod
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2359                           	file	"tempo.c"
  2360                           	line	13
  2361                           global __ptext1
  2362                           __ptext1:	;psect for function _temporizar
  2363  025B                     psect	text1
  2364                           	file	"tempo.c"
  2365                           	line	13
  2366                           	global	__size_of_temporizar
  2367                           	__size_of_temporizar	equ	__end_of_temporizar-_temporizar
  2368  0090                     	
  2369                           _temporizar:	
  2370  025B                     ;incstack = 0
  2371                           	opt	stack 4
  2372                           ; Regs used in _temporizar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2373                           ;temporizar@t stored from wreg
  2374                           	movwf	(temporizar@t)
  2375  025B  00F9               	line	15
  2376                           	
  2377                           l1588:	
  2378  025C                     ;tempo.c: 13: void temporizar( struct temporizadorT * t );tempo.c: 14: {;tempo.c: 15:   
                                   if( t->hab )
  2379                           	movf	(temporizar@t),w
  2380  025C  0879               	movwf	fsr0
  2381  025D  0084               	bcf	status, 7	;select IRP bank0
  2382  025E  1383               	movf	(indf),w
  2383  025F  0800               	btfsc	status,2
  2384  0260  1903               	goto	u1071
  2385  0261  2A63               	goto	u1070
  2386  0262  2A64               u1071:
  2387  0263                     	goto	l208
  2388  0263  2AEA               u1070:
  2389  0264                     	line	17
  2390                           	
  2391                           l1590:	
  2392  0264                     ;tempo.c: 16:     {;tempo.c: 17:         t->seg = ++t->seg % 60;
  2393                           	movlw	03Ch
  2394  0264  303C               	movwf	(___awmod@divisor)
  2395  0265  00F2               	movlw	0
  2396  0266  3000               	movwf	((___awmod@divisor))+1
  2397  0267  00F3               	movlw	low(01h)
  2398  0268  3001               	bcf	status, 5	;RP0=0, select bank0
  2399  0269  1283               	bcf	status, 6	;RP1=0, select bank0
  2400  026A  1303               	movwf	(??_temporizar+0)+0
  2401  026B  00BE               	incf	(temporizar@t),w
  2402  026C  0A79               	movwf	fsr0
  2403  026D  0084               	movf	(??_temporizar+0)+0,w
  2404  026E  083E               	addwf	indf,f
  2405  026F  0780               	movf	(indf),w
  2406  0270  0800               	movwf	(??_temporizar+1)+0
  2407  0271  00BF               	clrf	(??_temporizar+1)+0+1
  2408  0272  01C0               	movf	0+(??_temporizar+1)+0,w
  2409  0273  083F               	movwf	(___awmod@dividend)
  2410  0274  00F4               	movf	1+(??_temporizar+1)+0,w
  2411  0275  0840               	movwf	(___awmod@dividend+1)
  2412  0276  00F5               	fcall	___awmod
  2413  0277  120A  118A  23E9  120A  118A  	movf	(0+(?___awmod)),w
  2414  027C  0872               	bcf	status, 5	;RP0=0, select bank0
  2415  027D  1283               	bcf	status, 6	;RP1=0, select bank0
  2416  027E  1303               	movwf	(??_temporizar+3)+0
  2417  027F  00C1               	incf	(temporizar@t),w
  2418  0280  0A79               	movwf	fsr0
  2419  0281  0084               	movf	(??_temporizar+3)+0,w
  2420  0282  0841               	bcf	status, 7	;select IRP bank0
  2421  0283  1383               	movwf	indf
  2422  0284  0080               	line	18
  2423                           	
  2424                           l1592:	
  2425  0285                     ;tempo.c: 18:         if( t->seg == 0 )
  2426                           	incf	(temporizar@t),w
  2427  0285  0A79               	movwf	fsr0
  2428  0286  0084               	movf	(indf),w
  2429  0287  0800               	btfss	status,2
  2430  0288  1D03               	goto	u1081
  2431  0289  2A8B               	goto	u1080
  2432  028A  2A8C               u1081:
  2433  028B                     	goto	l208
  2434  028B  2AEA               u1080:
  2435  028C                     	line	20
  2436                           	
  2437                           l1594:	
  2438  028C                     ;tempo.c: 19:         {;tempo.c: 20:             t->min = ++t->min % 60;
  2439                           	movlw	03Ch
  2440  028C  303C               	movwf	(___awmod@divisor)
  2441  028D  00F2               	movlw	0
  2442  028E  3000               	movwf	((___awmod@divisor))+1
  2443  028F  00F3               	movlw	low(01h)
  2444  0290  3001               	movwf	(??_temporizar+0)+0
  2445  0291  00BE               	movf	(temporizar@t),w
  2446  0292  0879               	addlw	02h
  2447  0293  3E02               	movwf	fsr0
  2448  0294  0084               	movf	(??_temporizar+0)+0,w
  2449  0295  083E               	addwf	indf,f
  2450  0296  0780               	movf	(indf),w
  2451  0297  0800               	movwf	(??_temporizar+1)+0
  2452  0298  00BF               	clrf	(??_temporizar+1)+0+1
  2453  0299  01C0               	movf	0+(??_temporizar+1)+0,w
  2454  029A  083F               	movwf	(___awmod@dividend)
  2455  029B  00F4               	movf	1+(??_temporizar+1)+0,w
  2456  029C  0840               	movwf	(___awmod@dividend+1)
  2457  029D  00F5               	fcall	___awmod
  2458  029E  120A  118A  23E9  120A  118A  	movf	(0+(?___awmod)),w
  2459  02A3  0872               	bcf	status, 5	;RP0=0, select bank0
  2460  02A4  1283               	bcf	status, 6	;RP1=0, select bank0
  2461  02A5  1303               	movwf	(??_temporizar+3)+0
  2462  02A6  00C1               	movf	(temporizar@t),w
  2463  02A7  0879               	addlw	02h
  2464  02A8  3E02               	movwf	fsr0
  2465  02A9  0084               	movf	(??_temporizar+3)+0,w
  2466  02AA  0841               	bcf	status, 7	;select IRP bank0
  2467  02AB  1383               	movwf	indf
  2468  02AC  0080               	line	21
  2469                           	
  2470                           l1596:	
  2471  02AD                     ;tempo.c: 21:             if( t->min == 0 )
  2472                           	movf	(temporizar@t),w
  2473  02AD  0879               	addlw	02h
  2474  02AE  3E02               	movwf	fsr0
  2475  02AF  0084               	movf	(indf),w
  2476  02B0  0800               	btfss	status,2
  2477  02B1  1D03               	goto	u1091
  2478  02B2  2AB4               	goto	u1090
  2479  02B3  2AB5               u1091:
  2480  02B4                     	goto	l208
  2481  02B4  2AEA               u1090:
  2482  02B5                     	line	23
  2483                           	
  2484                           l1598:	
  2485  02B5                     ;tempo.c: 22:             {;tempo.c: 23:                 t->hor = ++t->hor % 24;
  2486                           	movlw	018h
  2487  02B5  3018               	movwf	(___awmod@divisor)
  2488  02B6  00F2               	movlw	0
  2489  02B7  3000               	movwf	((___awmod@divisor))+1
  2490  02B8  00F3               	movlw	low(01h)
  2491  02B9  3001               	movwf	(??_temporizar+0)+0
  2492  02BA  00BE               	movf	(temporizar@t),w
  2493  02BB  0879               	addlw	03h
  2494  02BC  3E03               	movwf	fsr0
  2495  02BD  0084               	movf	(??_temporizar+0)+0,w
  2496  02BE  083E               	addwf	indf,f
  2497  02BF  0780               	movf	(indf),w
  2498  02C0  0800               	movwf	(??_temporizar+1)+0
  2499  02C1  00BF               	clrf	(??_temporizar+1)+0+1
  2500  02C2  01C0               	movf	0+(??_temporizar+1)+0,w
  2501  02C3  083F               	movwf	(___awmod@dividend)
  2502  02C4  00F4               	movf	1+(??_temporizar+1)+0,w
  2503  02C5  0840               	movwf	(___awmod@dividend+1)
  2504  02C6  00F5               	fcall	___awmod
  2505  02C7  120A  118A  23E9  120A  118A  	movf	(0+(?___awmod)),w
  2506  02CC  0872               	bcf	status, 5	;RP0=0, select bank0
  2507  02CD  1283               	bcf	status, 6	;RP1=0, select bank0
  2508  02CE  1303               	movwf	(??_temporizar+3)+0
  2509  02CF  00C1               	movf	(temporizar@t),w
  2510  02D0  0879               	addlw	03h
  2511  02D1  3E03               	movwf	fsr0
  2512  02D2  0084               	movf	(??_temporizar+3)+0,w
  2513  02D3  0841               	bcf	status, 7	;select IRP bank0
  2514  02D4  1383               	movwf	indf
  2515  02D5  0080               	line	24
  2516                           	
  2517                           l1600:	
  2518  02D6                     ;tempo.c: 24:                 if(t->hor == 0)
  2519                           	movf	(temporizar@t),w
  2520  02D6  0879               	addlw	03h
  2521  02D7  3E03               	movwf	fsr0
  2522  02D8  0084               	movf	(indf),w
  2523  02D9  0800               	btfss	status,2
  2524  02DA  1D03               	goto	u1101
  2525  02DB  2ADD               	goto	u1100
  2526  02DC  2ADE               u1101:
  2527  02DD                     	goto	l208
  2528  02DD  2AEA               u1100:
  2529  02DE                     	line	26
  2530                           	
  2531                           l1602:	
  2532  02DE                     ;tempo.c: 25:                 {;tempo.c: 26:                     t->dia++;
  2533                           	movf	(temporizar@t),w
  2534  02DE  0879               	addlw	04h
  2535  02DF  3E04               	movwf	fsr0
  2536  02E0  0084               	movlw	01h
  2537  02E1  3001               	addwf	indf,f
  2538  02E2  0780               	incf	fsr0,f
  2539  02E3  0A84               	skipnc
  2540  02E4  1803               	incf	indf,f
  2541  02E5  0A80               	goto	l208
  2542  02E6  2AEA               	line	27
  2543                           ;tempo.c: 27:                 }
  2544                           	
  2545                           l207:	
  2546  02E7                     	goto	l208
  2547  02E7  2AEA               	line	28
  2548                           ;tempo.c: 28:             }
  2549                           	
  2550                           l206:	
  2551  02E8                     	goto	l208
  2552  02E8  2AEA               	line	29
  2553                           ;tempo.c: 29:         }
  2554                           	
  2555                           l205:	
  2556  02E9                     	goto	l208
  2557  02E9  2AEA               	line	30
  2558                           ;tempo.c: 30:     }
  2559                           	
  2560                           l204:	
  2561  02EA                     	line	31
  2562                           	
  2563                           l208:	
  2564  02EA                     	return
  2565  02EA  0008               	opt stack 0
  2566                           GLOBAL	__end_of_temporizar
  2567                           	__end_of_temporizar:
  2568  02EB                     	signat	_temporizar,4217
  2569                           	global	_resetTemporizador
  2570                           
  2571 ;; *************** function _resetTemporizador *****************
  2572 ;; Defined at:
  2573 ;;		line 39 in file "tempo.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  t               1    wreg     PTR struct temporizadorT
  2576 ;;		 -> tempo(24), 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  t               1    2[COMMON] PTR struct temporizadorT
  2579 ;;		 -> tempo(24), 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  1    wreg      void 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         0       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0
  2591 ;;      Temps:          0       0       0       0       0
  2592 ;;      Totals:         1       0       0       0       0
  2593 ;;Total ram usage:        1 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2603                           	line	39
  2604                           global __ptext2
  2605                           __ptext2:	;psect for function _resetTemporizador
  2606  053B                     psect	text2
  2607                           	file	"tempo.c"
  2608                           	line	39
  2609                           	global	__size_of_resetTemporizador
  2610                           	__size_of_resetTemporizador	equ	__end_of_resetTemporizador-_resetTemporizador
  2611  0017                     	
  2612                           _resetTemporizador:	
  2613  053B                     ;incstack = 0
  2614                           	opt	stack 5
  2615                           ; Regs used in _resetTemporizador: [wreg-fsr0h+status,2+status,0]
  2616                           ;resetTemporizador@t stored from wreg
  2617                           	movwf	(resetTemporizador@t)
  2618  053B  00F2               	line	41
  2619                           	
  2620                           l1110:	
  2621  053C                     ;tempo.c: 39: void resetTemporizador( struct temporizadorT * t );tempo.c: 40: {;tempo.c:
                                  41:     t->hab = 0;
  2622                           	movf	(resetTemporizador@t),w
  2623  053C  0872               	movwf	fsr0
  2624  053D  0084               	bcf	status, 7	;select IRP bank0
  2625  053E  1383               	clrf	indf
  2626  053F  0180               	line	42
  2627                           ;tempo.c: 42:     t->seg = 0;
  2628                           	incf	(resetTemporizador@t),w
  2629  0540  0A72               	movwf	fsr0
  2630  0541  0084               	clrf	indf
  2631  0542  0180               	line	43
  2632                           	
  2633                           l1112:	
  2634  0543                     ;tempo.c: 43:     t->min = 0;
  2635                           	movf	(resetTemporizador@t),w
  2636  0543  0872               	addlw	02h
  2637  0544  3E02               	movwf	fsr0
  2638  0545  0084               	clrf	indf
  2639  0546  0180               	line	44
  2640                           	
  2641                           l1114:	
  2642  0547                     ;tempo.c: 44:     t->hor = 0;
  2643                           	movf	(resetTemporizador@t),w
  2644  0547  0872               	addlw	03h
  2645  0548  3E03               	movwf	fsr0
  2646  0549  0084               	clrf	indf
  2647  054A  0180               	line	45
  2648                           	
  2649                           l1116:	
  2650  054B                     ;tempo.c: 45:     t->dia = 0;
  2651                           	movf	(resetTemporizador@t),w
  2652  054B  0872               	addlw	04h
  2653  054C  3E04               	movwf	fsr0
  2654  054D  0084               	clrf	indf
  2655  054E  0180               	incf	fsr0,f
  2656  054F  0A84               	clrf	indf
  2657  0550  0180               	line	46
  2658                           	
  2659                           l214:	
  2660  0551                     	return
  2661  0551  0008               	opt stack 0
  2662                           GLOBAL	__end_of_resetTemporizador
  2663                           	__end_of_resetTemporizador:
  2664  0552                     	signat	_resetTemporizador,4217
  2665                           	global	_lcd_print
  2666                           
  2667 ;; *************** function _lcd_print *****************
  2668 ;; Defined at:
  2669 ;;		line 156 in file "lcd.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;  lin             1    wreg     unsigned char 
  2672 ;;  col             1    8[COMMON] unsigned char 
  2673 ;;  str             1    9[COMMON] PTR const unsigned char 
  2674 ;;		 -> STR_2(17), STR_1(17), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  lin             1    2[BANK0 ] unsigned char 
  2677 ;;  pos             1    1[BANK0 ] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         2       0       0       0       0
  2688 ;;      Locals:         0       2       0       0       0
  2689 ;;      Temps:          0       1       0       0       0
  2690 ;;      Totals:         2       3       0       0       0
  2691 ;;Total ram usage:        5 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; Hardware stack levels required when called:    4
  2694 ;; This function calls:
  2695 ;;		_lcd_dataReg
  2696 ;;		_lcd_lincol
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2702                           	file	"lcd.c"
  2703                           	line	156
  2704                           global __ptext3
  2705                           __ptext3:	;psect for function _lcd_print
  2706  048B                     psect	text3
  2707                           	file	"lcd.c"
  2708                           	line	156
  2709                           	global	__size_of_lcd_print
  2710                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  2711  0037                     	
  2712                           _lcd_print:	
  2713  048B                     ;incstack = 0
  2714                           	opt	stack 3
  2715                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2716                           ;lcd_print@lin stored from wreg
  2717                           	bcf	status, 5	;RP0=0, select bank0
  2718  048B  1283               	bcf	status, 6	;RP1=0, select bank0
  2719  048C  1303               	movwf	(lcd_print@lin)
  2720  048D  00C0               	line	158
  2721                           	
  2722                           l1778:	
  2723  048E                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  2724                           	movf	(lcd_print@col),w
  2725  048E  0878               	movwf	(??_lcd_print+0)+0
  2726  048F  00BE               	movf	(??_lcd_print+0)+0,w
  2727  0490  083E               	movwf	(lcd_print@pos)
  2728  0491  00BF               	line	159
  2729                           	
  2730                           l1780:	
  2731  0492                     ;lcd.c: 159:     lcd_lincol( lin, col );
  2732                           	movf	(lcd_print@col),w
  2733  0492  0878               	movwf	(??_lcd_print+0)+0
  2734  0493  00BE               	movf	(??_lcd_print+0)+0,w
  2735  0494  083E               	movwf	(lcd_lincol@col)
  2736  0495  00F5               	movf	(lcd_print@lin),w
  2737  0496  0840               	fcall	_lcd_lincol
  2738  0497  120A  118A  257D  120A  118A  	line	161
  2739                           ;lcd.c: 161:     while( *str )
  2740                           	goto	l1788
  2741  049C  2CB4               	
  2742                           l182:	
  2743  049D                     	line	163
  2744                           	
  2745                           l1782:	
  2746  049D                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  2747                           	movf	(lcd_print@str),w
  2748  049D  0879               	movwf	fsr0
  2749  049E  0084               	fcall	stringdir
  2750  049F  120A  118A  2524  120A  118A  	fcall	_lcd_dataReg
  2751  04A4  120A  118A  24C2  120A  118A  	line	164
  2752                           	
  2753                           l1784:	
  2754  04A9                     ;lcd.c: 164:         ++str;
  2755                           	movlw	low(01h)
  2756  04A9  3001               	bcf	status, 5	;RP0=0, select bank0
  2757  04AA  1283               	bcf	status, 6	;RP1=0, select bank0
  2758  04AB  1303               	movwf	(??_lcd_print+0)+0
  2759  04AC  00BE               	movf	(??_lcd_print+0)+0,w
  2760  04AD  083E               	addwf	(lcd_print@str),f
  2761  04AE  07F9               	line	165
  2762                           	
  2763                           l1786:	
  2764  04AF                     ;lcd.c: 165:         ++pos;
  2765                           	movlw	low(01h)
  2766  04AF  3001               	movwf	(??_lcd_print+0)+0
  2767  04B0  00BE               	movf	(??_lcd_print+0)+0,w
  2768  04B1  083E               	addwf	(lcd_print@pos),f
  2769  04B2  07BF               	goto	l1788
  2770  04B3  2CB4               	line	166
  2771                           ;lcd.c: 166:     }
  2772                           	
  2773                           l181:	
  2774  04B4                     	line	161
  2775                           	
  2776                           l1788:	
  2777  04B4                     ;lcd.c: 161:     while( *str )
  2778                           	movf	(lcd_print@str),w
  2779  04B4  0879               	movwf	fsr0
  2780  04B5  0084               	fcall	stringdir
  2781  04B6  120A  118A  2524  120A  118A  	xorlw	0
  2782  04BB  3A00               	skipz
  2783  04BC  1D03               	goto	u1371
  2784  04BD  2CBF               	goto	u1370
  2785  04BE  2CC0               u1371:
  2786  04BF                     	goto	l1782
  2787  04BF  2C9D               u1370:
  2788  04C0                     	goto	l184
  2789  04C0  2CC1               	
  2790                           l183:	
  2791  04C1                     	line	167
  2792                           	
  2793                           l184:	
  2794  04C1                     	return
  2795  04C1  0008               	opt stack 0
  2796                           GLOBAL	__end_of_lcd_print
  2797                           	__end_of_lcd_print:
  2798  04C2                     	signat	_lcd_print,12409
  2799                           	global	_lcd_num
  2800                           
  2801 ;; *************** function _lcd_num *****************
  2802 ;; Defined at:
  2803 ;;		line 178 in file "lcd.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  lin             1    wreg     unsigned char 
  2806 ;;  col             1    4[BANK0 ] unsigned char 
  2807 ;;  num             2    5[BANK0 ] int 
  2808 ;;  tam             1    7[BANK0 ] unsigned char 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  lin             1   11[BANK0 ] unsigned char 
  2811 ;;  div             2   14[BANK0 ] int 
  2812 ;;  sinal           1   13[BANK0 ] unsigned char 
  2813 ;;  size            1   12[BANK0 ] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       4       0       0       0
  2824 ;;      Locals:         0       5       0       0       0
  2825 ;;      Temps:          0       3       0       0       0
  2826 ;;      Totals:         0      12       0       0       0
  2827 ;;Total ram usage:       12 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    4
  2830 ;; This function calls:
  2831 ;;		___awdiv
  2832 ;;		___awmod
  2833 ;;		_lcd_dataReg
  2834 ;;		_lcd_lincol
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2840                           	line	178
  2841                           global __ptext4
  2842                           __ptext4:	;psect for function _lcd_num
  2843  016D                     psect	text4
  2844                           	file	"lcd.c"
  2845                           	line	178
  2846                           	global	__size_of_lcd_num
  2847                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  2848  00EE                     	
  2849                           _lcd_num:	
  2850  016D                     ;incstack = 0
  2851                           	opt	stack 3
  2852                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2853                           ;lcd_num@lin stored from wreg
  2854                           	bcf	status, 5	;RP0=0, select bank0
  2855  016D  1283               	bcf	status, 6	;RP1=0, select bank0
  2856  016E  1303               	movwf	(lcd_num@lin)
  2857  016F  00C9               	line	185
  2858                           	
  2859                           l1790:	
  2860  0170                     ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
                                          int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
                                      unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  2861                           	btfsc	(lcd_num@num+1),7
  2862  0170  1BC4               	goto	u1381
  2863  0171  2973               	goto	u1380
  2864  0172  2975               u1381:
  2865  0173                     	movlw	1
  2866  0173  3001               	goto	u1390
  2867  0174  2976               u1380:
  2868  0175                     	movlw	0
  2869  0175  3000               u1390:
  2870  0176                     	movwf	(??_lcd_num+0)+0
  2871  0176  00C6               	movf	(??_lcd_num+0)+0,w
  2872  0177  0846               	movwf	(lcd_num@sinal)
  2873  0178  00CB               	line	186
  2874                           	
  2875                           l1792:	
  2876  0179                     ;lcd.c: 186:     if( sinal )
  2877                           	movf	((lcd_num@sinal)),w
  2878  0179  084B               	btfsc	status,2
  2879  017A  1903               	goto	u1401
  2880  017B  297D               	goto	u1400
  2881  017C  297E               u1401:
  2882  017D                     	goto	l1796
  2883  017D  2984               u1400:
  2884  017E                     	line	187
  2885                           	
  2886                           l1794:	
  2887  017E                     ;lcd.c: 187:         num = (~num) + 1;
  2888                           	comf	(lcd_num@num),f
  2889  017E  09C3               	comf	(lcd_num@num+1),f
  2890  017F  09C4               	incf	(lcd_num@num),f
  2891  0180  0AC3               	skipnz
  2892  0181  1903               	incf	(lcd_num@num+1),f
  2893  0182  0AC4               	goto	l1796
  2894  0183  2984               	
  2895                           l187:	
  2896  0184                     	line	189
  2897                           	
  2898                           l1796:	
  2899  0184                     ;lcd.c: 189:     lcd_lincol(lin, col);
  2900                           	movf	(lcd_num@col),w
  2901  0184  0842               	movwf	(??_lcd_num+0)+0
  2902  0185  00C6               	movf	(??_lcd_num+0)+0,w
  2903  0186  0846               	movwf	(lcd_lincol@col)
  2904  0187  00F5               	movf	(lcd_num@lin),w
  2905  0188  0849               	fcall	_lcd_lincol
  2906  0189  120A  118A  257D  120A  118A  	line	191
  2907                           	
  2908                           l1798:	
  2909  018E                     ;lcd.c: 191:     div=10000;
  2910                           	movlw	010h
  2911  018E  3010               	bcf	status, 5	;RP0=0, select bank0
  2912  018F  1283               	bcf	status, 6	;RP1=0, select bank0
  2913  0190  1303               	movwf	(lcd_num@div)
  2914  0191  00CC               	movlw	027h
  2915  0192  3027               	movwf	((lcd_num@div))+1
  2916  0193  00CD               	line	192
  2917                           	
  2918                           l1800:	
  2919  0194                     ;lcd.c: 192:     size = 5;
  2920                           	movlw	low(05h)
  2921  0194  3005               	movwf	(??_lcd_num+0)+0
  2922  0195  00C6               	movf	(??_lcd_num+0)+0,w
  2923  0196  0846               	movwf	(lcd_num@size)
  2924  0197  00CA               	line	193
  2925                           ;lcd.c: 193:     while( div >= 1 )
  2926                           	goto	l1808
  2927  0198  29C8               	
  2928                           l189:	
  2929  0199                     	line	195
  2930                           	
  2931                           l1802:	
  2932  0199                     ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  2933                           	bcf	status, 5	;RP0=0, select bank0
  2934  0199  1283               	bcf	status, 6	;RP1=0, select bank0
  2935  019A  1303               	movf	(lcd_num@div+1),w
  2936  019B  084D               	movwf	(___awdiv@divisor+1)
  2937  019C  00F3               	movf	(lcd_num@div),w
  2938  019D  084C               	movwf	(___awdiv@divisor)
  2939  019E  00F2               	movf	(lcd_num@num+1),w
  2940  019F  0844               	movwf	(___awdiv@dividend+1)
  2941  01A0  00F5               	movf	(lcd_num@num),w
  2942  01A1  0843               	movwf	(___awdiv@dividend)
  2943  01A2  00F4               	fcall	___awdiv
  2944  01A3  120A  118A  2376  120A  118A  	movf	((0+(?___awdiv))),w
  2945  01A8  0872               iorwf	((1+(?___awdiv))),w
  2946  01A9  0473               	btfss	status,2
  2947  01AA  1D03               	goto	u1411
  2948  01AB  29AD               	goto	u1410
  2949  01AC  29AE               u1411:
  2950  01AD                     	goto	l1814
  2951  01AD  29E2               u1410:
  2952  01AE                     	line	196
  2953                           	
  2954                           l1804:	
  2955  01AE                     ;lcd.c: 196:             --size;
  2956                           	movlw	01h
  2957  01AE  3001               	bcf	status, 5	;RP0=0, select bank0
  2958  01AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2959  01B0  1303               	subwf	(lcd_num@size),f
  2960  01B1  02CA               	goto	l1806
  2961  01B2  29B4               	line	197
  2962                           ;lcd.c: 197:         else
  2963                           	
  2964                           l190:	
  2965  01B3                     	line	198
  2966                           ;lcd.c: 198:             break;
  2967                           	goto	l1814
  2968  01B3  29E2               	
  2969                           l191:	
  2970  01B4                     	line	199
  2971                           	
  2972                           l1806:	
  2973  01B4                     ;lcd.c: 199:         div/=10;
  2974                           	movlw	0Ah
  2975  01B4  300A               	movwf	(___awdiv@divisor)
  2976  01B5  00F2               	movlw	0
  2977  01B6  3000               	movwf	((___awdiv@divisor))+1
  2978  01B7  00F3               	movf	(lcd_num@div+1),w
  2979  01B8  084D               	movwf	(___awdiv@dividend+1)
  2980  01B9  00F5               	movf	(lcd_num@div),w
  2981  01BA  084C               	movwf	(___awdiv@dividend)
  2982  01BB  00F4               	fcall	___awdiv
  2983  01BC  120A  118A  2376  120A  118A  	movf	(1+(?___awdiv)),w
  2984  01C1  0873               	bcf	status, 5	;RP0=0, select bank0
  2985  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2986  01C3  1303               	movwf	(lcd_num@div+1)
  2987  01C4  00CD               	movf	(0+(?___awdiv)),w
  2988  01C5  0872               	movwf	(lcd_num@div)
  2989  01C6  00CC               	goto	l1808
  2990  01C7  29C8               	line	200
  2991                           ;lcd.c: 200:     }
  2992                           	
  2993                           l188:	
  2994  01C8                     	line	193
  2995                           	
  2996                           l1808:	
  2997  01C8                     ;lcd.c: 193:     while( div >= 1 )
  2998                           	movf	(lcd_num@div+1),w
  2999  01C8  084D               	xorlw	80h
  3000  01C9  3A80               	movwf	btemp+1
  3001  01CA  00FF               	movlw	(0)^80h
  3002  01CB  3080               	subwf	btemp+1,w
  3003  01CC  027F               	skipz
  3004  01CD  1D03               	goto	u1425
  3005  01CE  29D1               	movlw	01h
  3006  01CF  3001               	subwf	(lcd_num@div),w
  3007  01D0  024C               u1425:
  3008  01D1                     
  3009                           	skipnc
  3010  01D1  1803               	goto	u1421
  3011  01D2  29D4               	goto	u1420
  3012  01D3  29D5               u1421:
  3013  01D4                     	goto	l1802
  3014  01D4  2999               u1420:
  3015  01D5                     	goto	l1814
  3016  01D5  29E2               	
  3017                           l192:	
  3018  01D6                     	line	202
  3019                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  3020                           	goto	l1814
  3021  01D6  29E2               	
  3022                           l194:	
  3023  01D7                     	line	205
  3024                           	
  3025                           l1810:	
  3026  01D7                     ;lcd.c: 203:     {;lcd.c: 205:         lcd_dataReg('0');
  3027                           	movlw	low(030h)
  3028  01D7  3030               	fcall	_lcd_dataReg
  3029  01D8  120A  118A  24C2  120A  118A  	line	206
  3030                           	
  3031                           l1812:	
  3032  01DD                     ;lcd.c: 206:         --tam;
  3033                           	movlw	01h
  3034  01DD  3001               	bcf	status, 5	;RP0=0, select bank0
  3035  01DE  1283               	bcf	status, 6	;RP1=0, select bank0
  3036  01DF  1303               	subwf	(lcd_num@tam),f
  3037  01E0  02C5               	goto	l1814
  3038  01E1  29E2               	line	207
  3039                           ;lcd.c: 207:     }
  3040                           	
  3041                           l193:	
  3042  01E2                     	line	202
  3043                           	
  3044                           l1814:	
  3045  01E2                     ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  3046                           	bcf	status, 5	;RP0=0, select bank0
  3047  01E2  1283               	bcf	status, 6	;RP1=0, select bank0
  3048  01E3  1303               	movf	(lcd_num@size),w
  3049  01E4  084A               	addwf	(lcd_num@sinal),w
  3050  01E5  074B               	movwf	(??_lcd_num+0)+0
  3051  01E6  00C6               	clrf	(??_lcd_num+0)+0+1
  3052  01E7  01C7               	rlf	1+(??_lcd_num+0)+0,f
  3053  01E8  0DC7               	
  3054                           	movf	1+(??_lcd_num+0)+0,w
  3055  01E9  0847               	xorlw	80h
  3056  01EA  3A80               	movwf	(??_lcd_num+2)+0
  3057  01EB  00C8               	movlw	80h
  3058  01EC  3080               	subwf	(??_lcd_num+2)+0,w
  3059  01ED  0248               	skipz
  3060  01EE  1D03               	goto	u1435
  3061  01EF  29F2               	movf	(lcd_num@tam),w
  3062  01F0  0845               	subwf	0+(??_lcd_num+0)+0,w
  3063  01F1  0246               u1435:
  3064  01F2                     
  3065                           	skipnc
  3066  01F2  1803               	goto	u1431
  3067  01F3  29F5               	goto	u1430
  3068  01F4  29F6               u1431:
  3069  01F5                     	goto	l1818
  3070  01F5  2A00               u1430:
  3071  01F6                     	
  3072                           l1816:	
  3073  01F6                     	movlw	low(02h)
  3074  01F6  3002               	bcf	status, 5	;RP0=0, select bank0
  3075  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  3076  01F8  1303               	subwf	(lcd_num@tam),w
  3077  01F9  0245               	skipnc
  3078  01FA  1803               	goto	u1441
  3079  01FB  29FD               	goto	u1440
  3080  01FC  29FE               u1441:
  3081  01FD                     	goto	l1810
  3082  01FD  29D7               u1440:
  3083  01FE                     	goto	l1818
  3084  01FE  2A00               	
  3085                           l196:	
  3086  01FF                     	goto	l1818
  3087  01FF  2A00               	
  3088                           l197:	
  3089  0200                     	line	209
  3090                           	
  3091                           l1818:	
  3092  0200                     ;lcd.c: 209:     if( sinal )
  3093                           	bcf	status, 5	;RP0=0, select bank0
  3094  0200  1283               	bcf	status, 6	;RP1=0, select bank0
  3095  0201  1303               	movf	((lcd_num@sinal)),w
  3096  0202  084B               	btfsc	status,2
  3097  0203  1903               	goto	u1451
  3098  0204  2A06               	goto	u1450
  3099  0205  2A07               u1451:
  3100  0206                     	goto	l199
  3101  0206  2A0E               u1450:
  3102  0207                     	line	210
  3103                           	
  3104                           l1820:	
  3105  0207                     ;lcd.c: 210:         lcd_dataReg('-');
  3106                           	movlw	low(02Dh)
  3107  0207  302D               	fcall	_lcd_dataReg
  3108  0208  120A  118A  24C2  120A  118A  	goto	l199
  3109  020D  2A0E               	
  3110                           l198:	
  3111  020E                     	line	212
  3112                           ;lcd.c: 212:     do
  3113                           	
  3114                           l199:	
  3115  020E                     	line	214
  3116                           ;lcd.c: 213:     {;lcd.c: 214:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  3117                           	bcf	status, 5	;RP0=0, select bank0
  3118  020E  1283               	bcf	status, 6	;RP1=0, select bank0
  3119  020F  1303               	movf	(lcd_num@div+1),w
  3120  0210  084D               	movwf	(___awdiv@divisor+1)
  3121  0211  00F3               	movf	(lcd_num@div),w
  3122  0212  084C               	movwf	(___awdiv@divisor)
  3123  0213  00F2               	movf	(lcd_num@num+1),w
  3124  0214  0844               	movwf	(___awdiv@dividend+1)
  3125  0215  00F5               	movf	(lcd_num@num),w
  3126  0216  0843               	movwf	(___awdiv@dividend)
  3127  0217  00F4               	fcall	___awdiv
  3128  0218  120A  118A  2376  120A  118A  	movf	(0+(?___awdiv)),w
  3129  021D  0872               	addlw	030h
  3130  021E  3E30               	fcall	_lcd_dataReg
  3131  021F  120A  118A  24C2  120A  118A  	line	215
  3132                           ;lcd.c: 215:         num = num % div;
  3133                           	bcf	status, 5	;RP0=0, select bank0
  3134  0224  1283               	bcf	status, 6	;RP1=0, select bank0
  3135  0225  1303               	movf	(lcd_num@div+1),w
  3136  0226  084D               	movwf	(___awmod@divisor+1)
  3137  0227  00F3               	movf	(lcd_num@div),w
  3138  0228  084C               	movwf	(___awmod@divisor)
  3139  0229  00F2               	movf	(lcd_num@num+1),w
  3140  022A  0844               	movwf	(___awmod@dividend+1)
  3141  022B  00F5               	movf	(lcd_num@num),w
  3142  022C  0843               	movwf	(___awmod@dividend)
  3143  022D  00F4               	fcall	___awmod
  3144  022E  120A  118A  23E9  120A  118A  	movf	(1+(?___awmod)),w
  3145  0233  0873               	bcf	status, 5	;RP0=0, select bank0
  3146  0234  1283               	bcf	status, 6	;RP1=0, select bank0
  3147  0235  1303               	movwf	(lcd_num@num+1)
  3148  0236  00C4               	movf	(0+(?___awmod)),w
  3149  0237  0872               	movwf	(lcd_num@num)
  3150  0238  00C3               	line	216
  3151                           ;lcd.c: 216:         div/=10;
  3152                           	movlw	0Ah
  3153  0239  300A               	movwf	(___awdiv@divisor)
  3154  023A  00F2               	movlw	0
  3155  023B  3000               	movwf	((___awdiv@divisor))+1
  3156  023C  00F3               	movf	(lcd_num@div+1),w
  3157  023D  084D               	movwf	(___awdiv@dividend+1)
  3158  023E  00F5               	movf	(lcd_num@div),w
  3159  023F  084C               	movwf	(___awdiv@dividend)
  3160  0240  00F4               	fcall	___awdiv
  3161  0241  120A  118A  2376  120A  118A  	movf	(1+(?___awdiv)),w
  3162  0246  0873               	bcf	status, 5	;RP0=0, select bank0
  3163  0247  1283               	bcf	status, 6	;RP1=0, select bank0
  3164  0248  1303               	movwf	(lcd_num@div+1)
  3165  0249  00CD               	movf	(0+(?___awdiv)),w
  3166  024A  0872               	movwf	(lcd_num@div)
  3167  024B  00CC               	line	217
  3168                           	
  3169                           l1822:	
  3170  024C                     ;lcd.c: 217:     }
  3171                           	movf	(lcd_num@div+1),w
  3172  024C  084D               	xorlw	80h
  3173  024D  3A80               	movwf	btemp+1
  3174  024E  00FF               	movlw	(0)^80h
  3175  024F  3080               	subwf	btemp+1,w
  3176  0250  027F               	skipz
  3177  0251  1D03               	goto	u1465
  3178  0252  2A55               	movlw	01h
  3179  0253  3001               	subwf	(lcd_num@div),w
  3180  0254  024C               u1465:
  3181  0255                     
  3182                           	skipnc
  3183  0255  1803               	goto	u1461
  3184  0256  2A58               	goto	u1460
  3185  0257  2A59               u1461:
  3186  0258                     	goto	l199
  3187  0258  2A0E               u1460:
  3188  0259                     	goto	l201
  3189  0259  2A5A               	
  3190                           l200:	
  3191  025A                     	line	219
  3192                           	
  3193                           l201:	
  3194  025A                     	return
  3195  025A  0008               	opt stack 0
  3196                           GLOBAL	__end_of_lcd_num
  3197                           	__end_of_lcd_num:
  3198  025B                     	signat	_lcd_num,16505
  3199                           	global	_lcd_lincol
  3200                           
  3201 ;; *************** function _lcd_lincol *****************
  3202 ;; Defined at:
  3203 ;;		line 111 in file "lcd.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  lin             1    wreg     unsigned char 
  3206 ;;  col             1    5[COMMON] unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  lin             1    7[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         1       0       0       0       0
  3219 ;;      Locals:         1       0       0       0       0
  3220 ;;      Temps:          1       0       0       0       0
  3221 ;;      Totals:         3       0       0       0       0
  3222 ;;Total ram usage:        3 bytes
  3223 ;; Hardware stack levels used:    1
  3224 ;; Hardware stack levels required when called:    3
  3225 ;; This function calls:
  3226 ;;		_lcd_instReg
  3227 ;; This function is called by:
  3228 ;;		_lcd_print
  3229 ;;		_lcd_num
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3233                           	line	111
  3234                           global __ptext5
  3235                           __ptext5:	;psect for function _lcd_lincol
  3236  057D                     psect	text5
  3237                           	file	"lcd.c"
  3238                           	line	111
  3239                           	global	__size_of_lcd_lincol
  3240                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3241  0013                     	
  3242                           _lcd_lincol:	
  3243  057D                     ;incstack = 0
  3244                           	opt	stack 3
  3245                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3246                           ;lcd_lincol@lin stored from wreg
  3247                           	movwf	(lcd_lincol@lin)
  3248  057D  00F7               	line	113
  3249                           	
  3250                           l1466:	
  3251  057E                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3252                           	movf	(lcd_lincol@lin),w
  3253  057E  0877               	movwf	(??_lcd_lincol+0)+0
  3254  057F  00F6               	movlw	06h
  3255  0580  3006               u865:
  3256  0581                     	clrc
  3257  0581  1003               	rlf	(??_lcd_lincol+0)+0,f
  3258  0582  0DF6               	addlw	-1
  3259  0583  3EFF               	skipz
  3260  0584  1D03               	goto	u865
  3261  0585  2D81               	movf	(lcd_lincol@col),w
  3262  0586  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  3263  0587  0776               	andlw	07Fh
  3264  0588  397F               	addlw	080h
  3265  0589  3E80               	fcall	_lcd_instReg
  3266  058A  120A  118A  22EB  120A  118A  	line	114
  3267                           	
  3268                           l172:	
  3269  058F                     	return
  3270  058F  0008               	opt stack 0
  3271                           GLOBAL	__end_of_lcd_lincol
  3272                           	__end_of_lcd_lincol:
  3273  0590                     	signat	_lcd_lincol,8313
  3274                           	global	_lcd_dataReg
  3275                           
  3276 ;; *************** function _lcd_dataReg *****************
  3277 ;; Defined at:
  3278 ;;		line 93 in file "lcd.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  d               1    wreg     unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  d               1    4[COMMON] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         0       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0
  3295 ;;      Totals:         3       0       0       0       0
  3296 ;;Total ram usage:        3 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_lcd_print
  3303 ;;		_lcd_num
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3307                           	line	93
  3308                           global __ptext6
  3309                           __ptext6:	;psect for function _lcd_dataReg
  3310  04C2                     psect	text6
  3311                           	file	"lcd.c"
  3312                           	line	93
  3313                           	global	__size_of_lcd_dataReg
  3314                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3315  0036                     	
  3316                           _lcd_dataReg:	
  3317  04C2                     ;incstack = 0
  3318                           	opt	stack 4
  3319                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3320                           ;lcd_dataReg@d stored from wreg
  3321                           	movwf	(lcd_dataReg@d)
  3322  04C2  00F4               	line	95
  3323                           	
  3324                           l1448:	
  3325  04C3                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  3326                           	bcf	status, 5	;RP0=0, select bank0
  3327  04C3  1283               	bcf	status, 6	;RP1=0, select bank0
  3328  04C4  1303               	bsf	(8),2	;volatile
  3329  04C5  1508               	line	96
  3330                           	
  3331                           l1450:	
  3332  04C6                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  3333                           	movf	(lcd_dataReg@d),w
  3334  04C6  0874               	movwf	(??_lcd_dataReg+0)+0
  3335  04C7  00F2               	movlw	04h
  3336  04C8  3004               u835:
  3337  04C9                     	clrc
  3338  04C9  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3339  04CA  0CF2               	addlw	-1
  3340  04CB  3EFF               	skipz
  3341  04CC  1D03               	goto	u835
  3342  04CD  2CC9               	movf	0+(??_lcd_dataReg+0)+0,w
  3343  04CE  0872               	movwf	(??_lcd_dataReg+1)+0
  3344  04CF  00F3               	movlw	04h
  3345  04D0  3004               u845:
  3346  04D1                     	clrc
  3347  04D1  1003               	rlf	(??_lcd_dataReg+1)+0,f
  3348  04D2  0DF3               	addlw	-1
  3349  04D3  3EFF               	skipz
  3350  04D4  1D03               	goto	u845
  3351  04D5  2CD1               	movf	(8),w	;volatile
  3352  04D6  0808               	andlw	0Fh
  3353  04D7  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3354  04D8  0473               	movwf	(8)	;volatile
  3355  04D9  0088               	line	97
  3356                           	
  3357                           l1452:	
  3358  04DA                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3359                           	bcf	(8),3	;volatile
  3360  04DA  1188               	line	98
  3361                           	
  3362                           l1454:	
  3363  04DB                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3364                           	opt asmopt_push
  3365                           opt asmopt_off
  3366                           	movlw	13
  3367  04DB  300D               movwf	((??_lcd_dataReg+0)+0),f
  3368  04DC  00F2               	u1487:
  3369  04DD                     decfsz	(??_lcd_dataReg+0)+0,f
  3370  04DD  0BF2               	goto	u1487
  3371  04DE  2CDD               opt asmopt_pop
  3372                           
  3373                           	line	99
  3374                           	
  3375                           l1456:	
  3376  04DF                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3377                           	bcf	status, 5	;RP0=0, select bank0
  3378  04DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3379  04E0  1303               	bsf	(8),3	;volatile
  3380  04E1  1588               	line	101
  3381                           	
  3382                           l1458:	
  3383  04E2                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  3384                           	bsf	(8),2	;volatile
  3385  04E2  1508               	line	102
  3386                           	
  3387                           l1460:	
  3388  04E3                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  3389                           	movf	(lcd_dataReg@d),w
  3390  04E3  0874               	movwf	(??_lcd_dataReg+0)+0
  3391  04E4  00F2               	movlw	04h
  3392  04E5  3004               u855:
  3393  04E6                     	clrc
  3394  04E6  1003               	rlf	(??_lcd_dataReg+0)+0,f
  3395  04E7  0DF2               	addlw	-1
  3396  04E8  3EFF               	skipz
  3397  04E9  1D03               	goto	u855
  3398  04EA  2CE6               	movf	(8),w	;volatile
  3399  04EB  0808               	andlw	0Fh
  3400  04EC  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3401  04ED  0472               	movwf	(8)	;volatile
  3402  04EE  0088               	line	103
  3403                           	
  3404                           l1462:	
  3405  04EF                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  3406                           	bcf	(8),3	;volatile
  3407  04EF  1188               	line	104
  3408                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3409                           	opt asmopt_push
  3410                           opt asmopt_off
  3411                           	movlw	13
  3412  04F0  300D               movwf	((??_lcd_dataReg+0)+0),f
  3413  04F1  00F2               	u1497:
  3414  04F2                     decfsz	(??_lcd_dataReg+0)+0,f
  3415  04F2  0BF2               	goto	u1497
  3416  04F3  2CF2               opt asmopt_pop
  3417                           
  3418                           	line	105
  3419                           	
  3420                           l1464:	
  3421  04F4                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  3422                           	bcf	status, 5	;RP0=0, select bank0
  3423  04F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3424  04F5  1303               	bsf	(8),3	;volatile
  3425  04F6  1588               	line	106
  3426                           	
  3427                           l169:	
  3428  04F7                     	return
  3429  04F7  0008               	opt stack 0
  3430                           GLOBAL	__end_of_lcd_dataReg
  3431                           	__end_of_lcd_dataReg:
  3432  04F8                     	signat	_lcd_dataReg,4217
  3433                           	global	___awmod
  3434                           
  3435 ;; *************** function ___awmod *****************
  3436 ;; Defined at:
  3437 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  divisor         2    2[COMMON] int 
  3440 ;;  dividend        2    4[COMMON] int 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  sign            1    8[COMMON] unsigned char 
  3443 ;;  counter         1    7[COMMON] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  2    2[COMMON] int 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3453 ;;      Params:         4       0       0       0       0
  3454 ;;      Locals:         2       0       0       0       0
  3455 ;;      Temps:          1       0       0       0       0
  3456 ;;      Totals:         7       0       0       0       0
  3457 ;;Total ram usage:        7 bytes
  3458 ;; Hardware stack levels used:    1
  3459 ;; Hardware stack levels required when called:    2
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_lcd_num
  3464 ;;		_temporizar
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  3468                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3469                           	line	5
  3470                           global __ptext7
  3471                           __ptext7:	;psect for function ___awmod
  3472  03E9                     psect	text7
  3473                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3474                           	line	5
  3475                           	global	__size_of___awmod
  3476                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3477  0063                     	
  3478                           ___awmod:	
  3479  03E9                     ;incstack = 0
  3480                           	opt	stack 4
  3481                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3482                           	line	12
  3483                           	
  3484                           l1512:	
  3485  03E9                     	clrf	(___awmod@sign)
  3486  03E9  01F8               	line	13
  3487                           	
  3488                           l1514:	
  3489  03EA                     	btfss	(___awmod@dividend+1),7
  3490  03EA  1FF5               	goto	u971
  3491  03EB  2BED               	goto	u970
  3492  03EC  2BEE               u971:
  3493  03ED                     	goto	l1520
  3494  03ED  2BF6               u970:
  3495  03EE                     	line	14
  3496                           	
  3497                           l1516:	
  3498  03EE                     	comf	(___awmod@dividend),f
  3499  03EE  09F4               	comf	(___awmod@dividend+1),f
  3500  03EF  09F5               	incf	(___awmod@dividend),f
  3501  03F0  0AF4               	skipnz
  3502  03F1  1903               	incf	(___awmod@dividend+1),f
  3503  03F2  0AF5               	line	15
  3504                           	
  3505                           l1518:	
  3506  03F3                     	clrf	(___awmod@sign)
  3507  03F3  01F8               	incf	(___awmod@sign),f
  3508  03F4  0AF8               	goto	l1520
  3509  03F5  2BF6               	line	16
  3510                           	
  3511                           l503:	
  3512  03F6                     	line	17
  3513                           	
  3514                           l1520:	
  3515  03F6                     	btfss	(___awmod@divisor+1),7
  3516  03F6  1FF3               	goto	u981
  3517  03F7  2BF9               	goto	u980
  3518  03F8  2BFA               u981:
  3519  03F9                     	goto	l1524
  3520  03F9  2C00               u980:
  3521  03FA                     	line	18
  3522                           	
  3523                           l1522:	
  3524  03FA                     	comf	(___awmod@divisor),f
  3525  03FA  09F2               	comf	(___awmod@divisor+1),f
  3526  03FB  09F3               	incf	(___awmod@divisor),f
  3527  03FC  0AF2               	skipnz
  3528  03FD  1903               	incf	(___awmod@divisor+1),f
  3529  03FE  0AF3               	goto	l1524
  3530  03FF  2C00               	
  3531                           l504:	
  3532  0400                     	line	19
  3533                           	
  3534                           l1524:	
  3535  0400                     	movf	((___awmod@divisor)),w
  3536  0400  0872               iorwf	((___awmod@divisor+1)),w
  3537  0401  0473               	btfsc	status,2
  3538  0402  1903               	goto	u991
  3539  0403  2C05               	goto	u990
  3540  0404  2C06               u991:
  3541  0405                     	goto	l1542
  3542  0405  2C3B               u990:
  3543  0406                     	line	20
  3544                           	
  3545                           l1526:	
  3546  0406                     	clrf	(___awmod@counter)
  3547  0406  01F7               	incf	(___awmod@counter),f
  3548  0407  0AF7               	line	21
  3549                           	goto	l1532
  3550  0408  2C15               	
  3551                           l507:	
  3552  0409                     	line	22
  3553                           	
  3554                           l1528:	
  3555  0409                     	movlw	01h
  3556  0409  3001               	
  3557                           u1005:
  3558  040A                     	clrc
  3559  040A  1003               	rlf	(___awmod@divisor),f
  3560  040B  0DF2               	rlf	(___awmod@divisor+1),f
  3561  040C  0DF3               	addlw	-1
  3562  040D  3EFF               	skipz
  3563  040E  1D03               	goto	u1005
  3564  040F  2C0A               	line	23
  3565                           	
  3566                           l1530:	
  3567  0410                     	movlw	low(01h)
  3568  0410  3001               	movwf	(??___awmod+0)+0
  3569  0411  00F6               	movf	(??___awmod+0)+0,w
  3570  0412  0876               	addwf	(___awmod@counter),f
  3571  0413  07F7               	goto	l1532
  3572  0414  2C15               	line	24
  3573                           	
  3574                           l506:	
  3575  0415                     	line	21
  3576                           	
  3577                           l1532:	
  3578  0415                     	btfss	(___awmod@divisor+1),(15)&7
  3579  0415  1FF3               	goto	u1011
  3580  0416  2C18               	goto	u1010
  3581  0417  2C19               u1011:
  3582  0418                     	goto	l1528
  3583  0418  2C09               u1010:
  3584  0419                     	goto	l1534
  3585  0419  2C1B               	
  3586                           l508:	
  3587  041A                     	goto	l1534
  3588  041A  2C1B               	line	25
  3589                           	
  3590                           l509:	
  3591  041B                     	line	26
  3592                           	
  3593                           l1534:	
  3594  041B                     	movf	(___awmod@divisor+1),w
  3595  041B  0873               	subwf	(___awmod@dividend+1),w
  3596  041C  0275               	skipz
  3597  041D  1D03               	goto	u1025
  3598  041E  2C21               	movf	(___awmod@divisor),w
  3599  041F  0872               	subwf	(___awmod@dividend),w
  3600  0420  0274               u1025:
  3601  0421                     	skipc
  3602  0421  1C03               	goto	u1021
  3603  0422  2C24               	goto	u1020
  3604  0423  2C25               u1021:
  3605  0424                     	goto	l1538
  3606  0424  2C2C               u1020:
  3607  0425                     	line	27
  3608                           	
  3609                           l1536:	
  3610  0425                     	movf	(___awmod@divisor),w
  3611  0425  0872               	subwf	(___awmod@dividend),f
  3612  0426  02F4               	movf	(___awmod@divisor+1),w
  3613  0427  0873               	skipc
  3614  0428  1C03               	decf	(___awmod@dividend+1),f
  3615  0429  03F5               	subwf	(___awmod@dividend+1),f
  3616  042A  02F5               	goto	l1538
  3617  042B  2C2C               	
  3618                           l510:	
  3619  042C                     	line	28
  3620                           	
  3621                           l1538:	
  3622  042C                     	movlw	01h
  3623  042C  3001               	
  3624                           u1035:
  3625  042D                     	clrc
  3626  042D  1003               	rrf	(___awmod@divisor+1),f
  3627  042E  0CF3               	rrf	(___awmod@divisor),f
  3628  042F  0CF2               	addlw	-1
  3629  0430  3EFF               	skipz
  3630  0431  1D03               	goto	u1035
  3631  0432  2C2D               	line	29
  3632                           	
  3633                           l1540:	
  3634  0433                     	movlw	01h
  3635  0433  3001               	subwf	(___awmod@counter),f
  3636  0434  02F7               	btfss	status,2
  3637  0435  1D03               	goto	u1041
  3638  0436  2C38               	goto	u1040
  3639  0437  2C39               u1041:
  3640  0438                     	goto	l1534
  3641  0438  2C1B               u1040:
  3642  0439                     	goto	l1542
  3643  0439  2C3B               	
  3644                           l511:	
  3645  043A                     	goto	l1542
  3646  043A  2C3B               	line	30
  3647                           	
  3648                           l505:	
  3649  043B                     	line	31
  3650                           	
  3651                           l1542:	
  3652  043B                     	movf	((___awmod@sign)),w
  3653  043B  0878               	btfsc	status,2
  3654  043C  1903               	goto	u1051
  3655  043D  2C3F               	goto	u1050
  3656  043E  2C40               u1051:
  3657  043F                     	goto	l1546
  3658  043F  2C46               u1050:
  3659  0440                     	line	32
  3660                           	
  3661                           l1544:	
  3662  0440                     	comf	(___awmod@dividend),f
  3663  0440  09F4               	comf	(___awmod@dividend+1),f
  3664  0441  09F5               	incf	(___awmod@dividend),f
  3665  0442  0AF4               	skipnz
  3666  0443  1903               	incf	(___awmod@dividend+1),f
  3667  0444  0AF5               	goto	l1546
  3668  0445  2C46               	
  3669                           l512:	
  3670  0446                     	line	33
  3671                           	
  3672                           l1546:	
  3673  0446                     	movf	(___awmod@dividend+1),w
  3674  0446  0875               	movwf	(?___awmod+1)
  3675  0447  00F3               	movf	(___awmod@dividend),w
  3676  0448  0874               	movwf	(?___awmod)
  3677  0449  00F2               	goto	l513
  3678  044A  2C4B               	
  3679                           l1548:	
  3680  044B                     	line	34
  3681                           	
  3682                           l513:	
  3683  044B                     	return
  3684  044B  0008               	opt stack 0
  3685                           GLOBAL	__end_of___awmod
  3686                           	__end_of___awmod:
  3687  044C                     	signat	___awmod,8314
  3688                           	global	___awdiv
  3689                           
  3690 ;; *************** function ___awdiv *****************
  3691 ;; Defined at:
  3692 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  divisor         2    2[COMMON] int 
  3695 ;;  dividend        2    4[COMMON] int 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  quotient        2    2[BANK0 ] int 
  3698 ;;  sign            1    1[BANK0 ] unsigned char 
  3699 ;;  counter         1    0[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  2    2[COMMON] int 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         4       0       0       0       0
  3710 ;;      Locals:         0       4       0       0       0
  3711 ;;      Temps:          1       0       0       0       0
  3712 ;;      Totals:         5       4       0       0       0
  3713 ;;Total ram usage:        9 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    2
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_lcd_num
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3723                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3724                           	line	5
  3725                           global __ptext8
  3726                           __ptext8:	;psect for function ___awdiv
  3727  0376                     psect	text8
  3728                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3729                           	line	5
  3730                           	global	__size_of___awdiv
  3731                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3732  0073                     	
  3733                           ___awdiv:	
  3734  0376                     ;incstack = 0
  3735                           	opt	stack 4
  3736                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3737                           	line	13
  3738                           	
  3739                           l1734:	
  3740  0376                     	bcf	status, 5	;RP0=0, select bank0
  3741  0376  1283               	bcf	status, 6	;RP1=0, select bank0
  3742  0377  1303               	clrf	(___awdiv@sign)
  3743  0378  01BF               	line	14
  3744                           	
  3745                           l1736:	
  3746  0379                     	btfss	(___awdiv@divisor+1),7
  3747  0379  1FF3               	goto	u1271
  3748  037A  2B7C               	goto	u1270
  3749  037B  2B7D               u1271:
  3750  037C                     	goto	l1742
  3751  037C  2B85               u1270:
  3752  037D                     	line	15
  3753                           	
  3754                           l1738:	
  3755  037D                     	comf	(___awdiv@divisor),f
  3756  037D  09F2               	comf	(___awdiv@divisor+1),f
  3757  037E  09F3               	incf	(___awdiv@divisor),f
  3758  037F  0AF2               	skipnz
  3759  0380  1903               	incf	(___awdiv@divisor+1),f
  3760  0381  0AF3               	line	16
  3761                           	
  3762                           l1740:	
  3763  0382                     	clrf	(___awdiv@sign)
  3764  0382  01BF               	incf	(___awdiv@sign),f
  3765  0383  0ABF               	goto	l1742
  3766  0384  2B85               	line	17
  3767                           	
  3768                           l490:	
  3769  0385                     	line	18
  3770                           	
  3771                           l1742:	
  3772  0385                     	btfss	(___awdiv@dividend+1),7
  3773  0385  1FF5               	goto	u1281
  3774  0386  2B88               	goto	u1280
  3775  0387  2B89               u1281:
  3776  0388                     	goto	l1748
  3777  0388  2B93               u1280:
  3778  0389                     	line	19
  3779                           	
  3780                           l1744:	
  3781  0389                     	comf	(___awdiv@dividend),f
  3782  0389  09F4               	comf	(___awdiv@dividend+1),f
  3783  038A  09F5               	incf	(___awdiv@dividend),f
  3784  038B  0AF4               	skipnz
  3785  038C  1903               	incf	(___awdiv@dividend+1),f
  3786  038D  0AF5               	line	20
  3787                           	
  3788                           l1746:	
  3789  038E                     	movlw	low(01h)
  3790  038E  3001               	movwf	(??___awdiv+0)+0
  3791  038F  00F6               	movf	(??___awdiv+0)+0,w
  3792  0390  0876               	xorwf	(___awdiv@sign),f
  3793  0391  06BF               	goto	l1748
  3794  0392  2B93               	line	21
  3795                           	
  3796                           l491:	
  3797  0393                     	line	22
  3798                           	
  3799                           l1748:	
  3800  0393                     	clrf	(___awdiv@quotient)
  3801  0393  01C0               	clrf	(___awdiv@quotient+1)
  3802  0394  01C1               	line	23
  3803                           	
  3804                           l1750:	
  3805  0395                     	movf	((___awdiv@divisor)),w
  3806  0395  0872               iorwf	((___awdiv@divisor+1)),w
  3807  0396  0473               	btfsc	status,2
  3808  0397  1903               	goto	u1291
  3809  0398  2B9A               	goto	u1290
  3810  0399  2B9B               u1291:
  3811  039A                     	goto	l1770
  3812  039A  2BD8               u1290:
  3813  039B                     	line	24
  3814                           	
  3815                           l1752:	
  3816  039B                     	clrf	(___awdiv@counter)
  3817  039B  01BE               	incf	(___awdiv@counter),f
  3818  039C  0ABE               	line	25
  3819                           	goto	l1758
  3820  039D  2BAA               	
  3821                           l494:	
  3822  039E                     	line	26
  3823                           	
  3824                           l1754:	
  3825  039E                     	movlw	01h
  3826  039E  3001               	
  3827                           u1305:
  3828  039F                     	clrc
  3829  039F  1003               	rlf	(___awdiv@divisor),f
  3830  03A0  0DF2               	rlf	(___awdiv@divisor+1),f
  3831  03A1  0DF3               	addlw	-1
  3832  03A2  3EFF               	skipz
  3833  03A3  1D03               	goto	u1305
  3834  03A4  2B9F               	line	27
  3835                           	
  3836                           l1756:	
  3837  03A5                     	movlw	low(01h)
  3838  03A5  3001               	movwf	(??___awdiv+0)+0
  3839  03A6  00F6               	movf	(??___awdiv+0)+0,w
  3840  03A7  0876               	addwf	(___awdiv@counter),f
  3841  03A8  07BE               	goto	l1758
  3842  03A9  2BAA               	line	28
  3843                           	
  3844                           l493:	
  3845  03AA                     	line	25
  3846                           	
  3847                           l1758:	
  3848  03AA                     	btfss	(___awdiv@divisor+1),(15)&7
  3849  03AA  1FF3               	goto	u1311
  3850  03AB  2BAD               	goto	u1310
  3851  03AC  2BAE               u1311:
  3852  03AD                     	goto	l1754
  3853  03AD  2B9E               u1310:
  3854  03AE                     	goto	l1760
  3855  03AE  2BB0               	
  3856                           l495:	
  3857  03AF                     	goto	l1760
  3858  03AF  2BB0               	line	29
  3859                           	
  3860                           l496:	
  3861  03B0                     	line	30
  3862                           	
  3863                           l1760:	
  3864  03B0                     	movlw	01h
  3865  03B0  3001               	
  3866                           u1325:
  3867  03B1                     	clrc
  3868  03B1  1003               	rlf	(___awdiv@quotient),f
  3869  03B2  0DC0               	rlf	(___awdiv@quotient+1),f
  3870  03B3  0DC1               	addlw	-1
  3871  03B4  3EFF               	skipz
  3872  03B5  1D03               	goto	u1325
  3873  03B6  2BB1               	line	31
  3874                           	movf	(___awdiv@divisor+1),w
  3875  03B7  0873               	subwf	(___awdiv@dividend+1),w
  3876  03B8  0275               	skipz
  3877  03B9  1D03               	goto	u1335
  3878  03BA  2BBD               	movf	(___awdiv@divisor),w
  3879  03BB  0872               	subwf	(___awdiv@dividend),w
  3880  03BC  0274               u1335:
  3881  03BD                     	skipc
  3882  03BD  1C03               	goto	u1331
  3883  03BE  2BC0               	goto	u1330
  3884  03BF  2BC1               u1331:
  3885  03C0                     	goto	l1766
  3886  03C0  2BC9               u1330:
  3887  03C1                     	line	32
  3888                           	
  3889                           l1762:	
  3890  03C1                     	movf	(___awdiv@divisor),w
  3891  03C1  0872               	subwf	(___awdiv@dividend),f
  3892  03C2  02F4               	movf	(___awdiv@divisor+1),w
  3893  03C3  0873               	skipc
  3894  03C4  1C03               	decf	(___awdiv@dividend+1),f
  3895  03C5  03F5               	subwf	(___awdiv@dividend+1),f
  3896  03C6  02F5               	line	33
  3897                           	
  3898                           l1764:	
  3899  03C7                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3900  03C7  1440               	goto	l1766
  3901  03C8  2BC9               	line	34
  3902                           	
  3903                           l497:	
  3904  03C9                     	line	35
  3905                           	
  3906                           l1766:	
  3907  03C9                     	movlw	01h
  3908  03C9  3001               	
  3909                           u1345:
  3910  03CA                     	clrc
  3911  03CA  1003               	rrf	(___awdiv@divisor+1),f
  3912  03CB  0CF3               	rrf	(___awdiv@divisor),f
  3913  03CC  0CF2               	addlw	-1
  3914  03CD  3EFF               	skipz
  3915  03CE  1D03               	goto	u1345
  3916  03CF  2BCA               	line	36
  3917                           	
  3918                           l1768:	
  3919  03D0                     	movlw	01h
  3920  03D0  3001               	subwf	(___awdiv@counter),f
  3921  03D1  02BE               	btfss	status,2
  3922  03D2  1D03               	goto	u1351
  3923  03D3  2BD5               	goto	u1350
  3924  03D4  2BD6               u1351:
  3925  03D5                     	goto	l1760
  3926  03D5  2BB0               u1350:
  3927  03D6                     	goto	l1770
  3928  03D6  2BD8               	
  3929                           l498:	
  3930  03D7                     	goto	l1770
  3931  03D7  2BD8               	line	37
  3932                           	
  3933                           l492:	
  3934  03D8                     	line	38
  3935                           	
  3936                           l1770:	
  3937  03D8                     	movf	((___awdiv@sign)),w
  3938  03D8  083F               	btfsc	status,2
  3939  03D9  1903               	goto	u1361
  3940  03DA  2BDC               	goto	u1360
  3941  03DB  2BDD               u1361:
  3942  03DC                     	goto	l1774
  3943  03DC  2BE3               u1360:
  3944  03DD                     	line	39
  3945                           	
  3946                           l1772:	
  3947  03DD                     	comf	(___awdiv@quotient),f
  3948  03DD  09C0               	comf	(___awdiv@quotient+1),f
  3949  03DE  09C1               	incf	(___awdiv@quotient),f
  3950  03DF  0AC0               	skipnz
  3951  03E0  1903               	incf	(___awdiv@quotient+1),f
  3952  03E1  0AC1               	goto	l1774
  3953  03E2  2BE3               	
  3954                           l499:	
  3955  03E3                     	line	40
  3956                           	
  3957                           l1774:	
  3958  03E3                     	movf	(___awdiv@quotient+1),w
  3959  03E3  0841               	movwf	(?___awdiv+1)
  3960  03E4  00F3               	movf	(___awdiv@quotient),w
  3961  03E5  0840               	movwf	(?___awdiv)
  3962  03E6  00F2               	goto	l500
  3963  03E7  2BE8               	
  3964                           l1776:	
  3965  03E8                     	line	41
  3966                           	
  3967                           l500:	
  3968  03E8                     	return
  3969  03E8  0008               	opt stack 0
  3970                           GLOBAL	__end_of___awdiv
  3971                           	__end_of___awdiv:
  3972  03E9                     	signat	___awdiv,8314
  3973                           	global	_lcd_init
  3974                           
  3975 ;; *************** function _lcd_init *****************
  3976 ;; Defined at:
  3977 ;;		line 121 in file "lcd.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;		None
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  1    wreg      void 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       0       0       0       0
  3992 ;;      Locals:         0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0
  3994 ;;      Totals:         0       0       0       0       0
  3995 ;;Total ram usage:        0 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    3
  3998 ;; This function calls:
  3999 ;;		_delay
  4000 ;;		_lcd_instReg
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4006                           	file	"lcd.c"
  4007                           	line	121
  4008                           global __ptext9
  4009                           __ptext9:	;psect for function _lcd_init
  4010  044C                     psect	text9
  4011                           	file	"lcd.c"
  4012                           	line	121
  4013                           	global	__size_of_lcd_init
  4014                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  4015  003F                     	
  4016                           _lcd_init:	
  4017  044C                     ;incstack = 0
  4018                           	opt	stack 4
  4019                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4020                           	line	123
  4021                           	
  4022                           l1550:	
  4023  044C                     ;lcd.c: 123:     delay(100);
  4024                           	movlw	064h
  4025  044C  3064               	movwf	(delay@t)
  4026  044D  00F2               	movlw	0
  4027  044E  3000               	movwf	((delay@t))+1
  4028  044F  00F3               	fcall	_delay
  4029  0450  120A  118A  2552  120A  118A  	line	124
  4030                           	
  4031                           l1552:	
  4032  0455                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  4033                           	bsf	status, 5	;RP0=1, select bank1
  4034  0455  1683               	bcf	status, 6	;RP1=0, select bank1
  4035  0456  1303               	bcf	(136)^080h,2	;volatile
  4036  0457  1108               	line	125
  4037                           	
  4038                           l1554:	
  4039  0458                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  4040                           	bcf	(136)^080h,3	;volatile
  4041  0458  1188               	line	126
  4042                           	
  4043                           l1556:	
  4044  0459                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  4045                           	bcf	(136)^080h,4	;volatile
  4046  0459  1208               	line	127
  4047                           	
  4048                           l1558:	
  4049  045A                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  4050                           	bcf	(136)^080h,5	;volatile
  4051  045A  1288               	line	128
  4052                           	
  4053                           l1560:	
  4054  045B                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  4055                           	bcf	(136)^080h,6	;volatile
  4056  045B  1308               	line	129
  4057                           	
  4058                           l1562:	
  4059  045C                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  4060                           	bcf	(136)^080h,7	;volatile
  4061  045C  1388               	line	131
  4062                           ;lcd.c: 131:     delay(100);
  4063                           	movlw	064h
  4064  045D  3064               	movwf	(delay@t)
  4065  045E  00F2               	movlw	0
  4066  045F  3000               	movwf	((delay@t))+1
  4067  0460  00F3               	fcall	_delay
  4068  0461  120A  118A  2552  120A  118A  	line	132
  4069                           	
  4070                           l1564:	
  4071  0466                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  4072                           	bcf	status, 5	;RP0=0, select bank0
  4073  0466  1283               	bcf	status, 6	;RP1=0, select bank0
  4074  0467  1303               	bsf	(8),3	;volatile
  4075  0468  1588               	line	133
  4076                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  4077                           	movlw	low(028h)
  4078  0469  3028               	fcall	_lcd_instReg
  4079  046A  120A  118A  22EB  120A  118A  	line	134
  4080                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  4081                           	movlw	low(0Ch)
  4082  046F  300C               	fcall	_lcd_instReg
  4083  0470  120A  118A  22EB  120A  118A  	line	135
  4084                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  4085                           	movlw	low(01h)
  4086  0475  3001               	fcall	_lcd_instReg
  4087  0476  120A  118A  22EB  120A  118A  	line	136
  4088                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  4089                           	movlw	low(02h)
  4090  047B  3002               	fcall	_lcd_instReg
  4091  047C  120A  118A  22EB  120A  118A  	line	137
  4092                           ;lcd.c: 137:     delay(100);
  4093                           	movlw	064h
  4094  0481  3064               	movwf	(delay@t)
  4095  0482  00F2               	movlw	0
  4096  0483  3000               	movwf	((delay@t))+1
  4097  0484  00F3               	fcall	_delay
  4098  0485  120A  118A  2552  120A  118A  	line	138
  4099                           	
  4100                           l175:	
  4101  048A                     	return
  4102  048A  0008               	opt stack 0
  4103                           GLOBAL	__end_of_lcd_init
  4104                           	__end_of_lcd_init:
  4105  048B                     	signat	_lcd_init,89
  4106                           	global	_lcd_instReg
  4107                           
  4108 ;; *************** function _lcd_instReg *****************
  4109 ;; Defined at:
  4110 ;;		line 58 in file "lcd.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  i               1    wreg     unsigned char 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;  i               1    4[COMMON] unsigned char 
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  1    wreg      void 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4124 ;;      Params:         0       0       0       0       0
  4125 ;;      Locals:         1       0       0       0       0
  4126 ;;      Temps:          2       0       0       0       0
  4127 ;;      Totals:         3       0       0       0       0
  4128 ;;Total ram usage:        3 bytes
  4129 ;; Hardware stack levels used:    1
  4130 ;; Hardware stack levels required when called:    2
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		_lcd_lincol
  4135 ;;		_lcd_init
  4136 ;;		_lcd_clr
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4140                           	line	58
  4141                           global __ptext10
  4142                           __ptext10:	;psect for function _lcd_instReg
  4143  02EB                     psect	text10
  4144                           	file	"lcd.c"
  4145                           	line	58
  4146                           	global	__size_of_lcd_instReg
  4147                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  4148  008B                     	
  4149                           _lcd_instReg:	
  4150  02EB                     ;incstack = 0
  4151                           	opt	stack 3
  4152                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  4153                           ;lcd_instReg@i stored from wreg
  4154                           	movwf	(lcd_instReg@i)
  4155  02EB  00F4               	line	60
  4156                           	
  4157                           l1400:	
  4158  02EC                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  4159                           	bcf	status, 5	;RP0=0, select bank0
  4160  02EC  1283               	bcf	status, 6	;RP1=0, select bank0
  4161  02ED  1303               	bcf	(8),2	;volatile
  4162  02EE  1108               	line	61
  4163                           	
  4164                           l1402:	
  4165  02EF                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  4166                           	movf	(lcd_instReg@i),w
  4167  02EF  0874               	movwf	(??_lcd_instReg+0)+0
  4168  02F0  00F2               	movlw	04h
  4169  02F1  3004               u725:
  4170  02F2                     	clrc
  4171  02F2  1003               	rrf	(??_lcd_instReg+0)+0,f
  4172  02F3  0CF2               	addlw	-1
  4173  02F4  3EFF               	skipz
  4174  02F5  1D03               	goto	u725
  4175  02F6  2AF2               	movf	0+(??_lcd_instReg+0)+0,w
  4176  02F7  0872               	movwf	(??_lcd_instReg+1)+0
  4177  02F8  00F3               	movlw	04h
  4178  02F9  3004               u735:
  4179  02FA                     	clrc
  4180  02FA  1003               	rlf	(??_lcd_instReg+1)+0,f
  4181  02FB  0DF3               	addlw	-1
  4182  02FC  3EFF               	skipz
  4183  02FD  1D03               	goto	u735
  4184  02FE  2AFA               	movf	(8),w	;volatile
  4185  02FF  0808               	andlw	0Fh
  4186  0300  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  4187  0301  0473               	movwf	(8)	;volatile
  4188  0302  0088               	line	63
  4189                           	
  4190                           l1404:	
  4191  0303                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  4192                           	bcf	(8),3	;volatile
  4193  0303  1188               	line	64
  4194                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  4195                           		decf	((lcd_instReg@i)),w
  4196  0304  0374               	btfsc	status,2
  4197  0305  1903               	goto	u741
  4198  0306  2B08               	goto	u740
  4199  0307  2B09               u741:
  4200  0308                     	goto	l1408
  4201  0308  2B10               u740:
  4202  0309                     	
  4203                           l1406:	
  4204  0309                     		movlw	2
  4205  0309  3002               	xorwf	((lcd_instReg@i)),w
  4206  030A  0674               	btfss	status,2
  4207  030B  1D03               	goto	u751
  4208  030C  2B0E               	goto	u750
  4209  030D  2B0F               u751:
  4210  030E                     	goto	l1410
  4211  030E  2B1A               u750:
  4212  030F                     	goto	l1408
  4213  030F  2B10               	
  4214                           l159:	
  4215  0310                     	line	65
  4216                           	
  4217                           l1408:	
  4218  0310                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4219                           	opt asmopt_push
  4220                           opt asmopt_off
  4221                           movlw	3
  4222  0310  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4223  0311  00F3               	movlw	151
  4224  0312  3097               movwf	((??_lcd_instReg+0)+0),f
  4225  0313  00F2               	u1507:
  4226  0314                     decfsz	((??_lcd_instReg+0)+0),f
  4227  0314  0BF2               	goto	u1507
  4228  0315  2B14               	decfsz	((??_lcd_instReg+0)+0+1),f
  4229  0316  0BF3               	goto	u1507
  4230  0317  2B14               	nop2
  4231  0318  2B19               opt asmopt_pop
  4232                           
  4233                           	goto	l1412
  4234  0319  2B1F               	line	66
  4235                           ;lcd.c: 66:     else
  4236                           	
  4237                           l157:	
  4238  031A                     	line	67
  4239                           	
  4240                           l1410:	
  4241  031A                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4242                           	opt asmopt_push
  4243                           opt asmopt_off
  4244                           	movlw	13
  4245  031A  300D               movwf	((??_lcd_instReg+0)+0),f
  4246  031B  00F2               	u1517:
  4247  031C                     decfsz	(??_lcd_instReg+0)+0,f
  4248  031C  0BF2               	goto	u1517
  4249  031D  2B1C               opt asmopt_pop
  4250                           
  4251                           	goto	l1412
  4252  031E  2B1F               	
  4253                           l160:	
  4254  031F                     	line	68
  4255                           	
  4256                           l1412:	
  4257  031F                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  4258                           	bcf	status, 5	;RP0=0, select bank0
  4259  031F  1283               	bcf	status, 6	;RP1=0, select bank0
  4260  0320  1303               	bsf	(8),3	;volatile
  4261  0321  1588               	line	71
  4262                           	
  4263                           l1414:	
  4264  0322                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  4265                           	movlw	low(0F0h)
  4266  0322  30F0               	andwf	(lcd_instReg@i),w
  4267  0323  0574               	movwf	(??_lcd_instReg+0)+0
  4268  0324  00F2               		movlw	32
  4269  0325  3020               	xorwf	((??_lcd_instReg+0)+0),w
  4270  0326  0672               	btfss	status,2
  4271  0327  1D03               	goto	u761
  4272  0328  2B2A               	goto	u760
  4273  0329  2B2B               u761:
  4274  032A                     	goto	l1426
  4275  032A  2B49               u760:
  4276  032B                     	line	73
  4277                           	
  4278                           l1416:	
  4279  032B                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  4280                           	bcf	(8),2	;volatile
  4281  032B  1108               	line	74
  4282                           	
  4283                           l1418:	
  4284  032C                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  4285                           	movf	(lcd_instReg@i),w
  4286  032C  0874               	movwf	(??_lcd_instReg+0)+0
  4287  032D  00F2               	movlw	04h
  4288  032E  3004               u775:
  4289  032F                     	clrc
  4290  032F  1003               	rrf	(??_lcd_instReg+0)+0,f
  4291  0330  0CF2               	addlw	-1
  4292  0331  3EFF               	skipz
  4293  0332  1D03               	goto	u775
  4294  0333  2B2F               	movf	0+(??_lcd_instReg+0)+0,w
  4295  0334  0872               	movwf	(??_lcd_instReg+1)+0
  4296  0335  00F3               	movlw	04h
  4297  0336  3004               u785:
  4298  0337                     	clrc
  4299  0337  1003               	rlf	(??_lcd_instReg+1)+0,f
  4300  0338  0DF3               	addlw	-1
  4301  0339  3EFF               	skipz
  4302  033A  1D03               	goto	u785
  4303  033B  2B37               	movf	(8),w	;volatile
  4304  033C  0808               	andlw	0Fh
  4305  033D  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  4306  033E  0473               	movwf	(8)	;volatile
  4307  033F  0088               	line	75
  4308                           	
  4309                           l1420:	
  4310  0340                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  4311                           	bcf	(8),3	;volatile
  4312  0340  1188               	line	76
  4313                           	
  4314                           l1422:	
  4315  0341                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4316                           	opt asmopt_push
  4317                           opt asmopt_off
  4318                           	movlw	13
  4319  0341  300D               movwf	((??_lcd_instReg+0)+0),f
  4320  0342  00F2               	u1527:
  4321  0343                     decfsz	(??_lcd_instReg+0)+0,f
  4322  0343  0BF2               	goto	u1527
  4323  0344  2B43               opt asmopt_pop
  4324                           
  4325                           	line	77
  4326                           	
  4327                           l1424:	
  4328  0345                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  4329                           	bcf	status, 5	;RP0=0, select bank0
  4330  0345  1283               	bcf	status, 6	;RP1=0, select bank0
  4331  0346  1303               	bsf	(8),3	;volatile
  4332  0347  1588               	goto	l1426
  4333  0348  2B49               	line	78
  4334                           ;lcd.c: 78:     }
  4335                           	
  4336                           l161:	
  4337  0349                     	line	80
  4338                           	
  4339                           l1426:	
  4340  0349                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  4341                           	bcf	(8),2	;volatile
  4342  0349  1108               	line	81
  4343                           	
  4344                           l1428:	
  4345  034A                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  4346                           	movf	(lcd_instReg@i),w
  4347  034A  0874               	movwf	(??_lcd_instReg+0)+0
  4348  034B  00F2               	movlw	04h
  4349  034C  3004               u795:
  4350  034D                     	clrc
  4351  034D  1003               	rlf	(??_lcd_instReg+0)+0,f
  4352  034E  0DF2               	addlw	-1
  4353  034F  3EFF               	skipz
  4354  0350  1D03               	goto	u795
  4355  0351  2B4D               	movf	(8),w	;volatile
  4356  0352  0808               	andlw	0Fh
  4357  0353  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  4358  0354  0472               	movwf	(8)	;volatile
  4359  0355  0088               	line	82
  4360                           	
  4361                           l1430:	
  4362  0356                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  4363                           	bcf	(8),3	;volatile
  4364  0356  1188               	line	83
  4365                           	
  4366                           l1432:	
  4367  0357                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  4368                           		decf	((lcd_instReg@i)),w
  4369  0357  0374               	btfsc	status,2
  4370  0358  1903               	goto	u801
  4371  0359  2B5B               	goto	u800
  4372  035A  2B5C               u801:
  4373  035B                     	goto	l1436
  4374  035B  2B63               u800:
  4375  035C                     	
  4376                           l1434:	
  4377  035C                     		movlw	2
  4378  035C  3002               	xorwf	((lcd_instReg@i)),w
  4379  035D  0674               	btfss	status,2
  4380  035E  1D03               	goto	u811
  4381  035F  2B61               	goto	u810
  4382  0360  2B62               u811:
  4383  0361                     	goto	l1438
  4384  0361  2B6D               u810:
  4385  0362                     	goto	l1436
  4386  0362  2B63               	
  4387                           l164:	
  4388  0363                     	line	84
  4389                           	
  4390                           l1436:	
  4391  0363                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4392                           	opt asmopt_push
  4393                           opt asmopt_off
  4394                           movlw	3
  4395  0363  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4396  0364  00F3               	movlw	151
  4397  0365  3097               movwf	((??_lcd_instReg+0)+0),f
  4398  0366  00F2               	u1537:
  4399  0367                     decfsz	((??_lcd_instReg+0)+0),f
  4400  0367  0BF2               	goto	u1537
  4401  0368  2B67               	decfsz	((??_lcd_instReg+0)+0+1),f
  4402  0369  0BF3               	goto	u1537
  4403  036A  2B67               	nop2
  4404  036B  2B6C               opt asmopt_pop
  4405                           
  4406                           	goto	l1440
  4407  036C  2B72               	line	85
  4408                           ;lcd.c: 85:     else
  4409                           	
  4410                           l162:	
  4411  036D                     	line	86
  4412                           	
  4413                           l1438:	
  4414  036D                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4415                           	opt asmopt_push
  4416                           opt asmopt_off
  4417                           	movlw	13
  4418  036D  300D               movwf	((??_lcd_instReg+0)+0),f
  4419  036E  00F2               	u1547:
  4420  036F                     decfsz	(??_lcd_instReg+0)+0,f
  4421  036F  0BF2               	goto	u1547
  4422  0370  2B6F               opt asmopt_pop
  4423                           
  4424                           	goto	l1440
  4425  0371  2B72               	
  4426                           l165:	
  4427  0372                     	line	87
  4428                           	
  4429                           l1440:	
  4430  0372                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  4431                           	bcf	status, 5	;RP0=0, select bank0
  4432  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  4433  0373  1303               	bsf	(8),3	;volatile
  4434  0374  1588               	line	88
  4435                           	
  4436                           l166:	
  4437  0375                     	return
  4438  0375  0008               	opt stack 0
  4439                           GLOBAL	__end_of_lcd_instReg
  4440                           	__end_of_lcd_instReg:
  4441  0376                     	signat	_lcd_instReg,4217
  4442                           	global	_delay
  4443                           
  4444 ;; *************** function _delay *****************
  4445 ;; Defined at:
  4446 ;;		line 7 in file "delay.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  t               2    2[COMMON] unsigned int 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         2       0       0       0       0
  4461 ;;      Locals:         0       0       0       0       0
  4462 ;;      Temps:          1       0       0       0       0
  4463 ;;      Totals:         3       0       0       0       0
  4464 ;;Total ram usage:        3 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    2
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_lcd_init
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4474                           	file	"delay.c"
  4475                           	line	7
  4476                           global __ptext11
  4477                           __ptext11:	;psect for function _delay
  4478  0552                     psect	text11
  4479                           	file	"delay.c"
  4480                           	line	7
  4481                           	global	__size_of_delay
  4482                           	__size_of_delay	equ	__end_of_delay-_delay
  4483  0017                     	
  4484                           _delay:	
  4485  0552                     ;incstack = 0
  4486                           	opt	stack 4
  4487                           ; Regs used in _delay: [wreg+status,2+status,0]
  4488                           	line	9
  4489                           	
  4490                           l1442:	
  4491  0552                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  4492                           	goto	l1446
  4493  0552  2D61               	
  4494                           l142:	
  4495  0553                     	line	11
  4496                           	
  4497                           l1444:	
  4498  0553                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  4499                           	opt asmopt_push
  4500                           opt asmopt_off
  4501                           	movlw	199
  4502  0553  30C7               movwf	((??_delay+0)+0),f
  4503  0554  00F4               	u1557:
  4504  0555                     	nop2
  4505  0555  2D56               decfsz	(??_delay+0)+0,f
  4506  0556  0BF4               	goto	u1557
  4507  0557  2D55               	nop2
  4508  0558  2D59               	nop2
  4509  0559  2D5A               opt asmopt_pop
  4510                           
  4511                           	line	12
  4512                           ;delay.c: 12:         --t;
  4513                           	movlw	01h
  4514  055A  3001               	subwf	(delay@t),f
  4515  055B  02F2               	movlw	0
  4516  055C  3000               	skipc
  4517  055D  1C03               	decf	(delay@t+1),f
  4518  055E  03F3               	subwf	(delay@t+1),f
  4519  055F  02F3               	goto	l1446
  4520  0560  2D61               	line	13
  4521                           ;delay.c: 13:     }
  4522                           	
  4523                           l141:	
  4524  0561                     	line	9
  4525                           	
  4526                           l1446:	
  4527  0561                     ;delay.c: 9:     while( t )
  4528                           	movf	((delay@t)),w
  4529  0561  0872               iorwf	((delay@t+1)),w
  4530  0562  0473               	btfss	status,2
  4531  0563  1D03               	goto	u821
  4532  0564  2D66               	goto	u820
  4533  0565  2D67               u821:
  4534  0566                     	goto	l1444
  4535  0566  2D53               u820:
  4536  0567                     	goto	l144
  4537  0567  2D68               	
  4538                           l143:	
  4539  0568                     	line	14
  4540                           	
  4541                           l144:	
  4542  0568                     	return
  4543  0568  0008               	opt stack 0
  4544                           GLOBAL	__end_of_delay
  4545                           	__end_of_delay:
  4546  0569                     	signat	_delay,4217
  4547                           	global	_habTemporizador
  4548                           
  4549 ;; *************** function _habTemporizador *****************
  4550 ;; Defined at:
  4551 ;;		line 34 in file "tempo.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  t               1    wreg     PTR struct temporizadorT
  4554 ;;		 -> tempo(24), 
  4555 ;;  h               1    2[COMMON] unsigned char 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  t               1    4[COMMON] PTR struct temporizadorT
  4558 ;;		 -> tempo(24), 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4568 ;;      Params:         1       0       0       0       0
  4569 ;;      Locals:         1       0       0       0       0
  4570 ;;      Temps:          1       0       0       0       0
  4571 ;;      Totals:         3       0       0       0       0
  4572 ;;Total ram usage:        3 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    2
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4582                           	file	"tempo.c"
  4583                           	line	34
  4584                           global __ptext12
  4585                           __ptext12:	;psect for function _habTemporizador
  4586  05CC                     psect	text12
  4587                           	file	"tempo.c"
  4588                           	line	34
  4589                           	global	__size_of_habTemporizador
  4590                           	__size_of_habTemporizador	equ	__end_of_habTemporizador-_habTemporizador
  4591  0009                     	
  4592                           _habTemporizador:	
  4593  05CC                     ;incstack = 0
  4594                           	opt	stack 5
  4595                           ; Regs used in _habTemporizador: [wregfsr0]
  4596                           ;habTemporizador@t stored from wreg
  4597                           	movwf	(habTemporizador@t)
  4598  05CC  00F4               	line	36
  4599                           	
  4600                           l1582:	
  4601  05CD                     ;tempo.c: 34: void habTemporizador( struct temporizadorT * t, unsigned char h );tempo.c:
                                  35: {;tempo.c: 36:     t->hab = h;
  4602                           	movf	(habTemporizador@h),w
  4603  05CD  0872               	movwf	(??_habTemporizador+0)+0
  4604  05CE  00F3               	movf	(habTemporizador@t),w
  4605  05CF  0874               	movwf	fsr0
  4606  05D0  0084               	movf	(??_habTemporizador+0)+0,w
  4607  05D1  0873               	bcf	status, 7	;select IRP bank0
  4608  05D2  1383               	movwf	indf
  4609  05D3  0080               	line	37
  4610                           	
  4611                           l211:	
  4612  05D4                     	return
  4613  05D4  0008               	opt stack 0
  4614                           GLOBAL	__end_of_habTemporizador
  4615                           	__end_of_habTemporizador:
  4616  05D5                     	signat	_habTemporizador,8313
  4617                           	global	_botao_init
  4618                           
  4619 ;; *************** function _botao_init *****************
  4620 ;; Defined at:
  4621 ;;		line 6 in file "botao.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		None
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4635 ;;      Params:         0       0       0       0       0
  4636 ;;      Locals:         0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0
  4638 ;;      Totals:         0       0       0       0       0
  4639 ;;Total ram usage:        0 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    2
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4649                           	file	"botao.c"
  4650                           	line	6
  4651                           global __ptext13
  4652                           __ptext13:	;psect for function _botao_init
  4653  05F1                     psect	text13
  4654                           	file	"botao.c"
  4655                           	line	6
  4656                           	global	__size_of_botao_init
  4657                           	__size_of_botao_init	equ	__end_of_botao_init-_botao_init
  4658  0005                     	
  4659                           _botao_init:	
  4660  05F1                     ;incstack = 0
  4661                           	opt	stack 5
  4662                           ; Regs used in _botao_init: []
  4663                           	line	8
  4664                           	
  4665                           l1092:	
  4666  05F1                     ;botao.c: 8:     TRISDbits.TRISD0 = 1;
  4667                           	bsf	status, 5	;RP0=1, select bank1
  4668  05F1  1683               	bcf	status, 6	;RP1=0, select bank1
  4669  05F2  1303               	bsf	(136)^080h,0	;volatile
  4670  05F3  1408               	line	9
  4671                           ;botao.c: 9:     TRISDbits.TRISD1 = 1;
  4672                           	bsf	(136)^080h,1	;volatile
  4673  05F4  1488               	line	10
  4674                           	
  4675                           l221:	
  4676  05F5                     	return
  4677  05F5  0008               	opt stack 0
  4678                           GLOBAL	__end_of_botao_init
  4679                           	__end_of_botao_init:
  4680  05F6                     	signat	_botao_init,89
  4681                           	global	_b1
  4682                           
  4683 ;; *************** function _b1 *****************
  4684 ;; Defined at:
  4685 ;;		line 53 in file "botao.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2, status,0
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    2
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4713                           	line	53
  4714                           global __ptext14
  4715                           __ptext14:	;psect for function _b1
  4716  05E5                     psect	text14
  4717                           	file	"botao.c"
  4718                           	line	53
  4719                           	global	__size_of_b1
  4720                           	__size_of_b1	equ	__end_of_b1-_b1
  4721  0006                     	
  4722                           _b1:	
  4723  05E5                     ;incstack = 0
  4724                           	opt	stack 5
  4725                           ; Regs used in _b1: [wreg+status,2+status,0]
  4726                           	line	55
  4727                           	
  4728                           l1124:	
  4729  05E5                     ;botao.c: 55:    return( PORTDbits.RD1 );
  4730                           	bcf	status, 5	;RP0=0, select bank0
  4731  05E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4732  05E6  1303               	rrf	(8),w	;volatile
  4733  05E7  0C08               	andlw	(1<<1)-1
  4734  05E8  3901               	goto	l244
  4735  05E9  2DEA               	
  4736                           l1126:	
  4737  05EA                     	line	56
  4738                           	
  4739                           l244:	
  4740  05EA                     	return
  4741  05EA  0008               	opt stack 0
  4742                           GLOBAL	__end_of_b1
  4743                           	__end_of_b1:
  4744  05EB                     	signat	_b1,89
  4745                           	global	_b0
  4746                           
  4747 ;; *************** function _b0 *****************
  4748 ;; Defined at:
  4749 ;;		line 15 in file "botao.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      unsigned char 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    2
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4777                           	line	15
  4778                           global __ptext15
  4779                           __ptext15:	;psect for function _b0
  4780  05EB                     psect	text15
  4781                           	file	"botao.c"
  4782                           	line	15
  4783                           	global	__size_of_b0
  4784                           	__size_of_b0	equ	__end_of_b0-_b0
  4785  0006                     	
  4786                           _b0:	
  4787  05EB                     ;incstack = 0
  4788                           	opt	stack 5
  4789                           ; Regs used in _b0: [wreg+status,2+status,0]
  4790                           	line	17
  4791                           	
  4792                           l1118:	
  4793  05EB                     ;botao.c: 17:     return( PORTDbits.RD0 );
  4794                           	bcf	status, 5	;RP0=0, select bank0
  4795  05EB  1283               	bcf	status, 6	;RP1=0, select bank0
  4796  05EC  1303               	movf	(8),w	;volatile
  4797  05ED  0808               	andlw	(1<<1)-1
  4798  05EE  3901               	goto	l224
  4799  05EF  2DF0               	
  4800                           l1120:	
  4801  05F0                     	line	18
  4802                           	
  4803                           l224:	
  4804  05F0                     	return
  4805  05F0  0008               	opt stack 0
  4806                           GLOBAL	__end_of_b0
  4807                           	__end_of_b0:
  4808  05F1                     	signat	_b0,89
  4809                           	global	_T0_status
  4810                           
  4811 ;; *************** function _T0_status *****************
  4812 ;; Defined at:
  4813 ;;		line 59 in file "timers.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  2    2[COMMON] unsigned int 
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         2       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0
  4830 ;;      Totals:         2       0       0       0       0
  4831 ;;Total ram usage:        2 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    2
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4841                           	file	"timers.c"
  4842                           	line	59
  4843                           global __ptext16
  4844                           __ptext16:	;psect for function _T0_status
  4845  05DD                     psect	text16
  4846                           	file	"timers.c"
  4847                           	line	59
  4848                           	global	__size_of_T0_status
  4849                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  4850  0008                     	
  4851                           _T0_status:	
  4852  05DD                     ;incstack = 0
  4853                           	opt	stack 5
  4854                           ; Regs used in _T0_status: [wreg]
  4855                           	line	61
  4856                           	
  4857                           l1584:	
  4858  05DD                     ;timers.c: 61:     return( T0count );
  4859                           	bcf	status, 5	;RP0=0, select bank0
  4860  05DD  1283               	bcf	status, 6	;RP1=0, select bank0
  4861  05DE  1303               	movf	(_T0count+1),w
  4862  05DF  0825               	movwf	(?_T0_status+1)
  4863  05E0  00F3               	movf	(_T0count),w
  4864  05E1  0824               	movwf	(?_T0_status)
  4865  05E2  00F2               	goto	l80
  4866  05E3  2DE4               	
  4867                           l1586:	
  4868  05E4                     	line	62
  4869                           	
  4870                           l80:	
  4871  05E4                     	return
  4872  05E4  0008               	opt stack 0
  4873                           GLOBAL	__end_of_T0_status
  4874                           	__end_of_T0_status:
  4875  05E5                     	signat	_T0_status,90
  4876                           	global	_T0_start
  4877                           
  4878 ;; *************** function _T0_start *****************
  4879 ;; Defined at:
  4880 ;;		line 42 in file "timers.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;  c               2    2[COMMON] unsigned int 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         2       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0
  4897 ;;      Totals:         2       0       0       0       0
  4898 ;;Total ram usage:        2 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    2
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_main
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4908                           	line	42
  4909                           global __ptext17
  4910                           __ptext17:	;psect for function _T0_start
  4911  05C2                     psect	text17
  4912                           	file	"timers.c"
  4913                           	line	42
  4914                           	global	__size_of_T0_start
  4915                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  4916  000A                     	
  4917                           _T0_start:	
  4918  05C2                     ;incstack = 0
  4919                           	opt	stack 5
  4920                           ; Regs used in _T0_start: [wreg]
  4921                           	line	44
  4922                           	
  4923                           l1578:	
  4924  05C2                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  4925                           	movlw	low(06h)
  4926  05C2  3006               	bcf	status, 5	;RP0=0, select bank0
  4927  05C3  1283               	bcf	status, 6	;RP1=0, select bank0
  4928  05C4  1303               	movwf	(1)	;volatile
  4929  05C5  0081               	line	45
  4930                           ;timers.c: 45:     T0count = c;
  4931                           	movf	(T0_start@c+1),w
  4932  05C6  0873               	movwf	(_T0count+1)
  4933  05C7  00A5               	movf	(T0_start@c),w
  4934  05C8  0872               	movwf	(_T0count)
  4935  05C9  00A4               	line	46
  4936                           	
  4937                           l1580:	
  4938  05CA                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  4939                           	bsf	(11),5	;volatile
  4940  05CA  168B               	line	47
  4941                           	
  4942                           l71:	
  4943  05CB                     	return
  4944  05CB  0008               	opt stack 0
  4945                           GLOBAL	__end_of_T0_start
  4946                           	__end_of_T0_start:
  4947  05CC                     	signat	_T0_start,4217
  4948                           	global	_T0_init
  4949                           
  4950 ;; *************** function _T0_init *****************
  4951 ;; Defined at:
  4952 ;;		line 21 in file "timers.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;		None
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;		None
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  1    wreg      void 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4966 ;;      Params:         0       0       0       0       0
  4967 ;;      Locals:         0       0       0       0       0
  4968 ;;      Temps:          0       0       0       0       0
  4969 ;;      Totals:         0       0       0       0       0
  4970 ;;Total ram usage:        0 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    2
  4973 ;; This function calls:
  4974 ;;		Nothing
  4975 ;; This function is called by:
  4976 ;;		_main
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4980                           	line	21
  4981                           global __ptext18
  4982                           __ptext18:	;psect for function _T0_init
  4983  05A2                     psect	text18
  4984                           	file	"timers.c"
  4985                           	line	21
  4986                           	global	__size_of_T0_init
  4987                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  4988  0010                     	
  4989                           _T0_init:	
  4990  05A2                     ;incstack = 0
  4991                           	opt	stack 5
  4992                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  4993                           	line	23
  4994                           	
  4995                           l1080:	
  4996  05A2                     ;timers.c: 23:     INTCONbits.GIE = 0;
  4997                           	bcf	(11),7	;volatile
  4998  05A2  138B               	line	24
  4999                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  5000                           	bsf	status, 5	;RP0=1, select bank1
  5001  05A3  1683               	bcf	status, 6	;RP1=0, select bank1
  5002  05A4  1303               	bcf	(129)^080h,3	;volatile
  5003  05A5  1181               	line	25
  5004                           	
  5005                           l1082:	
  5006  05A6                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  5007                           	movf	(129)^080h,w	;volatile
  5008  05A6  0801               	andlw	not (((1<<3)-1)<<0)
  5009  05A7  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  5010  05A8  3801               	movwf	(129)^080h	;volatile
  5011  05A9  0081               	line	26
  5012                           	
  5013                           l1084:	
  5014  05AA                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  5015                           	bcf	(129)^080h,5	;volatile
  5016  05AA  1281               	line	27
  5017                           	
  5018                           l1086:	
  5019  05AB                     ;timers.c: 27:     TMR0 = (256-250);
  5020                           	movlw	low(06h)
  5021  05AB  3006               	bcf	status, 5	;RP0=0, select bank0
  5022  05AC  1283               	bcf	status, 6	;RP1=0, select bank0
  5023  05AD  1303               	movwf	(1)	;volatile
  5024  05AE  0081               	line	28
  5025                           	
  5026                           l1088:	
  5027  05AF                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  5028                           	bcf	(11),5	;volatile
  5029  05AF  128B               	line	29
  5030                           	
  5031                           l1090:	
  5032  05B0                     ;timers.c: 29:     INTCONbits.GIE = 1;
  5033                           	bsf	(11),7	;volatile
  5034  05B0  178B               	line	30
  5035                           	
  5036                           l64:	
  5037  05B1                     	return
  5038  05B1  0008               	opt stack 0
  5039                           GLOBAL	__end_of_T0_init
  5040                           	__end_of_T0_init:
  5041  05B2                     	signat	_T0_init,89
  5042                           	global	_isr
  5043                           
  5044 ;; *************** function _isr *****************
  5045 ;; Defined at:
  5046 ;;		line 7 in file "interrupt.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       0       0       0       0
  5061 ;;      Locals:         0       0       0       0       0
  5062 ;;      Temps:          2       0       0       0       0
  5063 ;;      Totals:         2       0       0       0       0
  5064 ;;Total ram usage:        2 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    1
  5067 ;; This function calls:
  5068 ;;		_T0_int
  5069 ;;		_T1_int
  5070 ;;		_T2_int
  5071 ;; This function is called by:
  5072 ;;		Interrupt level 1
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  5076                           	file	"interrupt.c"
  5077                           	line	7
  5078                           global __ptext19
  5079                           __ptext19:	;psect for function _isr
  5080  04F8                     psect	text19
  5081                           	file	"interrupt.c"
  5082                           	line	7
  5083                           	global	__size_of_isr
  5084                           	__size_of_isr	equ	__end_of_isr-_isr
  5085  002C                     	
  5086                           _isr:	
  5087  04F8                     ;incstack = 0
  5088                           	opt	stack 3
  5089                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  5090                           psect	intentry,class=CODE,delta=2
  5091                           global __pintentry
  5092                           __pintentry:
  5093  0004                     global interrupt_function
  5094                           interrupt_function:
  5095  0004                     	global saved_w
  5096                           	saved_w	set	btemp+0
  5097  007E                     	movwf	saved_w
  5098  0004  00FE               	swapf	status,w
  5099  0005  0E03               	movwf	(??_isr+0)
  5100  0006  00F0               	movf	pclath,w
  5101  0007  080A               	movwf	(??_isr+1)
  5102  0008  00F1               	ljmp	_isr
  5103  0009  120A  118A  2CF8   psect	text19
  5104                           	line	9
  5105                           	
  5106                           i1l1714:	
  5107  04F8                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  5108                           	btfss	(11),2	;volatile
  5109  04F8  1D0B               	goto	u124_21
  5110  04F9  2CFB               	goto	u124_20
  5111  04FA  2CFC               u124_21:
  5112  04FB                     	goto	i1l1720
  5113  04FB  2D03               u124_20:
  5114  04FC                     	line	11
  5115                           	
  5116                           i1l1716:	
  5117  04FC                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  5118                           	bcf	(11),2	;volatile
  5119  04FC  110B               	line	12
  5120                           	
  5121                           i1l1718:	
  5122  04FD                     ;interrupt.c: 12:         T0_int();
  5123                           	fcall	_T0_int
  5124  04FD  120A  118A  2590  120A  118A  	goto	i1l1720
  5125  0502  2D03               	line	13
  5126                           ;interrupt.c: 13:     }
  5127                           	
  5128                           i1l133:	
  5129  0503                     	line	14
  5130                           	
  5131                           i1l1720:	
  5132  0503                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  5133                           	bcf	status, 5	;RP0=0, select bank0
  5134  0503  1283               	bcf	status, 6	;RP1=0, select bank0
  5135  0504  1303               	btfss	(12),0	;volatile
  5136  0505  1C0C               	goto	u125_21
  5137  0506  2D08               	goto	u125_20
  5138  0507  2D09               u125_21:
  5139  0508                     	goto	i1l1726
  5140  0508  2D10               u125_20:
  5141  0509                     	line	16
  5142                           	
  5143                           i1l1722:	
  5144  0509                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  5145                           	bcf	(12),0	;volatile
  5146  0509  100C               	line	17
  5147                           	
  5148                           i1l1724:	
  5149  050A                     ;interrupt.c: 17:         T1_int();
  5150                           	fcall	_T1_int
  5151  050A  120A  118A  2569  120A  118A  	goto	i1l1726
  5152  050F  2D10               	line	18
  5153                           ;interrupt.c: 18:     }
  5154                           	
  5155                           i1l134:	
  5156  0510                     	line	19
  5157                           	
  5158                           i1l1726:	
  5159  0510                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  5160                           	bcf	status, 5	;RP0=0, select bank0
  5161  0510  1283               	bcf	status, 6	;RP1=0, select bank0
  5162  0511  1303               	btfss	(12),1	;volatile
  5163  0512  1C8C               	goto	u126_21
  5164  0513  2D15               	goto	u126_20
  5165  0514  2D16               u126_21:
  5166  0515                     	goto	i1l136
  5167  0515  2D1D               u126_20:
  5168  0516                     	line	21
  5169                           	
  5170                           i1l1728:	
  5171  0516                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  5172                           	bcf	(12),1	;volatile
  5173  0516  108C               	line	22
  5174                           	
  5175                           i1l1730:	
  5176  0517                     ;interrupt.c: 22:         T2_int();
  5177                           	fcall	_T2_int
  5178  0517  120A  118A  25B2  120A  118A  	goto	i1l136
  5179  051C  2D1D               	line	23
  5180                           ;interrupt.c: 23:     }
  5181                           	
  5182                           i1l135:	
  5183  051D                     	line	24
  5184                           	
  5185                           i1l136:	
  5186  051D                     	movf	(??_isr+1),w
  5187  051D  0871               	movwf	pclath
  5188  051E  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  5189  051F  0E70               	movwf	status
  5190  0520  0083               	swapf	saved_w,f
  5191  0521  0EFE               	swapf	saved_w,w
  5192  0522  0E7E               	retfie
  5193  0523  0009               	opt stack 0
  5194                           GLOBAL	__end_of_isr
  5195                           	__end_of_isr:
  5196  0524                     	signat	_isr,89
  5197                           	global	_T2_int
  5198                           
  5199 ;; *************** function _T2_int *****************
  5200 ;; Defined at:
  5201 ;;		line 132 in file "timers.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_isr
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  5228                           	file	"timers.c"
  5229                           	line	132
  5230                           global __ptext20
  5231                           __ptext20:	;psect for function _T2_int
  5232  05B2                     psect	text20
  5233                           	file	"timers.c"
  5234                           	line	132
  5235                           	global	__size_of_T2_int
  5236                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  5237  0010                     	
  5238                           _T2_int:	
  5239  05B2                     ;incstack = 0
  5240                           	opt	stack 3
  5241                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  5242                           	line	134
  5243                           	
  5244                           i1l1650:	
  5245  05B2                     ;timers.c: 134:     if( T2count )
  5246                           	bcf	status, 5	;RP0=0, select bank0
  5247  05B2  1283               	bcf	status, 6	;RP1=0, select bank0
  5248  05B3  1303               	movf	((_T2count)),w
  5249  05B4  0820               iorwf	((_T2count+1)),w
  5250  05B5  0421               	btfsc	status,2
  5251  05B6  1903               	goto	u122_21
  5252  05B7  2DB9               	goto	u122_20
  5253  05B8  2DBA               u122_21:
  5254  05B9                     	goto	i1l106
  5255  05B9  2DC1               u122_20:
  5256  05BA                     	line	136
  5257                           	
  5258                           i1l1652:	
  5259  05BA                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  5260                           	movlw	01h
  5261  05BA  3001               	subwf	(_T2count),f
  5262  05BB  02A0               	movlw	0
  5263  05BC  3000               	skipc
  5264  05BD  1C03               	decf	(_T2count+1),f
  5265  05BE  03A1               	subwf	(_T2count+1),f
  5266  05BF  02A1               	goto	i1l106
  5267  05C0  2DC1               	line	137
  5268                           ;timers.c: 137:     }
  5269                           	
  5270                           i1l105:	
  5271  05C1                     	line	138
  5272                           	
  5273                           i1l106:	
  5274  05C1                     	return
  5275  05C1  0008               	opt stack 0
  5276                           GLOBAL	__end_of_T2_int
  5277                           	__end_of_T2_int:
  5278  05C2                     	signat	_T2_int,89
  5279                           	global	_T1_int
  5280                           
  5281 ;; *************** function _T1_int *****************
  5282 ;; Defined at:
  5283 ;;		line 80 in file "timers.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5297 ;;      Params:         0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0
  5299 ;;      Temps:          0       0       0       0       0
  5300 ;;      Totals:         0       0       0       0       0
  5301 ;;Total ram usage:        0 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_isr
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5310                           	line	80
  5311                           global __ptext21
  5312                           __ptext21:	;psect for function _T1_int
  5313  0569                     psect	text21
  5314                           	file	"timers.c"
  5315                           	line	80
  5316                           	global	__size_of_T1_int
  5317                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  5318  0014                     	
  5319                           _T1_int:	
  5320  0569                     ;incstack = 0
  5321                           	opt	stack 3
  5322                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  5323                           	line	82
  5324                           	
  5325                           i1l1644:	
  5326  0569                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  5327                           	movlw	low(0FCh)
  5328  0569  30FC               	bcf	status, 5	;RP0=0, select bank0
  5329  056A  1283               	bcf	status, 6	;RP1=0, select bank0
  5330  056B  1303               	movwf	(15)	;volatile
  5331  056C  008F               	line	83
  5332                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  5333                           	movlw	low(018h)
  5334  056D  3018               	movwf	(14)	;volatile
  5335  056E  008E               	line	84
  5336                           	
  5337                           i1l1646:	
  5338  056F                     ;timers.c: 84:     if( T1count )
  5339                           	movf	((_T1count)),w
  5340  056F  0822               iorwf	((_T1count+1)),w
  5341  0570  0423               	btfsc	status,2
  5342  0571  1903               	goto	u121_21
  5343  0572  2D74               	goto	u121_20
  5344  0573  2D75               u121_21:
  5345  0574                     	goto	i1l87
  5346  0574  2D7C               u121_20:
  5347  0575                     	line	86
  5348                           	
  5349                           i1l1648:	
  5350  0575                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  5351                           	movlw	01h
  5352  0575  3001               	subwf	(_T1count),f
  5353  0576  02A2               	movlw	0
  5354  0577  3000               	skipc
  5355  0578  1C03               	decf	(_T1count+1),f
  5356  0579  03A3               	subwf	(_T1count+1),f
  5357  057A  02A3               	goto	i1l87
  5358  057B  2D7C               	line	87
  5359                           ;timers.c: 87:     }
  5360                           	
  5361                           i1l86:	
  5362  057C                     	line	88
  5363                           	
  5364                           i1l87:	
  5365  057C                     	return
  5366  057C  0008               	opt stack 0
  5367                           GLOBAL	__end_of_T1_int
  5368                           	__end_of_T1_int:
  5369  057D                     	signat	_T1_int,89
  5370                           	global	_T0_int
  5371                           
  5372 ;; *************** function _T0_int *****************
  5373 ;; Defined at:
  5374 ;;		line 33 in file "timers.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;		None
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5388 ;;      Params:         0       0       0       0       0
  5389 ;;      Locals:         0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0
  5391 ;;      Totals:         0       0       0       0       0
  5392 ;;Total ram usage:        0 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_isr
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5401                           	line	33
  5402                           global __ptext22
  5403                           __ptext22:	;psect for function _T0_int
  5404  0590                     psect	text22
  5405                           	file	"timers.c"
  5406                           	line	33
  5407                           	global	__size_of_T0_int
  5408                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  5409  0012                     	
  5410                           _T0_int:	
  5411  0590                     ;incstack = 0
  5412                           	opt	stack 3
  5413                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  5414                           	line	35
  5415                           	
  5416                           i1l1638:	
  5417  0590                     ;timers.c: 35:     TMR0 = (256-250);
  5418                           	movlw	low(06h)
  5419  0590  3006               	bcf	status, 5	;RP0=0, select bank0
  5420  0591  1283               	bcf	status, 6	;RP1=0, select bank0
  5421  0592  1303               	movwf	(1)	;volatile
  5422  0593  0081               	line	36
  5423                           	
  5424                           i1l1640:	
  5425  0594                     ;timers.c: 36:     if( T0count )
  5426                           	movf	((_T0count)),w
  5427  0594  0824               iorwf	((_T0count+1)),w
  5428  0595  0425               	btfsc	status,2
  5429  0596  1903               	goto	u120_21
  5430  0597  2D99               	goto	u120_20
  5431  0598  2D9A               u120_21:
  5432  0599                     	goto	i1l68
  5433  0599  2DA1               u120_20:
  5434  059A                     	line	38
  5435                           	
  5436                           i1l1642:	
  5437  059A                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  5438                           	movlw	01h
  5439  059A  3001               	subwf	(_T0count),f
  5440  059B  02A4               	movlw	0
  5441  059C  3000               	skipc
  5442  059D  1C03               	decf	(_T0count+1),f
  5443  059E  03A5               	subwf	(_T0count+1),f
  5444  059F  02A5               	goto	i1l68
  5445  05A0  2DA1               	line	39
  5446                           ;timers.c: 39:     }
  5447                           	
  5448                           i1l67:	
  5449  05A1                     	line	40
  5450                           	
  5451                           i1l68:	
  5452  05A1                     	return
  5453  05A1  0008               	opt stack 0
  5454                           GLOBAL	__end_of_T0_int
  5455                           	__end_of_T0_int:
  5456  05A2                     	signat	_T0_int,89
  5457                           global	___latbits
  5458                           ___latbits	equ	2
  5459  0002                     	global	btemp
  5460                           	btemp set 07Eh
  5461  007E                     
  5462                           	DABS	1,126,2	;btemp
  5463                           	global	wtemp0
  5464                           	wtemp0 set btemp+0
  5465  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _main->_temporizar
    _temporizar->___awmod
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    8568
                                             16 BANK0      4     4      0
                            _T0_init
                           _T0_start
                          _T0_status
                                 _b0
                                 _b1
                         _botao_init
                    _habTemporizador
                           _lcd_init
                            _lcd_num
                          _lcd_print
                  _resetTemporizador
                         _temporizar
 ---------------------------------------------------------------------------------
 (1) _temporizar                                           5     5      0    1278
                                              9 COMMON     1     1      0
                                              0 BANK0      4     4      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _resetTemporizador                                    1     1      0     195
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     940
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    5292
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     427
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _habTemporizador                                      3     2      1     262
                                              2 COMMON     3     2      1
                                 _b0 (ARG)
                                 _b1 (ARG)
 ---------------------------------------------------------------------------------
 (1) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b0                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_start                                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _T0_init
   _T0_start
   _T0_status
   _b0
   _b1
   _botao_init
   _habTemporizador
     _b0 (ARG)
     _b1 (ARG)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _resetTemporizador
   _temporizar
     ___awmod

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3E      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 08 08:44:48 2022

                         pc 0002                 __CFG_CP$OFF 0000                lcd_dataReg@d 0074  
                        l31 0069                          l32 0168                          l33 0169  
                        l34 016A                          l35 016A                          l71 05CB  
                        l64 05B1                          l80 05E4                  _b0Anterior 007B  
                        _b0 05EB                          _b1 05E5                ___awdiv@sign 003F  
                        fsr 0004                  _b1Anterior 007A                         ?_b0 0070  
                       ?_b1 0070                         l200 025A                         l201 025A  
                       l211 05D4                         l204 02EA                         l221 05F5  
                       l141 0561                         l205 02E9                         l142 0553  
                       l214 0551                         l206 02E8                         l143 0568  
                       l207 02E7                         l224 05F0                         l144 0568  
                       l160 031F                         l208 02EA                         l161 0349  
                       l162 036D                         l244 05EA                         l164 0363  
                       l500 03E8                         l172 058F                         l165 0372  
                       l157 031A                         l181 04B4                         l166 0375  
                       l510 042C                         l190 01B3                         l182 049D  
                       l159 0310                         l175 048A                         l511 043A  
                       l503 03F6                         l191 01B4                         l183 04C1  
                       l512 0446                         l504 0400                         l192 01D6  
                       l184 04C1                         l513 044B                         l505 043B  
                       l169 04F7                         l193 01E2                         l506 0415  
                       l194 01D7                         l507 0409                         l187 0184  
                       l508 041A                         l196 01FF                         l188 01C8  
                       l509 041B                         l197 0200                         l189 0199  
                       l198 020E                         l199 020E                         l490 0385  
                       l491 0393                         l492 03D8                         l493 03AA  
                       l494 039E                         l495 03AF                         l496 03B0  
                       l497 03C9                         l498 03D7                         l499 03E3  
                       _PR2 0092                __CFG_CPD$OFF 0000                         u800 035C  
                       u801 035B                         u810 0362                         u811 0361  
                       u820 0567                         u740 0309                         u821 0566  
                       u741 0308                         u725 02F2                         u750 030F  
                       u751 030E                         u735 02FA                         u760 032B  
                       u761 032A                         u835 04C9                         u845 04D1  
                       u775 032F                         u855 04E6                         u785 0337  
                       u865 0581                         u970 03EE                         u795 034D  
                       u971 03ED                         u980 03FA                         u981 03F9  
                       u990 0406                         u991 0405                         _isr 04F8  
                       fsr0 0004                         indf 0000                ___awmod@sign 0078  
                      ??_b0 0072                        ??_b1 0072                __CFG_LVP$OFF 0000  
               lcd_num@size 004A                        l1110 053C                        l1120 05F0  
                      l1112 0543                        l1114 0547                        l1124 05E5  
                      l1116 054B                        l1118 05EB                        l1126 05EA  
                      l1080 05A2                        l1400 02EC                        l1090 05B0  
                      l1082 05A6                        l1410 031A                        l1402 02EF  
                      l1084 05AA                        l1092 05F1                        l1420 0340  
                      l1412 031F                        l1404 0303                        l1086 05AB  
                      l1430 0356                        l1422 0341                        l1414 0322  
                      l1406 0309                        l1088 05AF                        l1440 0372  
                      l1432 0357                        l1424 0345                        l1416 032B  
                      l1408 0310                        l1520 03F6                        l1512 03E9  
                      l1600 02D6                        l1442 0552                        l1434 035C  
                      l1418 032C                        l1426 0349                        l1530 0410  
                      l1522 03FA                        l1514 03EA                        l1450 04C6  
                      l1602 02DE                        l1444 0553                        l1436 0363  
                      l1428 034A                        l1540 0433                        l1532 0415  
                      l1524 0400                        l1516 03EE                        l1460 04E3  
                      l1452 04DA                        l1446 0561                        l1438 036D  
                      l1550 044C                        l1534 041B                        l1526 0406  
                      l1542 043B                        l1518 03F3                        l1462 04EF  
                      l1454 04DB                        l1560 045B                        l1552 0455  
                      l1544 0440                        l1536 0425                        l1528 0409  
                      l1464 04F4                        l1456 04DF                        l1448 04C3  
                      l1800 0194                        l1562 045C                        l1554 0458  
                      l1546 0446                        l1538 042C                        l1458 04E2  
                      l1466 057E                        l1810 01D7                        l1802 0199  
                      l1580 05CA                        l1564 0466                        l1556 0459  
                      l1740 0382                        l1548 044B                        l1820 0207  
                      l1812 01DD                        l1804 01AE                        l1582 05CD  
                      l1558 045A                        l1750 0395                        l1742 0385  
                      l1734 0376                        l1822 024C                        l1806 01B4  
                      l1814 01E2                        l1590 0264                        l1830 003A  
                      l1584 05DD                        l1760 03B0                        l1752 039B  
                      l1744 0389                        l1736 0379                        l1816 01F6  
                      l1808 01C8                        l1592 0285                        l1840 0062  
                      l1832 0047                        l1824 001E                        l1578 05C2  
                      l1586 05E4                        l1762 03C1                        l1754 039E  
                      l1770 03D8                        l1746 038E                        l1738 037D  
                      l1818 0200                        l1594 028C                        l1850 009D  
                      l1842 0069                        l1834 0050                        l1826 0028  
                      l1772 03DD                        l1764 03C7                        l1756 03A5  
                      l1748 0393                        l1780 0492                        l1596 02AD  
                      l1588 025C                        l1860 00C9                        l1852 00A3  
                      l1844 0079                        l1836 0056                        l1828 002D  
                      l1774 03E3                        l1766 03C9                        l1758 03AA  
                      l1790 0170                        l1782 049D                        l1598 02B5  
                      l1870 0139                        l1862 00E0                        l1854 00A9  
                      l1846 0089                        l1838 005C                        l1776 03E8  
                      l1768 03D0                        l1792 0179                        l1784 04A9  
                      l1872 0150                        l1864 00F7                        l1856 00AF  
                      l1848 0094                        l1794 017E                        l1786 04AF  
                      l1778 048E                        l1866 010E                        l1858 00B5  
                      l1796 0184                        l1788 04B4                        l1868 0122  
                      l1798 018E                        ?_isr 0070                        STR_1 052A  
                      STR_2 052A                        u1010 0419                        u1011 0418  
                      u1020 0425                        u1100 02DE                        u1021 0424  
                      u1005 040A                        u1101 02DD                        u1040 0439  
                      u1041 0438                        u1025 0421                        u1050 0440  
                      u1051 043F                        u1035 042D                        u1310 03AE  
                      u1070 0264                        u1311 03AD                        u1071 0263  
                      u1400 017E                        u1080 028C                        u1305 039F  
                      u1401 017D                        u1081 028B                        u1330 03C1  
                      u1410 01AE                        u1090 02B5                        u1331 03C0  
                      u1411 01AD                        u1091 02B4                        u1420 01D5  
                      u1325 03B1                        u1421 01D4                        u1350 03D6  
                      u1270 037D                        u1430 01F6                        u1351 03D5  
                      u1335 03BD                        u1271 037C                        u1431 01F5  
                      u1360 03DD                        u1280 0389                        u1440 01FE  
                      u1361 03DC                        u1345 03CA                        u1281 0388  
                      u1441 01FD                        u1425 01D1                        u1290 039B  
                      u1450 0207                        u1370 04C0                        u1507 0314  
                      u1291 039A                        u1451 0206                        u1435 01F2  
                      u1371 04BF                        u1460 0259                        u1380 0175  
                      u1517 031C                        u1461 0258                        u1381 0173  
                      u1390 0176                        u1470 0094                        u1527 0343  
                      u1471 0093                        u1537 0367                        u1465 0255  
                      u1547 036F                        u1557 0555                        u1487 04DD  
                      u1497 04F2                        i1l67 05A1                        i1l68 05A1  
                      i1l86 057C                        i1l87 057C                        _TMR0 0001  
                      _TMR2 0011             __end_of_T0_init 05B2                __CFG_WRT$OFF 0000  
                      _main 001E                        btemp 007E                        start 000C  
             __CFG_IESO$OFF 0000                lcd_instReg@i 0074            ?_habTemporizador 0072  
                     ??_isr 0070                lcd_num@sinal 004B                       ?_main 0070  
           __end_of___awdiv 03E9               __CFG_WDTE$OFF 0000             __end_of___awmod 044C  
           ___awdiv@divisor 0072                       i1l105 05C1                       i1l106 05C1  
                     i1l133 0503                       i1l134 0510                       i1l135 051D  
                     i1l136 051D             ___awdiv@counter 003E                       _TMR1H 000F  
                     _TMR1L 000E                       _PORTD 0008                lcd_print@col 0078  
              lcd_print@lin 0040              __CFG_FCMEN$OFF 0000                lcd_print@pos 003F  
              lcd_print@str 0079          __size_of_T0_status 0008            __end_of_T0_start 05CC  
           __end_of_lcd_num 025B                       _delay 0552                       _tempo 0026  
            __CFG_BOREN$OFF 0000                       pclath 000A                       status 0003  
                     wtemp0 007E               lcd_lincol@col 0075               lcd_lincol@lin 0077  
            __CFG_MCLRE$OFF 0000             __initialization 000F                __end_of_main 016D  
         _resetTemporizador 053B                      ??_main 004E          ?_resetTemporizador 0070  
                 ??_T0_init 0072                      ?_delay 0072            ___awdiv@dividend 0074  
       ??_resetTemporizador 0072                      u120_20 059A                      u120_21 0599  
                    i1l1640 0594                      u121_20 0575                      i1l1720 0503  
                    u121_21 0574                      i1l1642 059A                      i1l1650 05B2  
                    i1l1730 0517                      i1l1722 0509                      i1l1714 04F8  
                    i1l1644 0569                      i1l1652 05BA                      i1l1724 050A  
                    i1l1716 04FC                      i1l1638 0590                      i1l1646 056F  
                    i1l1726 0510                      i1l1718 04FD                      i1l1648 0575  
                    u122_20 05BA                      i1l1728 0516                      u122_21 05B9  
                    u124_20 04FC                      u124_21 04FB                      u125_20 0509  
                    u125_21 0508                      u126_20 0516                      u126_21 0515  
                    _T0_int 0590                      _T1_int 0569                      _T2_int 05B2  
            __CFG_PWRTE$OFF 0000        __size_of_lcd_dataReg 0036           __end_of_T0_status 05E5  
          __end_of_lcd_init 048B                   ??___awdiv 0076                   ??___awmod 0076  
      __size_of_lcd_instReg 008B   __end_of_resetTemporizador 0552                      delay@t 0072  
          ___awdiv@quotient 0040             ___awmod@divisor 0072             ___awmod@counter 0077  
                 ??_lcd_num 0046                      saved_w 007E          resetTemporizador@t 0072  
   __end_of__initialization 001A              __pcstackCOMMON 0070                   ?_T0_start 0072  
             __end_of_delay 0569                  __end_of_b0 05F1                  __end_of_b1 05EB  
            _OPTION_REGbits 0081                     ??_delay 0074          __size_of_lcd_print 0037  
                __pbssBANK0 0020                     ?_T0_int 0070                     ?_T1_int 0070  
                   ?_T2_int 0070                  __pmaintext 001E                  ??_T0_start 0074  
                __pintentry 0004  __size_of_resetTemporizador 0017                   T0_start@c 0072  
                _lcd_lincol 057D                  _botao_init 05F1                     _T0_init 05A2  
                   _T0count 0024                     _T1count 0022                     _T2count 0020  
                 ?_lcd_init 0070                  __stringtab 0524             __size_of_T0_int 0012  
           __size_of_T1_int 0014             __size_of_T2_int 0010           __end_of_lcd_print 04C2  
                   ___awdiv 0376                     ___awmod 03E9                     __ptext1 025B  
                   __ptext2 053B                     __ptext3 048B                     __ptext4 016D  
                   __ptext5 057D                     __ptext6 04C2                     __ptext7 03E9  
                   __ptext8 0376                     __ptext9 044C                     _lcd_num 016D  
                 _T1CONbits 0010    __size_of_habTemporizador 0009                   _T2CONbits 0012  
              __size_of_isr 002C            ___awmod@dividend 0074            habTemporizador@h 0072  
          habTemporizador@t 0074                     clrloop0 05D6                  ??_lcd_init 0075  
      end_of_initialization 001A                   _T0_status 05DD                  _temporizar 025B  
                 _PORTDbits 0008                 ?_lcd_lincol 0075                   _TRISDbits 0088  
               ?_botao_init 0070                 temporizar@t 0079               ??_lcd_dataReg 0072  
                lcd_num@col 0042                  lcd_num@div 004C                  lcd_num@lin 0049  
                lcd_num@tam 0045                  lcd_num@num 0043              __end_of_T0_int 05A2  
            __end_of_T1_int 057D              __end_of_T2_int 05C2               ??_lcd_instReg 0072  
                ?_T0_status 0072           __size_of_T0_start 000A         start_initialization 000F  
               __end_of_isr 0524           ??_habTemporizador 0073                    ??_T0_int 0070  
                  ??_T1_int 0070                    ??_T2_int 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __end_of_lcd_dataReg 04F8         __size_of_lcd_lincol 0013         __size_of_botao_init 0005  
       __end_of_lcd_instReg 0376                 ?_temporizar 0070                 __pbssCOMMON 007A  
                 ___latbits 0002               __pcstackBANK0 003E                    ?_T0_init 0070  
         __size_of_lcd_init 003F                    ?___awdiv 0072                    ?___awmod 0072  
               ??_T0_status 0074                   __pstrings 0524                   _lcd_print 048B  
                  ?_lcd_num 0042              __size_of_delay 0017                 __size_of_b0 0006  
               __size_of_b1 0006           interrupt_function 0004                 _lcd_dataReg 04C2  
       __size_of_temporizar 0090                   clear_ram0 05D5                    _PIE1bits 008C  
                  _PIR1bits 000C                 _lcd_instReg 02EB                    _T0_start 05C2  
                ?_lcd_print 0078                 __stringbase 0529                ??_lcd_lincol 0076  
              ??_botao_init 0072            __size_of_T0_init 0010          __end_of_lcd_lincol 0590  
        __end_of_botao_init 05F6            __size_of___awdiv 0073            __size_of___awmod 0063  
        __end_of__stringtab 052A             _habTemporizador 05CC            __size_of_lcd_num 00EE  
                  __ptext10 02EB                    __ptext11 0552                    __ptext20 05B2  
                  __ptext12 05CC                    __ptext21 0569                    __ptext13 05F1  
                  __ptext22 0590                    __ptext14 05E5                    __ptext15 05EB  
                  __ptext16 05DD                    __ptext17 05C2                    __ptext18 05A2  
                  __ptext19 04F8           __CFG_BOR4V$BOR40V 0000                    _lcd_init 044C  
             __size_of_main 014F                ??_temporizar 003E                 ??_lcd_print 003E  
                _INTCONbits 000B                    intlevel1 0000          __end_of_temporizar 02EB  
                 stringcode 0524     __end_of_habTemporizador 05D5                    stringdir 0524  
                  stringtab 0524                ?_lcd_dataReg 0070                ?_lcd_instReg 0070  
