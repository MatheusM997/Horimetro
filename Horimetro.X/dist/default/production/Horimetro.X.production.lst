

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon May 23 10:50:48 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     	FNCALL	_main,_EEPROM_read
  1648                           	FNCALL	_main,_EEPROM_write
  1649                           	FNCALL	_main,_T0_init
  1650                           	FNCALL	_main,_T0_start
  1651                           	FNCALL	_main,_T0_status
  1652                           	FNCALL	_main,_b0
  1653                           	FNCALL	_main,_b1
  1654                           	FNCALL	_main,_b2
  1655                           	FNCALL	_main,_b3
  1656                           	FNCALL	_main,_botao_init
  1657                           	FNCALL	_main,_delay
  1658                           	FNCALL	_main,_habTemporizador
  1659                           	FNCALL	_main,_lcd_init
  1660                           	FNCALL	_main,_lcd_num
  1661                           	FNCALL	_main,_lcd_print
  1662                           	FNCALL	_main,_resetTemporizador
  1663                           	FNCALL	_main,_teclado_init
  1664                           	FNCALL	_main,_temporizar
  1665                           	FNCALL	_temporizar,_EEPROM_write
  1666                           	FNCALL	_temporizar,___awdiv
  1667                           	FNCALL	_temporizar,___awmod
  1668                           	FNCALL	_teclado_init,_botao_init
  1669                           	FNCALL	_lcd_print,_lcd_dataReg
  1670                           	FNCALL	_lcd_print,_lcd_lincol
  1671                           	FNCALL	_lcd_num,___awdiv
  1672                           	FNCALL	_lcd_num,___awmod
  1673                           	FNCALL	_lcd_num,_lcd_dataReg
  1674                           	FNCALL	_lcd_num,_lcd_lincol
  1675                           	FNCALL	_lcd_lincol,_lcd_instReg
  1676                           	FNCALL	_lcd_init,_delay
  1677                           	FNCALL	_lcd_init,_lcd_instReg
  1678                           	FNROOT	_main
  1679                           	FNCALL	_isr,_T0_int
  1680                           	FNCALL	_isr,_T1_int
  1681                           	FNCALL	_isr,_T2_int
  1682                           	FNCALL	intlevel1,_isr
  1683                           	global	intlevel1
  1684                           	FNROOT	intlevel1
  1685                           	global	_b1Anterior
  1686                           	global	_b0Anterior
  1687                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
  1688                           global __pidataCOMMON
  1689                           __pidataCOMMON:
  1690  0F7A                     	file	"botao.c"
  1691                           	line	65
  1692                           
  1693                           ;initializer for _b1Anterior
  1694                           	retlw	01h
  1695  0F7A  3401               	line	27
  1696                           
  1697                           ;initializer for _b0Anterior
  1698                           	retlw	01h
  1699  0F7B  3401               	global	_tecladoMatriz
  1700                           psect	strings,class=STRING,delta=2,noexec
  1701                           global __pstrings
  1702                           __pstrings:
  1703  0744                     stringtab:
  1704  0744                     	global    __stringtab
  1705                           __stringtab:
  1706  0744                     ;	String table - string pointers are 1 byte each
  1707                           stringcode:stringdir:
  1708  0744                     movlw high(stringdir)
      + 0744                     stringdir:	
  1709  0744  3007               movwf pclath
  1710  0745  008A               movf fsr,w
  1711  0746  0804               incf fsr
  1712  0747  0A84               	addwf pc
  1713  0748  0782               	global __stringbase
  1714                           __stringbase:
  1715  0749                     	retlw	0
  1716  0749  3400               psect	strings
  1717                           	global    __end_of__stringtab
  1718                           __end_of__stringtab:
  1719  074A                     	file	"teclado.c"
  1720                           	line	21
  1721                           _tecladoMatriz:
  1722  074A                     	retlw	031h
  1723  074A  3431               	retlw	032h
  1724  074B  3432               	retlw	033h
  1725  074C  3433               	retlw	041h
  1726  074D  3441               	retlw	034h
  1727  074E  3434               	retlw	035h
  1728  074F  3435               	retlw	036h
  1729  0750  3436               	retlw	042h
  1730  0751  3442               	retlw	037h
  1731  0752  3437               	retlw	038h
  1732  0753  3438               	retlw	039h
  1733  0754  3439               	retlw	043h
  1734  0755  3443               	retlw	02Ah
  1735  0756  342A               	retlw	030h
  1736  0757  3430               	retlw	023h
  1737  0758  3423               	retlw	044h
  1738  0759  3444               	global __end_of_tecladoMatriz
  1739                           __end_of_tecladoMatriz:
  1740  075A                     	global	_tecladoMatriz
  1741                           	global	_T2count
  1742                           	global	_T1count
  1743                           	global	_T0count
  1744                           	global	_b3Anterior
  1745                           	global	_b2Anterior
  1746                           	global	_tempo
  1747                           	global	_PORTB
  1748                           _PORTB	set	0x6
  1749  0006                     	global	_PORTAbits
  1750                           _PORTAbits	set	0x5
  1751  0005                     	global	_PORTD
  1752                           _PORTD	set	0x8
  1753  0008                     	global	_PORTDbits
  1754                           _PORTDbits	set	0x8
  1755  0008                     	global	_PIR1bits
  1756                           _PIR1bits	set	0xC
  1757  000C                     	global	_T2CONbits
  1758                           _T2CONbits	set	0x12
  1759  0012                     	global	_TMR2
  1760                           _TMR2	set	0x11
  1761  0011                     	global	_TMR1L
  1762                           _TMR1L	set	0xE
  1763  000E                     	global	_TMR1H
  1764                           _TMR1H	set	0xF
  1765  000F                     	global	_T1CONbits
  1766                           _T1CONbits	set	0x10
  1767  0010                     	global	_TMR0
  1768                           _TMR0	set	0x1
  1769  0001                     	global	_INTCONbits
  1770                           _INTCONbits	set	0xB
  1771  000B                     	global	_WPUB
  1772                           _WPUB	set	0x95
  1773  0095                     	global	_TRISB
  1774                           _TRISB	set	0x86
  1775  0086                     	global	_TRISAbits
  1776                           _TRISAbits	set	0x85
  1777  0085                     	global	_TRISDbits
  1778                           _TRISDbits	set	0x88
  1779  0088                     	global	_PR2
  1780                           _PR2	set	0x92
  1781  0092                     	global	_PIE1bits
  1782                           _PIE1bits	set	0x8C
  1783  008C                     	global	_OPTION_REGbits
  1784                           _OPTION_REGbits	set	0x81
  1785  0081                     	global	_EEDAT
  1786                           _EEDAT	set	0x10C
  1787  010C                     	global	_EEADR
  1788                           _EEADR	set	0x10D
  1789  010D                     	global	_EEADRH
  1790                           _EEADRH	set	0x10F
  1791  010F                     	global	_ANSELH
  1792                           _ANSELH	set	0x189
  1793  0189                     	global	_EECON2
  1794                           _EECON2	set	0x18D
  1795  018D                     	global	_EECON1bits
  1796                           _EECON1bits	set	0x18C
  1797  018C                     	global	_ANSEL
  1798                           _ANSEL	set	0x188
  1799  0188                     	
  1800                           STR_1:	
  1801  075A                     	retlw	48	;'0'
  1802  075A  3430               	retlw	48	;'0'
  1803  075B  3430               	retlw	58	;':'
  1804  075C  343A               	retlw	48	;'0'
  1805  075D  3430               	retlw	48	;'0'
  1806  075E  3430               	retlw	32	;' '
  1807  075F  3420               	retlw	32	;' '
  1808  0760  3420               	retlw	32	;' '
  1809  0761  3420               	retlw	32	;' '
  1810  0762  3420               	retlw	32	;' '
  1811  0763  3420               	retlw	32	;' '
  1812  0764  3420               	retlw	48	;'0'
  1813  0765  3430               	retlw	48	;'0'
  1814  0766  3430               	retlw	58	;':'
  1815  0767  343A               	retlw	48	;'0'
  1816  0768  3430               	retlw	48	;'0'
  1817  0769  3430               	retlw	0
  1818  076A  3400               psect	strings
  1819                           	
  1820                           STR_4:	
  1821  076B                     	retlw	32	;' '
  1822  076B  3420               	retlw	0
  1823  076C  3400               psect	strings
  1824                           	
  1825                           STR_3:	
  1826  076D                     	retlw	58	;':'
  1827  076D  343A               	retlw	0
  1828  076E  3400               psect	strings
  1829                           STR_5	equ	STR_3+0
  1830  076D                     STR_6	equ	STR_3+0
  1831  076D                     STR_8	equ	STR_3+0
  1832  076D                     STR_2	equ	STR_1+0
  1833  075A                     STR_7	equ	STR_4+0
  1834  076B                     ; #config settings
  1835                           global __CFG_FOSC$INTRC_NOCLKOUT
  1836                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1837  0000                     global __CFG_WDTE$OFF
  1838                           __CFG_WDTE$OFF equ 0x0
  1839  0000                     global __CFG_PWRTE$OFF
  1840                           __CFG_PWRTE$OFF equ 0x0
  1841  0000                     global __CFG_MCLRE$OFF
  1842                           __CFG_MCLRE$OFF equ 0x0
  1843  0000                     global __CFG_CP$OFF
  1844                           __CFG_CP$OFF equ 0x0
  1845  0000                     global __CFG_CPD$OFF
  1846                           __CFG_CPD$OFF equ 0x0
  1847  0000                     global __CFG_BOREN$OFF
  1848                           __CFG_BOREN$OFF equ 0x0
  1849  0000                     global __CFG_IESO$OFF
  1850                           __CFG_IESO$OFF equ 0x0
  1851  0000                     global __CFG_FCMEN$OFF
  1852                           __CFG_FCMEN$OFF equ 0x0
  1853  0000                     global __CFG_LVP$OFF
  1854                           __CFG_LVP$OFF equ 0x0
  1855  0000                     global __CFG_BOR4V$BOR40V
  1856                           __CFG_BOR4V$BOR40V equ 0x0
  1857  0000                     global __CFG_WRT$OFF
  1858                           __CFG_WRT$OFF equ 0x0
  1859  0000                     	file	"C:\Users\211934~1.CFP\AppData\Local\Temp\s8qo."
  1860                           	line	#
  1861                           psect cinit,class=CODE,delta=2
  1862                           global start_initialization
  1863                           start_initialization:
  1864  000F                     
  1865                           global __initialization
  1866                           __initialization:
  1867  000F                     psect	dataCOMMON,class=COMMON,space=1,noexec
  1868                           global __pdataCOMMON
  1869                           __pdataCOMMON:
  1870  007A                     	file	"botao.c"
  1871                           	line	65
  1872                           _b1Anterior:
  1873  007A                            ds      1
  1874  007A                     
  1875                           psect	dataCOMMON
  1876                           	file	"botao.c"
  1877                           	line	27
  1878                           _b0Anterior:
  1879  007B                            ds      1
  1880  007B                     
  1881                           psect	bssBANK0,class=BANK0,space=1,noexec
  1882                           global __pbssBANK0
  1883                           __pbssBANK0:
  1884  0020                     _T2count:
  1885  0020                            ds      2
  1886  0020                     
  1887                           _T1count:
  1888  0022                            ds      2
  1889  0022                     
  1890                           _T0count:
  1891  0024                            ds      2
  1892  0024                     
  1893                           _b3Anterior:
  1894  0026                            ds      1
  1895  0026                     
  1896                           _b2Anterior:
  1897  0027                            ds      1
  1898  0027                     
  1899                           _tempo:
  1900  0028                            ds      24
  1901  0028                     
  1902                           	file	"C:\Users\211934~1.CFP\AppData\Local\Temp\s8qo."
  1903                           	line	#
  1904                           ; Initialize objects allocated to COMMON
  1905                           	global __pidataCOMMON
  1906                           psect cinit,class=CODE,delta=2,merge=1
  1907                           	fcall	__pidataCOMMON+0		;fetch initializer
  1908  000F  120A  158A  277A  120A  118A  	movwf	__pdataCOMMON+0&07fh		
  1909  0014  00FA               	fcall	__pidataCOMMON+1		;fetch initializer
  1910  0015  120A  158A  277B  120A  118A  	movwf	__pdataCOMMON+1&07fh		
  1911  001A  00FB               	line	#
  1912                           psect clrtext,class=CODE,delta=2
  1913                           global clear_ram0
  1914                           ;	Called with FSR containing the base address, and
  1915                           ;	W with the last address+1
  1916                           clear_ram0:
  1917  0F8B                     	clrwdt			;clear the watchdog before getting into this loop
  1918  0F8B  0064               clrloop0:
  1919  0F8C                     	clrf	indf		;clear RAM location pointed to by FSR
  1920  0F8C  0180               	incf	fsr,f		;increment pointer
  1921  0F8D  0A84               	xorwf	fsr,w		;XOR with final address
  1922  0F8E  0604               	btfsc	status,2	;have we reached the end yet?
  1923  0F8F  1903               	retlw	0		;all done for this memory range, return
  1924  0F90  3400               	xorwf	fsr,w		;XOR again to restore value
  1925  0F91  0604               	goto	clrloop0		;do the next byte
  1926  0F92  2F8C               
  1927                           ; Clear objects allocated to BANK0
  1928                           psect cinit,class=CODE,delta=2,merge=1
  1929                           	bcf	status, 7	;select IRP bank0
  1930  001B  1383               	movlw	low(__pbssBANK0)
  1931  001C  3020               	movwf	fsr
  1932  001D  0084               	movlw	low((__pbssBANK0)+020h)
  1933  001E  3040               	fcall	clear_ram0
  1934  001F  120A  158A  278B  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1935                           global end_of_initialization,__end_of__initialization
  1936                           
  1937                           ;End of C runtime variable initialization code
  1938                           
  1939                           end_of_initialization:
  1940  0024                     __end_of__initialization:
  1941  0024                     clrf status
  1942  0024  0183               ljmp _main	;jump to C main() function
  1943  0025  120A  118A  2828   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1944                           global __pcstackCOMMON
  1945                           __pcstackCOMMON:
  1946  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1947  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1948  0070                     ?_botao_init:	; 1 bytes @ 0x0
  1949  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  1950  0070                     ?_resetTemporizador:	; 1 bytes @ 0x0
  1951  0070                     ?_EEPROM_read:	; 1 bytes @ 0x0
  1952  0070                     ?_b0:	; 1 bytes @ 0x0
  1953  0070                     ?_b1:	; 1 bytes @ 0x0
  1954  0070                     ?_b2:	; 1 bytes @ 0x0
  1955  0070                     ?_b3:	; 1 bytes @ 0x0
  1956  0070                     ?_main:	; 1 bytes @ 0x0
  1957  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1958  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1959  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1960  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1961  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1962  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1963  0070                     ?_isr:	; 1 bytes @ 0x0
  1964  0070                     ??_isr:	; 1 bytes @ 0x0
  1965  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1966  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1967  0070                     	ds	2
  1968  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1969  0072                     ??_botao_init:	; 1 bytes @ 0x2
  1970  0072                     ??_teclado_init:	; 1 bytes @ 0x2
  1971  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1972  0072                     ??_resetTemporizador:	; 1 bytes @ 0x2
  1973  0072                     ?_delay:	; 1 bytes @ 0x2
  1974  0072                     ??_EEPROM_read:	; 1 bytes @ 0x2
  1975  0072                     ?_habTemporizador:	; 1 bytes @ 0x2
  1976  0072                     ??_b0:	; 1 bytes @ 0x2
  1977  0072                     ??_b1:	; 1 bytes @ 0x2
  1978  0072                     ??_b2:	; 1 bytes @ 0x2
  1979  0072                     ??_b3:	; 1 bytes @ 0x2
  1980  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1981  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1982  0072                     	global	?_T0_status
  1983                           ?_T0_status:	; 2 bytes @ 0x2
  1984  0072                     	global	?___awdiv
  1985                           ?___awdiv:	; 2 bytes @ 0x2
  1986  0072                     	global	?___awmod
  1987                           ?___awmod:	; 2 bytes @ 0x2
  1988  0072                     	global	habTemporizador@h
  1989                           habTemporizador@h:	; 1 bytes @ 0x2
  1990  0072                     	global	resetTemporizador@t
  1991                           resetTemporizador@t:	; 1 bytes @ 0x2
  1992  0072                     	global	EEPROM_read@addr
  1993                           EEPROM_read@addr:	; 1 bytes @ 0x2
  1994  0072                     	global	T0_start@c
  1995                           T0_start@c:	; 2 bytes @ 0x2
  1996  0072                     	global	delay@t
  1997                           delay@t:	; 2 bytes @ 0x2
  1998  0072                     	global	___awdiv@divisor
  1999                           ___awdiv@divisor:	; 2 bytes @ 0x2
  2000  0072                     	global	___awmod@divisor
  2001                           ___awmod@divisor:	; 2 bytes @ 0x2
  2002  0072                     	ds	1
  2003  0072                     ??_habTemporizador:	; 1 bytes @ 0x3
  2004  0073                     	ds	1
  2005  0073                     ??_T0_start:	; 1 bytes @ 0x4
  2006  0074                     ??_delay:	; 1 bytes @ 0x4
  2007  0074                     ??_T0_status:	; 1 bytes @ 0x4
  2008  0074                     	global	lcd_instReg@i
  2009                           lcd_instReg@i:	; 1 bytes @ 0x4
  2010  0074                     	global	lcd_dataReg@d
  2011                           lcd_dataReg@d:	; 1 bytes @ 0x4
  2012  0074                     	global	habTemporizador@t
  2013                           habTemporizador@t:	; 1 bytes @ 0x4
  2014  0074                     	global	___awdiv@dividend
  2015                           ___awdiv@dividend:	; 2 bytes @ 0x4
  2016  0074                     	global	___awmod@dividend
  2017                           ___awmod@dividend:	; 2 bytes @ 0x4
  2018  0074                     	ds	1
  2019  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  2020  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  2021  0075                     	global	lcd_lincol@col
  2022                           lcd_lincol@col:	; 1 bytes @ 0x5
  2023  0075                     	ds	1
  2024  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  2025  0076                     ??___awdiv:	; 1 bytes @ 0x6
  2026  0076                     ??___awmod:	; 1 bytes @ 0x6
  2027  0076                     	ds	1
  2028  0076                     ?_EEPROM_write:	; 1 bytes @ 0x7
  2029  0077                     	global	lcd_lincol@lin
  2030                           lcd_lincol@lin:	; 1 bytes @ 0x7
  2031  0077                     	global	EEPROM_write@data
  2032                           EEPROM_write@data:	; 1 bytes @ 0x7
  2033  0077                     	global	___awmod@counter
  2034                           ___awmod@counter:	; 1 bytes @ 0x7
  2035  0077                     	ds	1
  2036  0077                     ?_lcd_print:	; 1 bytes @ 0x8
  2037  0078                     ??_EEPROM_write:	; 1 bytes @ 0x8
  2038  0078                     	global	lcd_print@col
  2039                           lcd_print@col:	; 1 bytes @ 0x8
  2040  0078                     	global	EEPROM_write@addr
  2041                           EEPROM_write@addr:	; 1 bytes @ 0x8
  2042  0078                     	global	___awmod@sign
  2043                           ___awmod@sign:	; 1 bytes @ 0x8
  2044  0078                     	ds	1
  2045  0078                     	global	lcd_print@str
  2046                           lcd_print@str:	; 1 bytes @ 0x9
  2047  0079                     	global	temporizar@t
  2048                           temporizar@t:	; 1 bytes @ 0x9
  2049  0079                     	ds	1
  2050  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2051                           global __pcstackBANK0
  2052                           __pcstackBANK0:
  2053  0040                     ??_lcd_print:	; 1 bytes @ 0x0
  2054  0040                     	global	___awdiv@counter
  2055                           ___awdiv@counter:	; 1 bytes @ 0x0
  2056  0040                     	ds	1
  2057  0040                     	global	lcd_print@pos
  2058                           lcd_print@pos:	; 1 bytes @ 0x1
  2059  0041                     	global	___awdiv@sign
  2060                           ___awdiv@sign:	; 1 bytes @ 0x1
  2061  0041                     	ds	1
  2062  0041                     	global	lcd_print@lin
  2063                           lcd_print@lin:	; 1 bytes @ 0x2
  2064  0042                     	global	___awdiv@quotient
  2065                           ___awdiv@quotient:	; 2 bytes @ 0x2
  2066  0042                     	ds	2
  2067  0042                     ?_temporizar:	; 1 bytes @ 0x4
  2068  0044                     ?_lcd_num:	; 1 bytes @ 0x4
  2069  0044                     	global	lcd_num@col
  2070                           lcd_num@col:	; 1 bytes @ 0x4
  2071  0044                     	global	temporizar@adrs
  2072                           temporizar@adrs:	; 1 bytes @ 0x4
  2073  0044                     	ds	1
  2074  0044                     ??_temporizar:	; 1 bytes @ 0x5
  2075  0045                     	global	lcd_num@num
  2076                           lcd_num@num:	; 2 bytes @ 0x5
  2077  0045                     	ds	2
  2078  0045                     	global	lcd_num@tam
  2079                           lcd_num@tam:	; 1 bytes @ 0x7
  2080  0047                     	ds	1
  2081  0047                     ??_lcd_num:	; 1 bytes @ 0x8
  2082  0048                     	ds	3
  2083  0048                     	global	lcd_num@lin
  2084                           lcd_num@lin:	; 1 bytes @ 0xB
  2085  004B                     	ds	1
  2086  004B                     	global	lcd_num@size
  2087                           lcd_num@size:	; 1 bytes @ 0xC
  2088  004C                     	ds	1
  2089  004C                     	global	lcd_num@sinal
  2090                           lcd_num@sinal:	; 1 bytes @ 0xD
  2091  004D                     	ds	1
  2092  004D                     	global	lcd_num@div
  2093                           lcd_num@div:	; 2 bytes @ 0xE
  2094  004E                     	ds	2
  2095  004E                     ??_main:	; 1 bytes @ 0x10
  2096  0050                     	ds	4
  2097  0050                     	global	main@i
  2098                           main@i:	; 1 bytes @ 0x14
  2099  0054                     	ds	1
  2100  0054                     ;!
  2101                           ;!Data Sizes:
  2102                           ;!    Strings     21
  2103                           ;!    Constant    16
  2104                           ;!    Data        2
  2105                           ;!    BSS         32
  2106                           ;!    Persistent  0
  2107                           ;!    Stack       0
  2108                           ;!
  2109                           ;!Auto Spaces:
  2110                           ;!    Space          Size  Autos    Used
  2111                           ;!    COMMON           14     10      12
  2112                           ;!    BANK0            80     21      53
  2113                           ;!    BANK1            80      0       0
  2114                           ;!    BANK3            96      0       0
  2115                           ;!    BANK2            96      0       0
  2116                           
  2117                           ;!
  2118                           ;!Pointer List with Targets:
  2119                           ;!
  2120                           ;!    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  2121                           ;!		 -> tempo(BANK0[24]), 
  2122                           ;!
  2123                           ;!    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
  2124                           ;!		 -> tempo(BANK0[24]), 
  2125                           ;!
  2126                           ;!    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
  2127                           ;!		 -> tempo(BANK0[24]), 
  2128                           ;!
  2129                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  2130                           ;!		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
  2131                           ;!		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[17]), STR_1(CODE[17]), 
  2132                           ;!
  2133                           
  2134                           
  2135                           ;!
  2136                           ;!Critical Paths under _main in COMMON
  2137                           ;!
  2138                           ;!    _main->_lcd_print
  2139                           ;!    _main->_temporizar
  2140                           ;!    _temporizar->_EEPROM_write
  2141                           ;!    _temporizar->___awmod
  2142                           ;!    _EEPROM_write->___awdiv
  2143                           ;!    _lcd_print->_lcd_lincol
  2144                           ;!    _lcd_num->___awmod
  2145                           ;!    _lcd_lincol->_lcd_instReg
  2146                           ;!    _lcd_init->_delay
  2147                           ;!    _lcd_init->_lcd_instReg
  2148                           ;!
  2149                           ;!Critical Paths under _isr in COMMON
  2150                           ;!
  2151                           ;!    None.
  2152                           ;!
  2153                           ;!Critical Paths under _main in BANK0
  2154                           ;!
  2155                           ;!    _main->_lcd_num
  2156                           ;!    _temporizar->___awdiv
  2157                           ;!    _EEPROM_write->___awdiv
  2158                           ;!    _lcd_num->___awdiv
  2159                           ;!
  2160                           ;!Critical Paths under _isr in BANK0
  2161                           ;!
  2162                           ;!    None.
  2163                           ;!
  2164                           ;!Critical Paths under _main in BANK1
  2165                           ;!
  2166                           ;!    None.
  2167                           ;!
  2168                           ;!Critical Paths under _isr in BANK1
  2169                           ;!
  2170                           ;!    None.
  2171                           ;!
  2172                           ;!Critical Paths under _main in BANK3
  2173                           ;!
  2174                           ;!    None.
  2175                           ;!
  2176                           ;!Critical Paths under _isr in BANK3
  2177                           ;!
  2178                           ;!    None.
  2179                           ;!
  2180                           ;!Critical Paths under _main in BANK2
  2181                           ;!
  2182                           ;!    None.
  2183                           ;!
  2184                           ;!Critical Paths under _isr in BANK2
  2185                           ;!
  2186                           ;!    None.
  2187                           
  2188 ;;
  2189 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2190 ;;
  2191                           
  2192                           ;!
  2193                           ;!Call Graph Tables:
  2194                           ;!
  2195                           ;! ---------------------------------------------------------------------------------
  2196                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2197                           ;! ---------------------------------------------------------------------------------
  2198                           ;! (0) _main                                                 5     5      0   17623
  2199                           ;!                                             16 BANK0      5     5      0
  2200                           ;!                        _EEPROM_read
  2201                           ;!                       _EEPROM_write
  2202                           ;!                            _T0_init
  2203                           ;!                           _T0_start
  2204                           ;!                          _T0_status
  2205                           ;!                                 _b0
  2206                           ;!                                 _b1
  2207                           ;!                                 _b2
  2208                           ;!                                 _b3
  2209                           ;!                         _botao_init
  2210                           ;!                              _delay
  2211                           ;!                    _habTemporizador
  2212                           ;!                           _lcd_init
  2213                           ;!                            _lcd_num
  2214                           ;!                          _lcd_print
  2215                           ;!                  _resetTemporizador
  2216                           ;!                       _teclado_init
  2217                           ;!                         _temporizar
  2218                           ;! ---------------------------------------------------------------------------------
  2219                           ;! (1) _temporizar                                           6     5      1    5813
  2220                           ;!                                              9 COMMON     1     1      0
  2221                           ;!                                              4 BANK0      5     4      1
  2222                           ;!                       _EEPROM_write
  2223                           ;!                            ___awdiv
  2224                           ;!                            ___awmod
  2225                           ;! ---------------------------------------------------------------------------------
  2226                           ;! (2) _EEPROM_write                                         2     1      1    1682
  2227                           ;!                                              7 COMMON     2     1      1
  2228                           ;!                            ___awdiv (ARG)
  2229                           ;! ---------------------------------------------------------------------------------
  2230                           ;! (1) _teclado_init                                         0     0      0       0
  2231                           ;!                         _botao_init
  2232                           ;! ---------------------------------------------------------------------------------
  2233                           ;! (2) _botao_init                                           0     0      0       0
  2234                           ;! ---------------------------------------------------------------------------------
  2235                           ;! (1) _resetTemporizador                                    1     1      0     242
  2236                           ;!                                              2 COMMON     1     1      0
  2237                           ;! ---------------------------------------------------------------------------------
  2238                           ;! (1) _lcd_print                                            5     3      2    2020
  2239                           ;!                                              8 COMMON     2     0      2
  2240                           ;!                                              0 BANK0      3     3      0
  2241                           ;!                        _lcd_dataReg
  2242                           ;!                         _lcd_lincol
  2243                           ;! ---------------------------------------------------------------------------------
  2244                           ;! (1) _lcd_num                                             12     8      4    6261
  2245                           ;!                                              4 BANK0     12     8      4
  2246                           ;!                            ___awdiv
  2247                           ;!                            ___awmod
  2248                           ;!                        _lcd_dataReg
  2249                           ;!                         _lcd_lincol
  2250                           ;! ---------------------------------------------------------------------------------
  2251                           ;! (2) _lcd_lincol                                           3     2      1     372
  2252                           ;!                                              5 COMMON     3     2      1
  2253                           ;!                        _lcd_instReg
  2254                           ;! ---------------------------------------------------------------------------------
  2255                           ;! (2) _lcd_dataReg                                          3     3      0      44
  2256                           ;!                                              2 COMMON     3     3      0
  2257                           ;! ---------------------------------------------------------------------------------
  2258                           ;! (2) ___awmod                                              7     3      4    1693
  2259                           ;!                                              2 COMMON     7     3      4
  2260                           ;! ---------------------------------------------------------------------------------
  2261                           ;! (2) ___awdiv                                              9     5      4    1345
  2262                           ;!                                              2 COMMON     5     1      4
  2263                           ;!                                              0 BANK0      4     4      0
  2264                           ;! ---------------------------------------------------------------------------------
  2265                           ;! (1) _lcd_init                                             0     0      0     503
  2266                           ;!                              _delay
  2267                           ;!                        _lcd_instReg
  2268                           ;! ---------------------------------------------------------------------------------
  2269                           ;! (3) _lcd_instReg                                          3     3      0     176
  2270                           ;!                                              2 COMMON     3     3      0
  2271                           ;! ---------------------------------------------------------------------------------
  2272                           ;! (2) _delay                                                3     1      2     327
  2273                           ;!                                              2 COMMON     3     1      2
  2274                           ;! ---------------------------------------------------------------------------------
  2275                           ;! (1) _habTemporizador                                      3     2      1     480
  2276                           ;!                                              2 COMMON     3     2      1
  2277                           ;!                                 _b0 (ARG)
  2278                           ;!                                 _b1 (ARG)
  2279                           ;!                                 _b2 (ARG)
  2280                           ;!                                 _b3 (ARG)
  2281                           ;! ---------------------------------------------------------------------------------
  2282                           ;! (1) _b3                                                   0     0      0       0
  2283                           ;! ---------------------------------------------------------------------------------
  2284                           ;! (1) _b2                                                   0     0      0       0
  2285                           ;! ---------------------------------------------------------------------------------
  2286                           ;! (1) _b1                                                   0     0      0       0
  2287                           ;! ---------------------------------------------------------------------------------
  2288                           ;! (1) _b0                                                   0     0      0       0
  2289                           ;! ---------------------------------------------------------------------------------
  2290                           ;! (1) _T0_status                                            2     0      2       0
  2291                           ;!                                              2 COMMON     2     0      2
  2292                           ;! ---------------------------------------------------------------------------------
  2293                           ;! (1) _T0_start                                             2     0      2     174
  2294                           ;!                                              2 COMMON     2     0      2
  2295                           ;! ---------------------------------------------------------------------------------
  2296                           ;! (1) _T0_init                                              0     0      0       0
  2297                           ;! ---------------------------------------------------------------------------------
  2298                           ;! (1) _EEPROM_read                                          1     1      0      22
  2299                           ;!                                              2 COMMON     1     1      0
  2300                           ;! ---------------------------------------------------------------------------------
  2301                           ;! Estimated maximum stack depth 3
  2302                           ;! ---------------------------------------------------------------------------------
  2303                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2304                           ;! ---------------------------------------------------------------------------------
  2305                           ;! (4) _isr                                                  2     2      0       0
  2306                           ;!                                              0 COMMON     2     2      0
  2307                           ;!                             _T0_int
  2308                           ;!                             _T1_int
  2309                           ;!                             _T2_int
  2310                           ;! ---------------------------------------------------------------------------------
  2311                           ;! (5) _T2_int                                               0     0      0       0
  2312                           ;! ---------------------------------------------------------------------------------
  2313                           ;! (5) _T1_int                                               0     0      0       0
  2314                           ;! ---------------------------------------------------------------------------------
  2315                           ;! (5) _T0_int                                               0     0      0       0
  2316                           ;! ---------------------------------------------------------------------------------
  2317                           ;! Estimated maximum stack depth 5
  2318                           ;! ---------------------------------------------------------------------------------
  2319                           ;!
  2320                           ;! Call Graph Graphs:
  2321                           ;!
  2322                           ;! _main (ROOT)
  2323                           ;!   _EEPROM_read
  2324                           ;!   _EEPROM_write
  2325                           ;!     ___awdiv (ARG)
  2326                           ;!   _T0_init
  2327                           ;!   _T0_start
  2328                           ;!   _T0_status
  2329                           ;!   _b0
  2330                           ;!   _b1
  2331                           ;!   _b2
  2332                           ;!   _b3
  2333                           ;!   _botao_init
  2334                           ;!   _delay
  2335                           ;!   _habTemporizador
  2336                           ;!     _b0 (ARG)
  2337                           ;!     _b1 (ARG)
  2338                           ;!     _b2 (ARG)
  2339                           ;!     _b3 (ARG)
  2340                           ;!   _lcd_init
  2341                           ;!     _delay
  2342                           ;!     _lcd_instReg
  2343                           ;!   _lcd_num
  2344                           ;!     ___awdiv
  2345                           ;!     ___awmod
  2346                           ;!     _lcd_dataReg
  2347                           ;!     _lcd_lincol
  2348                           ;!       _lcd_instReg
  2349                           ;!   _lcd_print
  2350                           ;!     _lcd_dataReg
  2351                           ;!     _lcd_lincol
  2352                           ;!       _lcd_instReg
  2353                           ;!   _resetTemporizador
  2354                           ;!   _teclado_init
  2355                           ;!     _botao_init
  2356                           ;!   _temporizar
  2357                           ;!     _EEPROM_write
  2358                           ;!       ___awdiv (ARG)
  2359                           ;!     ___awdiv
  2360                           ;!     ___awmod
  2361                           ;!
  2362                           ;! _isr (ROOT)
  2363                           ;!   _T0_int
  2364                           ;!   _T1_int
  2365                           ;!   _T2_int
  2366                           ;!
  2367                           
  2368                           ;! Address spaces:
  2369                           
  2370                           ;!Name               Size   Autos  Total    Cost      Usage
  2371                           ;!BANK3               60      0       0       9        0.0%
  2372                           ;!BITBANK3            60      0       0       8        0.0%
  2373                           ;!SFR3                 0      0       0       4        0.0%
  2374                           ;!BITSFR3              0      0       0       4        0.0%
  2375                           ;!BANK2               60      0       0      11        0.0%
  2376                           ;!BITBANK2            60      0       0      10        0.0%
  2377                           ;!SFR2                 0      0       0       5        0.0%
  2378                           ;!BITSFR2              0      0       0       5        0.0%
  2379                           ;!BANK1               50      0       0       7        0.0%
  2380                           ;!BITBANK1            50      0       0       6        0.0%
  2381                           ;!SFR1                 0      0       0       2        0.0%
  2382                           ;!BITSFR1              0      0       0       2        0.0%
  2383                           ;!BANK0               50     15      35       5       66.3%
  2384                           ;!BITBANK0            50      0       0       4        0.0%
  2385                           ;!SFR0                 0      0       0       1        0.0%
  2386                           ;!BITSFR0              0      0       0       1        0.0%
  2387                           ;!COMMON               E      A       C       1       85.7%
  2388                           ;!BITCOMMON            E      0       0       0        0.0%
  2389                           ;!CODE                 0      0       0       0        0.0%
  2390                           ;!DATA                 0      0      41      12        0.0%
  2391                           ;!ABS                  0      0      41       3        0.0%
  2392                           ;!NULL                 0      0       0       0        0.0%
  2393                           ;!STACK                0      0       0       2        0.0%
  2394                           ;!EEDATA             100      0       0       0        0.0%
  2395                           
  2396                           	global	_main
  2397                           
  2398 ;; *************** function _main *****************
  2399 ;; Defined at:
  2400 ;;		line 21 in file "main.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  i               1   20[BANK0 ] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : B00/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         0       1       0       0       0
  2416 ;;      Temps:          0       4       0       0       0
  2417 ;;      Totals:         0       5       0       0       0
  2418 ;;Total ram usage:        5 bytes
  2419 ;; Hardware stack levels required when called:    5
  2420 ;; This function calls:
  2421 ;;		_EEPROM_read
  2422 ;;		_EEPROM_write
  2423 ;;		_T0_init
  2424 ;;		_T0_start
  2425 ;;		_T0_status
  2426 ;;		_b0
  2427 ;;		_b1
  2428 ;;		_b2
  2429 ;;		_b3
  2430 ;;		_botao_init
  2431 ;;		_delay
  2432 ;;		_habTemporizador
  2433 ;;		_lcd_init
  2434 ;;		_lcd_num
  2435 ;;		_lcd_print
  2436 ;;		_resetTemporizador
  2437 ;;		_teclado_init
  2438 ;;		_temporizar
  2439 ;; This function is called by:
  2440 ;;		Startup code after reset
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2444                           	file	"main.c"
  2445                           	line	21
  2446                           global __pmaintext
  2447                           __pmaintext:	;psect for function _main
  2448  0028                     psect	maintext
  2449                           	file	"main.c"
  2450                           	line	21
  2451                           	global	__size_of_main
  2452                           	__size_of_main	equ	__end_of_main-_main
  2453  0330                     	
  2454                           _main:	
  2455  0028                     ;incstack = 0
  2456                           	opt	stack 3
  2457                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2458                           	line	26
  2459                           	
  2460                           l2579:	
  2461  0028                     ;main.c: 26:     ANSEL = 0;
  2462                           	bsf	status, 5	;RP0=1, select bank3
  2463  0028  1683               	bsf	status, 6	;RP1=1, select bank3
  2464  0029  1703               	clrf	(392)^0180h	;volatile
  2465  002A  0188               	line	27
  2466                           	
  2467                           l2581:	
  2468  002B                     ;main.c: 27:     lcd_init();
  2469                           	fcall	_lcd_init
  2470  002B  120A  118A  2676  120A  118A  	line	28
  2471                           	
  2472                           l2583:	
  2473  0030                     ;main.c: 28:     T0_init();
  2474                           	fcall	_T0_init
  2475  0030  120A  158A  27DE  120A  118A  	line	29
  2476                           	
  2477                           l2585:	
  2478  0035                     ;main.c: 29:     botao_init();
  2479                           	fcall	_botao_init
  2480  0035  120A  158A  277C  120A  118A  	line	30
  2481                           	
  2482                           l2587:	
  2483  003A                     ;main.c: 30:    teclado_init();
  2484                           	fcall	_teclado_init
  2485  003A  120A  118A  27B6  120A  118A  	line	32
  2486                           	
  2487                           l2589:	
  2488  003F                     ;main.c: 32:     lcd_print(0,0,"00:00      00:00");
  2489                           	clrf	(lcd_print@col)
  2490  003F  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2491  0040  3011               	bcf	status, 5	;RP0=0, select bank0
  2492  0041  1283               	bcf	status, 6	;RP1=0, select bank0
  2493  0042  1303               	movwf	(??_main+0)+0
  2494  0043  00D0               	movf	(??_main+0)+0,w
  2495  0044  0850               	movwf	(lcd_print@str)
  2496  0045  00F9               	movlw	low(0)
  2497  0046  3000               	fcall	_lcd_print
  2498  0047  120A  118A  26B5  120A  118A  	line	33
  2499                           	
  2500                           l2591:	
  2501  004C                     ;main.c: 33:     lcd_print(1,0,"00:00      00:00");
  2502                           	clrf	(lcd_print@col)
  2503  004C  01F8               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2504  004D  3011               	bcf	status, 5	;RP0=0, select bank0
  2505  004E  1283               	bcf	status, 6	;RP1=0, select bank0
  2506  004F  1303               	movwf	(??_main+0)+0
  2507  0050  00D0               	movf	(??_main+0)+0,w
  2508  0051  0850               	movwf	(lcd_print@str)
  2509  0052  00F9               	movlw	low(01h)
  2510  0053  3001               	fcall	_lcd_print
  2511  0054  120A  118A  26B5  120A  118A  	line	35
  2512                           	
  2513                           l2593:	
  2514  0059                     ;main.c: 35:     T0_start(1000);
  2515                           	movlw	0E8h
  2516  0059  30E8               	movwf	(T0_start@c)
  2517  005A  00F2               	movlw	03h
  2518  005B  3003               	movwf	((T0_start@c))+1
  2519  005C  00F3               	fcall	_T0_start
  2520  005D  120A  158A  279C  120A  118A  	line	36
  2521                           	
  2522                           l2595:	
  2523  0062                     ;main.c: 36:     resetTemporizador( &tempo[0] );
  2524                           	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2525  0062  3028               	fcall	_resetTemporizador
  2526  0063  120A  118A  2788  120A  118A  	line	37
  2527                           	
  2528                           l2597:	
  2529  0068                     ;main.c: 37:     resetTemporizador( &tempo[1] );
  2530                           	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2531  0068  302E               	fcall	_resetTemporizador
  2532  0069  120A  118A  2788  120A  118A  	line	38
  2533                           	
  2534                           l2599:	
  2535  006E                     ;main.c: 38:     resetTemporizador( &tempo[2] );
  2536                           	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2537  006E  3034               	fcall	_resetTemporizador
  2538  006F  120A  118A  2788  120A  118A  	line	39
  2539                           	
  2540                           l2601:	
  2541  0074                     ;main.c: 39:     resetTemporizador( &tempo[3] );
  2542                           	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2543  0074  303A               	fcall	_resetTemporizador
  2544  0075  120A  118A  2788  120A  118A  	line	41
  2545                           	
  2546                           l2603:	
  2547  007A                     ;main.c: 41:     for( char i=0; i<64; i++ )
  2548                           	bcf	status, 5	;RP0=0, select bank0
  2549  007A  1283               	bcf	status, 6	;RP1=0, select bank0
  2550  007B  1303               	clrf	(main@i)
  2551  007C  01D4               	
  2552                           l2605:	
  2553  007D                     	movlw	low(040h)
  2554  007D  3040               	subwf	(main@i),w
  2555  007E  0254               	skipc
  2556  007F  1C03               	goto	u2061
  2557  0080  2882               	goto	u2060
  2558  0081  2883               u2061:
  2559  0082                     	goto	l2609
  2560  0082  2885               u2060:
  2561  0083                     	goto	l2615
  2562  0083  28A2               	
  2563                           l2607:	
  2564  0084                     	goto	l2615
  2565  0084  28A2               	
  2566                           l45:	
  2567  0085                     	line	43
  2568                           	
  2569                           l2609:	
  2570  0085                     ;main.c: 42:    {;main.c: 43:         EEPROM_write(i,0);
  2571                           	clrf	(EEPROM_write@data)
  2572  0085  01F7               	movf	(main@i),w
  2573  0086  0854               	fcall	_EEPROM_write
  2574  0087  120A  118A  276F  120A  118A  	line	44
  2575                           ;main.c: 44:         delay(100);
  2576                           	movlw	064h
  2577  008C  3064               	movwf	(delay@t)
  2578  008D  00F2               	movlw	0
  2579  008E  3000               	movwf	((delay@t))+1
  2580  008F  00F3               	fcall	_delay
  2581  0090  120A  118A  279F  120A  118A  	line	45
  2582                           	
  2583                           l2611:	
  2584  0095                     ;main.c: 45:     }
  2585                           	movlw	low(01h)
  2586  0095  3001               	bcf	status, 5	;RP0=0, select bank0
  2587  0096  1283               	bcf	status, 6	;RP1=0, select bank0
  2588  0097  1303               	movwf	(??_main+0)+0
  2589  0098  00D0               	movf	(??_main+0)+0,w
  2590  0099  0850               	addwf	(main@i),f
  2591  009A  07D4               	
  2592                           l2613:	
  2593  009B                     	movlw	low(040h)
  2594  009B  3040               	subwf	(main@i),w
  2595  009C  0254               	skipc
  2596  009D  1C03               	goto	u2071
  2597  009E  28A0               	goto	u2070
  2598  009F  28A1               u2071:
  2599  00A0                     	goto	l2609
  2600  00A0  2885               u2070:
  2601  00A1                     	goto	l2615
  2602  00A1  28A2               	
  2603                           l46:	
  2604  00A2                     	line	46
  2605                           	
  2606                           l2615:	
  2607  00A2                     ;main.c: 46:     EEPROM_write(0,0);
  2608                           	clrf	(EEPROM_write@data)
  2609  00A2  01F7               	movlw	low(0)
  2610  00A3  3000               	fcall	_EEPROM_write
  2611  00A4  120A  118A  276F  120A  118A  	line	47
  2612                           	
  2613                           l2617:	
  2614  00A9                     ;main.c: 47:     tempo[0].min = EEPROM_read( 0 );
  2615                           	movlw	low(0)
  2616  00A9  3000               	fcall	_EEPROM_read
  2617  00AA  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2618  00AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2619  00B0  1303               	movwf	(??_main+0)+0
  2620  00B1  00D0               	movf	(??_main+0)+0,w
  2621  00B2  0850               	movwf	0+(_tempo)+02h
  2622  00B3  00AA               	line	48
  2623                           	
  2624                           l2619:	
  2625  00B4                     ;main.c: 48:     tempo[0].hor = EEPROM_read( 1 );
  2626                           	movlw	low(01h)
  2627  00B4  3001               	fcall	_EEPROM_read
  2628  00B5  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2629  00BA  1283               	bcf	status, 6	;RP1=0, select bank0
  2630  00BB  1303               	movwf	(??_main+0)+0
  2631  00BC  00D0               	movf	(??_main+0)+0,w
  2632  00BD  0850               	movwf	0+(_tempo)+03h
  2633  00BE  00AB               	line	49
  2634                           	
  2635                           l2621:	
  2636  00BF                     ;main.c: 49:     tempo[0].dia = (int)EEPROM_read( 2 );
  2637                           	movlw	low(02h)
  2638  00BF  3002               	fcall	_EEPROM_read
  2639  00C0  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2640  00C5  1283               	bcf	status, 6	;RP1=0, select bank0
  2641  00C6  1303               	movwf	(??_main+0)+0
  2642  00C7  00D0               	clrf	(??_main+0)+0+1
  2643  00C8  01D1               	movf	0+(??_main+0)+0,w
  2644  00C9  0850               	movwf	0+(_tempo)+04h
  2645  00CA  00AC               	movf	1+(??_main+0)+0,w
  2646  00CB  0851               	movwf	1+(_tempo)+04h
  2647  00CC  00AD               	line	50
  2648                           	
  2649                           l2623:	
  2650  00CD                     ;main.c: 50:     tempo[1].min = EEPROM_read( 10 );
  2651                           	movlw	low(0Ah)
  2652  00CD  300A               	fcall	_EEPROM_read
  2653  00CE  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2654  00D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2655  00D4  1303               	movwf	(??_main+0)+0
  2656  00D5  00D0               	movf	(??_main+0)+0,w
  2657  00D6  0850               	movwf	0+(_tempo)+08h
  2658  00D7  00B0               	line	51
  2659                           	
  2660                           l2625:	
  2661  00D8                     ;main.c: 51:     tempo[1].dia = (int)EEPROM_read( 12 );
  2662                           	movlw	low(0Ch)
  2663  00D8  300C               	fcall	_EEPROM_read
  2664  00D9  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2665  00DE  1283               	bcf	status, 6	;RP1=0, select bank0
  2666  00DF  1303               	movwf	(??_main+0)+0
  2667  00E0  00D0               	clrf	(??_main+0)+0+1
  2668  00E1  01D1               	movf	0+(??_main+0)+0,w
  2669  00E2  0850               	movwf	0+(_tempo)+0Ah
  2670  00E3  00B2               	movf	1+(??_main+0)+0,w
  2671  00E4  0851               	movwf	1+(_tempo)+0Ah
  2672  00E5  00B3               	line	52
  2673                           	
  2674                           l2627:	
  2675  00E6                     ;main.c: 52:     tempo[2].min = EEPROM_read( 20 );
  2676                           	movlw	low(014h)
  2677  00E6  3014               	fcall	_EEPROM_read
  2678  00E7  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2679  00EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2680  00ED  1303               	movwf	(??_main+0)+0
  2681  00EE  00D0               	movf	(??_main+0)+0,w
  2682  00EF  0850               	movwf	0+(_tempo)+0Eh
  2683  00F0  00B6               	line	53
  2684                           	
  2685                           l2629:	
  2686  00F1                     ;main.c: 53:     tempo[2].hor = EEPROM_read( 21 );
  2687                           	movlw	low(015h)
  2688  00F1  3015               	fcall	_EEPROM_read
  2689  00F2  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2690  00F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2691  00F8  1303               	movwf	(??_main+0)+0
  2692  00F9  00D0               	movf	(??_main+0)+0,w
  2693  00FA  0850               	movwf	0+(_tempo)+0Fh
  2694  00FB  00B7               	line	54
  2695                           	
  2696                           l2631:	
  2697  00FC                     ;main.c: 54:     tempo[2].dia = (int)EEPROM_read( 22 );
  2698                           	movlw	low(016h)
  2699  00FC  3016               	fcall	_EEPROM_read
  2700  00FD  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2701  0102  1283               	bcf	status, 6	;RP1=0, select bank0
  2702  0103  1303               	movwf	(??_main+0)+0
  2703  0104  00D0               	clrf	(??_main+0)+0+1
  2704  0105  01D1               	movf	0+(??_main+0)+0,w
  2705  0106  0850               	movwf	0+(_tempo)+010h
  2706  0107  00B8               	movf	1+(??_main+0)+0,w
  2707  0108  0851               	movwf	1+(_tempo)+010h
  2708  0109  00B9               	line	55
  2709                           	
  2710                           l2633:	
  2711  010A                     ;main.c: 55:     tempo[3].min = EEPROM_read( 30 );
  2712                           	movlw	low(01Eh)
  2713  010A  301E               	fcall	_EEPROM_read
  2714  010B  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2715  0110  1283               	bcf	status, 6	;RP1=0, select bank0
  2716  0111  1303               	movwf	(??_main+0)+0
  2717  0112  00D0               	movf	(??_main+0)+0,w
  2718  0113  0850               	movwf	0+(_tempo)+014h
  2719  0114  00BC               	line	56
  2720                           	
  2721                           l2635:	
  2722  0115                     ;main.c: 56:     tempo[3].hor = EEPROM_read( 31 );
  2723                           	movlw	low(01Fh)
  2724  0115  301F               	fcall	_EEPROM_read
  2725  0116  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2726  011B  1283               	bcf	status, 6	;RP1=0, select bank0
  2727  011C  1303               	movwf	(??_main+0)+0
  2728  011D  00D0               	movf	(??_main+0)+0,w
  2729  011E  0850               	movwf	0+(_tempo)+015h
  2730  011F  00BD               	line	57
  2731                           	
  2732                           l2637:	
  2733  0120                     ;main.c: 57:     tempo[3].dia = (int)EEPROM_read( 32 );
  2734                           	movlw	low(020h)
  2735  0120  3020               	fcall	_EEPROM_read
  2736  0121  120A  118A  27F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2737  0126  1283               	bcf	status, 6	;RP1=0, select bank0
  2738  0127  1303               	movwf	(??_main+0)+0
  2739  0128  00D0               	clrf	(??_main+0)+0+1
  2740  0129  01D1               	movf	0+(??_main+0)+0,w
  2741  012A  0850               	movwf	0+(_tempo)+016h
  2742  012B  00BE               	movf	1+(??_main+0)+0,w
  2743  012C  0851               	movwf	1+(_tempo)+016h
  2744  012D  00BF               	goto	l2639
  2745  012E  292F               	line	68
  2746                           ;main.c: 68:     while( 1 )
  2747                           	
  2748                           l47:	
  2749  012F                     	line	70
  2750                           	
  2751                           l2639:	
  2752  012F                     ;main.c: 69:     {;main.c: 70:         habTemporizador( &tempo[0], b0() );
  2753                           	fcall	_b0
  2754  012F  120A  158A  27A6  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2755  0134  1283               	bcf	status, 6	;RP1=0, select bank0
  2756  0135  1303               	movwf	(??_main+0)+0
  2757  0136  00D0               	movf	(??_main+0)+0,w
  2758  0137  0850               	movwf	(habTemporizador@h)
  2759  0138  00F2               	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2760  0139  3028               	fcall	_habTemporizador
  2761  013A  120A  158A  2793  120A  118A  	line	71
  2762                           	
  2763                           l2641:	
  2764  013F                     ;main.c: 71:         habTemporizador( &tempo[1], b1() );
  2765                           	fcall	_b1
  2766  013F  120A  158A  27B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2767  0144  1283               	bcf	status, 6	;RP1=0, select bank0
  2768  0145  1303               	movwf	(??_main+0)+0
  2769  0146  00D0               	movf	(??_main+0)+0,w
  2770  0147  0850               	movwf	(habTemporizador@h)
  2771  0148  00F2               	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2772  0149  302E               	fcall	_habTemporizador
  2773  014A  120A  158A  2793  120A  118A  	line	72
  2774                           	
  2775                           l2643:	
  2776  014F                     ;main.c: 72:         habTemporizador( &tempo[2], b2() );
  2777                           	fcall	_b2
  2778  014F  120A  158A  27BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2779  0154  1283               	bcf	status, 6	;RP1=0, select bank0
  2780  0155  1303               	movwf	(??_main+0)+0
  2781  0156  00D0               	movf	(??_main+0)+0,w
  2782  0157  0850               	movwf	(habTemporizador@h)
  2783  0158  00F2               	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2784  0159  3034               	fcall	_habTemporizador
  2785  015A  120A  158A  2793  120A  118A  	line	73
  2786                           	
  2787                           l2645:	
  2788  015F                     ;main.c: 73:         habTemporizador( &tempo[3], b3() );
  2789                           	fcall	_b3
  2790  015F  120A  158A  27C4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2791  0164  1283               	bcf	status, 6	;RP1=0, select bank0
  2792  0165  1303               	movwf	(??_main+0)+0
  2793  0166  00D0               	movf	(??_main+0)+0,w
  2794  0167  0850               	movwf	(habTemporizador@h)
  2795  0168  00F2               	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2796  0169  303A               	fcall	_habTemporizador
  2797  016A  120A  158A  2793  120A  118A  	line	75
  2798                           	
  2799                           l2647:	
  2800  016F                     ;main.c: 75:         if( T0_status() == 0 )
  2801                           	fcall	_T0_status
  2802  016F  120A  158A  2783  120A  118A  	movf	((0+(?_T0_status))),w
  2803  0174  0872               iorwf	((1+(?_T0_status))),w
  2804  0175  0473               	btfss	status,2
  2805  0176  1D03               	goto	u2081
  2806  0177  2979               	goto	u2080
  2807  0178  297A               u2081:
  2808  0179                     	goto	l2639
  2809  0179  292F               u2080:
  2810  017A                     	line	77
  2811                           	
  2812                           l2649:	
  2813  017A                     ;main.c: 76:         {;main.c: 77:             T0_start(1000);
  2814                           	movlw	0E8h
  2815  017A  30E8               	movwf	(T0_start@c)
  2816  017B  00F2               	movlw	03h
  2817  017C  3003               	movwf	((T0_start@c))+1
  2818  017D  00F3               	fcall	_T0_start
  2819  017E  120A  158A  279C  120A  118A  	line	79
  2820                           	
  2821                           l2651:	
  2822  0183                     ;main.c: 79:             temporizar( &tempo[0], 0 );
  2823                           	bcf	status, 5	;RP0=0, select bank0
  2824  0183  1283               	bcf	status, 6	;RP1=0, select bank0
  2825  0184  1303               	clrf	(temporizar@adrs)
  2826  0185  01C4               	movlw	(low(_tempo|((0x0)<<8)))&0ffh
  2827  0186  3028               	fcall	_temporizar
  2828  0187  120A  118A  2446  120A  118A  	line	80
  2829                           	
  2830                           l2653:	
  2831  018C                     ;main.c: 80:             temporizar( &tempo[1], 10 );
  2832                           	movlw	low(0Ah)
  2833  018C  300A               	bcf	status, 5	;RP0=0, select bank0
  2834  018D  1283               	bcf	status, 6	;RP1=0, select bank0
  2835  018E  1303               	movwf	(??_main+0)+0
  2836  018F  00D0               	movf	(??_main+0)+0,w
  2837  0190  0850               	movwf	(temporizar@adrs)
  2838  0191  00C4               	movlw	(low(_tempo|((0x0)<<8)+06h))&0ffh
  2839  0192  302E               	fcall	_temporizar
  2840  0193  120A  118A  2446  120A  118A  	line	81
  2841                           	
  2842                           l2655:	
  2843  0198                     ;main.c: 81:             temporizar( &tempo[2], 20 );
  2844                           	movlw	low(014h)
  2845  0198  3014               	bcf	status, 5	;RP0=0, select bank0
  2846  0199  1283               	bcf	status, 6	;RP1=0, select bank0
  2847  019A  1303               	movwf	(??_main+0)+0
  2848  019B  00D0               	movf	(??_main+0)+0,w
  2849  019C  0850               	movwf	(temporizar@adrs)
  2850  019D  00C4               	movlw	(low(_tempo|((0x0)<<8)+0Ch))&0ffh
  2851  019E  3034               	fcall	_temporizar
  2852  019F  120A  118A  2446  120A  118A  	line	82
  2853                           	
  2854                           l2657:	
  2855  01A4                     ;main.c: 82:             temporizar( &tempo[3], 30 );
  2856                           	movlw	low(01Eh)
  2857  01A4  301E               	bcf	status, 5	;RP0=0, select bank0
  2858  01A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2859  01A6  1303               	movwf	(??_main+0)+0
  2860  01A7  00D0               	movf	(??_main+0)+0,w
  2861  01A8  0850               	movwf	(temporizar@adrs)
  2862  01A9  00C4               	movlw	(low(_tempo|((0x0)<<8)+012h))&0ffh
  2863  01AA  303A               	fcall	_temporizar
  2864  01AB  120A  118A  2446  120A  118A  	line	84
  2865                           	
  2866                           l2659:	
  2867  01B0                     ;main.c: 84:             lcd_print(0,2, ":");
  2868                           	movlw	low(02h)
  2869  01B0  3002               	bcf	status, 5	;RP0=0, select bank0
  2870  01B1  1283               	bcf	status, 6	;RP1=0, select bank0
  2871  01B2  1303               	movwf	(??_main+0)+0
  2872  01B3  00D0               	movf	(??_main+0)+0,w
  2873  01B4  0850               	movwf	(lcd_print@col)
  2874  01B5  00F8               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2875  01B6  3024               	movwf	(??_main+1)+0
  2876  01B7  00D1               	movf	(??_main+1)+0,w
  2877  01B8  0851               	movwf	(lcd_print@str)
  2878  01B9  00F9               	movlw	low(0)
  2879  01BA  3000               	fcall	_lcd_print
  2880  01BB  120A  118A  26B5  120A  118A  	line	85
  2881                           	
  2882                           l2661:	
  2883  01C0                     ;main.c: 85:             lcd_print(0,5, " ");
  2884                           	movlw	low(05h)
  2885  01C0  3005               	bcf	status, 5	;RP0=0, select bank0
  2886  01C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2887  01C2  1303               	movwf	(??_main+0)+0
  2888  01C3  00D0               	movf	(??_main+0)+0,w
  2889  01C4  0850               	movwf	(lcd_print@col)
  2890  01C5  00F8               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2891  01C6  3022               	movwf	(??_main+1)+0
  2892  01C7  00D1               	movf	(??_main+1)+0,w
  2893  01C8  0851               	movwf	(lcd_print@str)
  2894  01C9  00F9               	movlw	low(0)
  2895  01CA  3000               	fcall	_lcd_print
  2896  01CB  120A  118A  26B5  120A  118A  	line	86
  2897                           	
  2898                           l2663:	
  2899  01D0                     ;main.c: 86:             lcd_print(0,13, ":");
  2900                           	movlw	low(0Dh)
  2901  01D0  300D               	bcf	status, 5	;RP0=0, select bank0
  2902  01D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2903  01D2  1303               	movwf	(??_main+0)+0
  2904  01D3  00D0               	movf	(??_main+0)+0,w
  2905  01D4  0850               	movwf	(lcd_print@col)
  2906  01D5  00F8               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2907  01D6  3024               	movwf	(??_main+1)+0
  2908  01D7  00D1               	movf	(??_main+1)+0,w
  2909  01D8  0851               	movwf	(lcd_print@str)
  2910  01D9  00F9               	movlw	low(0)
  2911  01DA  3000               	fcall	_lcd_print
  2912  01DB  120A  118A  26B5  120A  118A  	line	87
  2913                           	
  2914                           l2665:	
  2915  01E0                     ;main.c: 87:             lcd_print(1,2, ":");
  2916                           	movlw	low(02h)
  2917  01E0  3002               	bcf	status, 5	;RP0=0, select bank0
  2918  01E1  1283               	bcf	status, 6	;RP1=0, select bank0
  2919  01E2  1303               	movwf	(??_main+0)+0
  2920  01E3  00D0               	movf	(??_main+0)+0,w
  2921  01E4  0850               	movwf	(lcd_print@col)
  2922  01E5  00F8               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2923  01E6  3024               	movwf	(??_main+1)+0
  2924  01E7  00D1               	movf	(??_main+1)+0,w
  2925  01E8  0851               	movwf	(lcd_print@str)
  2926  01E9  00F9               	movlw	low(01h)
  2927  01EA  3001               	fcall	_lcd_print
  2928  01EB  120A  118A  26B5  120A  118A  	line	88
  2929                           	
  2930                           l2667:	
  2931  01F0                     ;main.c: 88:             lcd_print(1,5, " ");
  2932                           	movlw	low(05h)
  2933  01F0  3005               	bcf	status, 5	;RP0=0, select bank0
  2934  01F1  1283               	bcf	status, 6	;RP1=0, select bank0
  2935  01F2  1303               	movwf	(??_main+0)+0
  2936  01F3  00D0               	movf	(??_main+0)+0,w
  2937  01F4  0850               	movwf	(lcd_print@col)
  2938  01F5  00F8               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2939  01F6  3022               	movwf	(??_main+1)+0
  2940  01F7  00D1               	movf	(??_main+1)+0,w
  2941  01F8  0851               	movwf	(lcd_print@str)
  2942  01F9  00F9               	movlw	low(01h)
  2943  01FA  3001               	fcall	_lcd_print
  2944  01FB  120A  118A  26B5  120A  118A  	line	89
  2945                           	
  2946                           l2669:	
  2947  0200                     ;main.c: 89:             lcd_print(1,13, ":");
  2948                           	movlw	low(0Dh)
  2949  0200  300D               	bcf	status, 5	;RP0=0, select bank0
  2950  0201  1283               	bcf	status, 6	;RP1=0, select bank0
  2951  0202  1303               	movwf	(??_main+0)+0
  2952  0203  00D0               	movf	(??_main+0)+0,w
  2953  0204  0850               	movwf	(lcd_print@col)
  2954  0205  00F8               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2955  0206  3024               	movwf	(??_main+1)+0
  2956  0207  00D1               	movf	(??_main+1)+0,w
  2957  0208  0851               	movwf	(lcd_print@str)
  2958  0209  00F9               	movlw	low(01h)
  2959  020A  3001               	fcall	_lcd_print
  2960  020B  120A  118A  26B5  120A  118A  	line	91
  2961                           	
  2962                           l2671:	
  2963  0210                     ;main.c: 91:             lcd_num(0, 0, tempo[0].min, 2);
  2964                           	bcf	status, 5	;RP0=0, select bank0
  2965  0210  1283               	bcf	status, 6	;RP1=0, select bank0
  2966  0211  1303               	clrf	(lcd_num@col)
  2967  0212  01C4               	movf	0+(_tempo)+02h,w
  2968  0213  082A               	movwf	(??_main+0)+0
  2969  0214  00D0               	clrf	(??_main+0)+0+1
  2970  0215  01D1               	movf	0+(??_main+0)+0,w
  2971  0216  0850               	movwf	(lcd_num@num)
  2972  0217  00C5               	movf	1+(??_main+0)+0,w
  2973  0218  0851               	movwf	(lcd_num@num+1)
  2974  0219  00C6               	movlw	low(02h)
  2975  021A  3002               	movwf	(??_main+2)+0
  2976  021B  00D2               	movf	(??_main+2)+0,w
  2977  021C  0852               	movwf	(lcd_num@tam)
  2978  021D  00C7               	movlw	low(0)
  2979  021E  3000               	fcall	_lcd_num
  2980  021F  120A  118A  2358  120A  118A  	line	92
  2981                           	
  2982                           l2673:	
  2983  0224                     ;main.c: 92:             lcd_num(0, 3, tempo[0].seg, 2);
  2984                           	movlw	low(03h)
  2985  0224  3003               	bcf	status, 5	;RP0=0, select bank0
  2986  0225  1283               	bcf	status, 6	;RP1=0, select bank0
  2987  0226  1303               	movwf	(??_main+0)+0
  2988  0227  00D0               	movf	(??_main+0)+0,w
  2989  0228  0850               	movwf	(lcd_num@col)
  2990  0229  00C4               	movf	0+(_tempo)+01h,w
  2991  022A  0829               	movwf	(??_main+1)+0
  2992  022B  00D1               	clrf	(??_main+1)+0+1
  2993  022C  01D2               	movf	0+(??_main+1)+0,w
  2994  022D  0851               	movwf	(lcd_num@num)
  2995  022E  00C5               	movf	1+(??_main+1)+0,w
  2996  022F  0852               	movwf	(lcd_num@num+1)
  2997  0230  00C6               	movlw	low(02h)
  2998  0231  3002               	movwf	(??_main+3)+0
  2999  0232  00D3               	movf	(??_main+3)+0,w
  3000  0233  0853               	movwf	(lcd_num@tam)
  3001  0234  00C7               	movlw	low(0)
  3002  0235  3000               	fcall	_lcd_num
  3003  0236  120A  118A  2358  120A  118A  	line	93
  3004                           ;main.c: 93:             EEPROM_write(0,tempo[0].min );
  3005                           	bcf	status, 5	;RP0=0, select bank0
  3006  023B  1283               	bcf	status, 6	;RP1=0, select bank0
  3007  023C  1303               	movf	0+(_tempo)+02h,w
  3008  023D  082A               	movwf	(??_main+0)+0
  3009  023E  00D0               	movf	(??_main+0)+0,w
  3010  023F  0850               	movwf	(EEPROM_write@data)
  3011  0240  00F7               	movlw	low(0)
  3012  0241  3000               	fcall	_EEPROM_write
  3013  0242  120A  118A  276F  120A  118A  	line	94
  3014                           ;main.c: 94:             EEPROM_write(1,tempo[0].hor );
  3015                           	bcf	status, 5	;RP0=0, select bank0
  3016  0247  1283               	bcf	status, 6	;RP1=0, select bank0
  3017  0248  1303               	movf	0+(_tempo)+03h,w
  3018  0249  082B               	movwf	(??_main+0)+0
  3019  024A  00D0               	movf	(??_main+0)+0,w
  3020  024B  0850               	movwf	(EEPROM_write@data)
  3021  024C  00F7               	movlw	low(01h)
  3022  024D  3001               	fcall	_EEPROM_write
  3023  024E  120A  118A  276F  120A  118A  	line	95
  3024                           ;main.c: 95:             EEPROM_write(2,tempo[0].dia );
  3025                           	bcf	status, 5	;RP0=0, select bank0
  3026  0253  1283               	bcf	status, 6	;RP1=0, select bank0
  3027  0254  1303               	movf	0+(_tempo)+04h,w
  3028  0255  082C               	movwf	(??_main+0)+0
  3029  0256  00D0               	movf	(??_main+0)+0,w
  3030  0257  0850               	movwf	(EEPROM_write@data)
  3031  0258  00F7               	movlw	low(02h)
  3032  0259  3002               	fcall	_EEPROM_write
  3033  025A  120A  118A  276F  120A  118A  	line	97
  3034                           	
  3035                           l2675:	
  3036  025F                     ;main.c: 97:             lcd_num(0, 11, tempo[1].min, 2);
  3037                           	movlw	low(0Bh)
  3038  025F  300B               	bcf	status, 5	;RP0=0, select bank0
  3039  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  3040  0261  1303               	movwf	(??_main+0)+0
  3041  0262  00D0               	movf	(??_main+0)+0,w
  3042  0263  0850               	movwf	(lcd_num@col)
  3043  0264  00C4               	movf	0+(_tempo)+08h,w
  3044  0265  0830               	movwf	(??_main+1)+0
  3045  0266  00D1               	clrf	(??_main+1)+0+1
  3046  0267  01D2               	movf	0+(??_main+1)+0,w
  3047  0268  0851               	movwf	(lcd_num@num)
  3048  0269  00C5               	movf	1+(??_main+1)+0,w
  3049  026A  0852               	movwf	(lcd_num@num+1)
  3050  026B  00C6               	movlw	low(02h)
  3051  026C  3002               	movwf	(??_main+3)+0
  3052  026D  00D3               	movf	(??_main+3)+0,w
  3053  026E  0853               	movwf	(lcd_num@tam)
  3054  026F  00C7               	movlw	low(0)
  3055  0270  3000               	fcall	_lcd_num
  3056  0271  120A  118A  2358  120A  118A  	line	98
  3057                           	
  3058                           l2677:	
  3059  0276                     ;main.c: 98:             lcd_num(0, 14, tempo[1].seg, 2);
  3060                           	movlw	low(0Eh)
  3061  0276  300E               	bcf	status, 5	;RP0=0, select bank0
  3062  0277  1283               	bcf	status, 6	;RP1=0, select bank0
  3063  0278  1303               	movwf	(??_main+0)+0
  3064  0279  00D0               	movf	(??_main+0)+0,w
  3065  027A  0850               	movwf	(lcd_num@col)
  3066  027B  00C4               	movf	0+(_tempo)+07h,w
  3067  027C  082F               	movwf	(??_main+1)+0
  3068  027D  00D1               	clrf	(??_main+1)+0+1
  3069  027E  01D2               	movf	0+(??_main+1)+0,w
  3070  027F  0851               	movwf	(lcd_num@num)
  3071  0280  00C5               	movf	1+(??_main+1)+0,w
  3072  0281  0852               	movwf	(lcd_num@num+1)
  3073  0282  00C6               	movlw	low(02h)
  3074  0283  3002               	movwf	(??_main+3)+0
  3075  0284  00D3               	movf	(??_main+3)+0,w
  3076  0285  0853               	movwf	(lcd_num@tam)
  3077  0286  00C7               	movlw	low(0)
  3078  0287  3000               	fcall	_lcd_num
  3079  0288  120A  118A  2358  120A  118A  	line	99
  3080                           ;main.c: 99:             EEPROM_write(10,tempo[1].min );
  3081                           	bcf	status, 5	;RP0=0, select bank0
  3082  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  3083  028E  1303               	movf	0+(_tempo)+08h,w
  3084  028F  0830               	movwf	(??_main+0)+0
  3085  0290  00D0               	movf	(??_main+0)+0,w
  3086  0291  0850               	movwf	(EEPROM_write@data)
  3087  0292  00F7               	movlw	low(0Ah)
  3088  0293  300A               	fcall	_EEPROM_write
  3089  0294  120A  118A  276F  120A  118A  	line	100
  3090                           ;main.c: 100:             EEPROM_write(11,tempo[1].hor );
  3091                           	bcf	status, 5	;RP0=0, select bank0
  3092  0299  1283               	bcf	status, 6	;RP1=0, select bank0
  3093  029A  1303               	movf	0+(_tempo)+09h,w
  3094  029B  0831               	movwf	(??_main+0)+0
  3095  029C  00D0               	movf	(??_main+0)+0,w
  3096  029D  0850               	movwf	(EEPROM_write@data)
  3097  029E  00F7               	movlw	low(0Bh)
  3098  029F  300B               	fcall	_EEPROM_write
  3099  02A0  120A  118A  276F  120A  118A  	line	101
  3100                           ;main.c: 101:             EEPROM_write(12,tempo[1].dia );
  3101                           	bcf	status, 5	;RP0=0, select bank0
  3102  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  3103  02A6  1303               	movf	0+(_tempo)+0Ah,w
  3104  02A7  0832               	movwf	(??_main+0)+0
  3105  02A8  00D0               	movf	(??_main+0)+0,w
  3106  02A9  0850               	movwf	(EEPROM_write@data)
  3107  02AA  00F7               	movlw	low(0Ch)
  3108  02AB  300C               	fcall	_EEPROM_write
  3109  02AC  120A  118A  276F  120A  118A  	line	103
  3110                           	
  3111                           l2679:	
  3112  02B1                     ;main.c: 103:             lcd_num(1, 0, tempo[2].hor, 2);
  3113                           	bcf	status, 5	;RP0=0, select bank0
  3114  02B1  1283               	bcf	status, 6	;RP1=0, select bank0
  3115  02B2  1303               	clrf	(lcd_num@col)
  3116  02B3  01C4               	movf	0+(_tempo)+0Fh,w
  3117  02B4  0837               	movwf	(??_main+0)+0
  3118  02B5  00D0               	clrf	(??_main+0)+0+1
  3119  02B6  01D1               	movf	0+(??_main+0)+0,w
  3120  02B7  0850               	movwf	(lcd_num@num)
  3121  02B8  00C5               	movf	1+(??_main+0)+0,w
  3122  02B9  0851               	movwf	(lcd_num@num+1)
  3123  02BA  00C6               	movlw	low(02h)
  3124  02BB  3002               	movwf	(??_main+2)+0
  3125  02BC  00D2               	movf	(??_main+2)+0,w
  3126  02BD  0852               	movwf	(lcd_num@tam)
  3127  02BE  00C7               	movlw	low(01h)
  3128  02BF  3001               	fcall	_lcd_num
  3129  02C0  120A  118A  2358  120A  118A  	line	104
  3130                           	
  3131                           l2681:	
  3132  02C5                     ;main.c: 104:             lcd_num(1, 3, tempo[2].min, 2);
  3133                           	movlw	low(03h)
  3134  02C5  3003               	bcf	status, 5	;RP0=0, select bank0
  3135  02C6  1283               	bcf	status, 6	;RP1=0, select bank0
  3136  02C7  1303               	movwf	(??_main+0)+0
  3137  02C8  00D0               	movf	(??_main+0)+0,w
  3138  02C9  0850               	movwf	(lcd_num@col)
  3139  02CA  00C4               	movf	0+(_tempo)+0Eh,w
  3140  02CB  0836               	movwf	(??_main+1)+0
  3141  02CC  00D1               	clrf	(??_main+1)+0+1
  3142  02CD  01D2               	movf	0+(??_main+1)+0,w
  3143  02CE  0851               	movwf	(lcd_num@num)
  3144  02CF  00C5               	movf	1+(??_main+1)+0,w
  3145  02D0  0852               	movwf	(lcd_num@num+1)
  3146  02D1  00C6               	movlw	low(02h)
  3147  02D2  3002               	movwf	(??_main+3)+0
  3148  02D3  00D3               	movf	(??_main+3)+0,w
  3149  02D4  0853               	movwf	(lcd_num@tam)
  3150  02D5  00C7               	movlw	low(01h)
  3151  02D6  3001               	fcall	_lcd_num
  3152  02D7  120A  118A  2358  120A  118A  	line	105
  3153                           ;main.c: 105:             EEPROM_write(20,tempo[2].min );
  3154                           	bcf	status, 5	;RP0=0, select bank0
  3155  02DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3156  02DD  1303               	movf	0+(_tempo)+0Eh,w
  3157  02DE  0836               	movwf	(??_main+0)+0
  3158  02DF  00D0               	movf	(??_main+0)+0,w
  3159  02E0  0850               	movwf	(EEPROM_write@data)
  3160  02E1  00F7               	movlw	low(014h)
  3161  02E2  3014               	fcall	_EEPROM_write
  3162  02E3  120A  118A  276F  120A  118A  	line	106
  3163                           ;main.c: 106:             EEPROM_write(21,tempo[2].hor );
  3164                           	bcf	status, 5	;RP0=0, select bank0
  3165  02E8  1283               	bcf	status, 6	;RP1=0, select bank0
  3166  02E9  1303               	movf	0+(_tempo)+0Fh,w
  3167  02EA  0837               	movwf	(??_main+0)+0
  3168  02EB  00D0               	movf	(??_main+0)+0,w
  3169  02EC  0850               	movwf	(EEPROM_write@data)
  3170  02ED  00F7               	movlw	low(015h)
  3171  02EE  3015               	fcall	_EEPROM_write
  3172  02EF  120A  118A  276F  120A  118A  	line	107
  3173                           ;main.c: 107:             EEPROM_write(22,tempo[2].dia );
  3174                           	bcf	status, 5	;RP0=0, select bank0
  3175  02F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3176  02F5  1303               	movf	0+(_tempo)+010h,w
  3177  02F6  0838               	movwf	(??_main+0)+0
  3178  02F7  00D0               	movf	(??_main+0)+0,w
  3179  02F8  0850               	movwf	(EEPROM_write@data)
  3180  02F9  00F7               	movlw	low(016h)
  3181  02FA  3016               	fcall	_EEPROM_write
  3182  02FB  120A  118A  276F  120A  118A  	line	109
  3183                           	
  3184                           l2683:	
  3185  0300                     ;main.c: 109:             lcd_num(1, 11, tempo[3].hor, 2);
  3186                           	movlw	low(0Bh)
  3187  0300  300B               	bcf	status, 5	;RP0=0, select bank0
  3188  0301  1283               	bcf	status, 6	;RP1=0, select bank0
  3189  0302  1303               	movwf	(??_main+0)+0
  3190  0303  00D0               	movf	(??_main+0)+0,w
  3191  0304  0850               	movwf	(lcd_num@col)
  3192  0305  00C4               	movf	0+(_tempo)+015h,w
  3193  0306  083D               	movwf	(??_main+1)+0
  3194  0307  00D1               	clrf	(??_main+1)+0+1
  3195  0308  01D2               	movf	0+(??_main+1)+0,w
  3196  0309  0851               	movwf	(lcd_num@num)
  3197  030A  00C5               	movf	1+(??_main+1)+0,w
  3198  030B  0852               	movwf	(lcd_num@num+1)
  3199  030C  00C6               	movlw	low(02h)
  3200  030D  3002               	movwf	(??_main+3)+0
  3201  030E  00D3               	movf	(??_main+3)+0,w
  3202  030F  0853               	movwf	(lcd_num@tam)
  3203  0310  00C7               	movlw	low(01h)
  3204  0311  3001               	fcall	_lcd_num
  3205  0312  120A  118A  2358  120A  118A  	line	110
  3206                           	
  3207                           l2685:	
  3208  0317                     ;main.c: 110:             lcd_num(1, 14, tempo[3].min, 2);
  3209                           	movlw	low(0Eh)
  3210  0317  300E               	bcf	status, 5	;RP0=0, select bank0
  3211  0318  1283               	bcf	status, 6	;RP1=0, select bank0
  3212  0319  1303               	movwf	(??_main+0)+0
  3213  031A  00D0               	movf	(??_main+0)+0,w
  3214  031B  0850               	movwf	(lcd_num@col)
  3215  031C  00C4               	movf	0+(_tempo)+014h,w
  3216  031D  083C               	movwf	(??_main+1)+0
  3217  031E  00D1               	clrf	(??_main+1)+0+1
  3218  031F  01D2               	movf	0+(??_main+1)+0,w
  3219  0320  0851               	movwf	(lcd_num@num)
  3220  0321  00C5               	movf	1+(??_main+1)+0,w
  3221  0322  0852               	movwf	(lcd_num@num+1)
  3222  0323  00C6               	movlw	low(02h)
  3223  0324  3002               	movwf	(??_main+3)+0
  3224  0325  00D3               	movf	(??_main+3)+0,w
  3225  0326  0853               	movwf	(lcd_num@tam)
  3226  0327  00C7               	movlw	low(01h)
  3227  0328  3001               	fcall	_lcd_num
  3228  0329  120A  118A  2358  120A  118A  	line	111
  3229                           ;main.c: 111:             EEPROM_write(30,tempo[3].min );
  3230                           	bcf	status, 5	;RP0=0, select bank0
  3231  032E  1283               	bcf	status, 6	;RP1=0, select bank0
  3232  032F  1303               	movf	0+(_tempo)+014h,w
  3233  0330  083C               	movwf	(??_main+0)+0
  3234  0331  00D0               	movf	(??_main+0)+0,w
  3235  0332  0850               	movwf	(EEPROM_write@data)
  3236  0333  00F7               	movlw	low(01Eh)
  3237  0334  301E               	fcall	_EEPROM_write
  3238  0335  120A  118A  276F  120A  118A  	line	112
  3239                           ;main.c: 112:             EEPROM_write(31,tempo[2].hor );
  3240                           	bcf	status, 5	;RP0=0, select bank0
  3241  033A  1283               	bcf	status, 6	;RP1=0, select bank0
  3242  033B  1303               	movf	0+(_tempo)+0Fh,w
  3243  033C  0837               	movwf	(??_main+0)+0
  3244  033D  00D0               	movf	(??_main+0)+0,w
  3245  033E  0850               	movwf	(EEPROM_write@data)
  3246  033F  00F7               	movlw	low(01Fh)
  3247  0340  301F               	fcall	_EEPROM_write
  3248  0341  120A  118A  276F  120A  118A  	line	113
  3249                           ;main.c: 113:             EEPROM_write(32,tempo[2].dia );
  3250                           	bcf	status, 5	;RP0=0, select bank0
  3251  0346  1283               	bcf	status, 6	;RP1=0, select bank0
  3252  0347  1303               	movf	0+(_tempo)+010h,w
  3253  0348  0838               	movwf	(??_main+0)+0
  3254  0349  00D0               	movf	(??_main+0)+0,w
  3255  034A  0850               	movwf	(EEPROM_write@data)
  3256  034B  00F7               	movlw	low(020h)
  3257  034C  3020               	fcall	_EEPROM_write
  3258  034D  120A  118A  276F  120A  118A  	goto	l2639
  3259  0352  292F               	line	115
  3260                           ;main.c: 115:         }
  3261                           	
  3262                           l48:	
  3263  0353                     	goto	l2639
  3264  0353  292F               	line	116
  3265                           ;main.c: 116:    }
  3266                           	
  3267                           l49:	
  3268  0354                     	goto	l2639
  3269  0354  292F               	
  3270                           l50:	
  3271  0355                     	line	117
  3272                           	
  3273                           l51:	
  3274  0355                     	global	start
  3275                           	ljmp	start
  3276  0355  120A  118A  280C   	opt stack 0
  3277                           GLOBAL	__end_of_main
  3278                           	__end_of_main:
  3279  0358                     	signat	_main,89
  3280                           	global	_temporizar
  3281                           
  3282 ;; *************** function _temporizar *****************
  3283 ;; Defined at:
  3284 ;;		line 40 in file "tempo.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  t               1    wreg     PTR struct temporizadorT
  3287 ;;		 -> tempo(24), 
  3288 ;;  adrs            1    4[BANK0 ] unsigned char 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;  t               1    9[COMMON] PTR struct temporizadorT
  3291 ;;		 -> tempo(24), 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       1       0       0       0
  3302 ;;      Locals:         1       0       0       0       0
  3303 ;;      Temps:          0       4       0       0       0
  3304 ;;      Totals:         1       5       0       0       0
  3305 ;;Total ram usage:        6 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    3
  3308 ;; This function calls:
  3309 ;;		_EEPROM_write
  3310 ;;		___awdiv
  3311 ;;		___awmod
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3317                           	file	"tempo.c"
  3318                           	line	40
  3319                           global __ptext1
  3320                           __ptext1:	;psect for function _temporizar
  3321  0446                     psect	text1
  3322                           	file	"tempo.c"
  3323                           	line	40
  3324                           	global	__size_of_temporizar
  3325                           	__size_of_temporizar	equ	__end_of_temporizar-_temporizar
  3326  00DE                     	
  3327                           _temporizar:	
  3328  0446                     ;incstack = 0
  3329                           	opt	stack 4
  3330                           ; Regs used in _temporizar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3331                           ;temporizar@t stored from wreg
  3332                           	movwf	(temporizar@t)
  3333  0446  00F9               	line	42
  3334                           	
  3335                           l2525:	
  3336  0447                     ;tempo.c: 40: void temporizar( struct temporizadorT * t, unsigned char adrs );tempo.c: 4
                                 1: {;tempo.c: 42:     if( t->hab )
  3337                           	movf	(temporizar@t),w
  3338  0447  0879               	movwf	fsr0
  3339  0448  0084               	bcf	status, 7	;select IRP bank0
  3340  0449  1383               	movf	(indf),w
  3341  044A  0800               	btfsc	status,2
  3342  044B  1903               	goto	u1931
  3343  044C  2C4E               	goto	u1930
  3344  044D  2C4F               u1931:
  3345  044E                     	goto	l233
  3346  044E  2D23               u1930:
  3347  044F                     	line	44
  3348                           	
  3349                           l2527:	
  3350  044F                     ;tempo.c: 43:     {;tempo.c: 44:         t->seg = ++(t->seg) % 60;
  3351                           	movlw	03Ch
  3352  044F  303C               	movwf	(___awmod@divisor)
  3353  0450  00F2               	movlw	0
  3354  0451  3000               	movwf	((___awmod@divisor))+1
  3355  0452  00F3               	movlw	low(01h)
  3356  0453  3001               	bcf	status, 5	;RP0=0, select bank0
  3357  0454  1283               	bcf	status, 6	;RP1=0, select bank0
  3358  0455  1303               	movwf	(??_temporizar+0)+0
  3359  0456  00C5               	incf	(temporizar@t),w
  3360  0457  0A79               	movwf	fsr0
  3361  0458  0084               	movf	(??_temporizar+0)+0,w
  3362  0459  0845               	addwf	indf,f
  3363  045A  0780               	movf	(indf),w
  3364  045B  0800               	movwf	(??_temporizar+1)+0
  3365  045C  00C6               	clrf	(??_temporizar+1)+0+1
  3366  045D  01C7               	movf	0+(??_temporizar+1)+0,w
  3367  045E  0846               	movwf	(___awmod@dividend)
  3368  045F  00F4               	movf	1+(??_temporizar+1)+0,w
  3369  0460  0847               	movwf	(___awmod@dividend+1)
  3370  0461  00F5               	fcall	___awmod
  3371  0462  120A  118A  2613  120A  118A  	movf	(0+(?___awmod)),w
  3372  0467  0872               	bcf	status, 5	;RP0=0, select bank0
  3373  0468  1283               	bcf	status, 6	;RP1=0, select bank0
  3374  0469  1303               	movwf	(??_temporizar+3)+0
  3375  046A  00C8               	incf	(temporizar@t),w
  3376  046B  0A79               	movwf	fsr0
  3377  046C  0084               	movf	(??_temporizar+3)+0,w
  3378  046D  0848               	bcf	status, 7	;select IRP bank0
  3379  046E  1383               	movwf	indf
  3380  046F  0080               	line	45
  3381                           	
  3382                           l2529:	
  3383  0470                     ;tempo.c: 45:         if( t->seg == 0 )
  3384                           	incf	(temporizar@t),w
  3385  0470  0A79               	movwf	fsr0
  3386  0471  0084               	movf	(indf),w
  3387  0472  0800               	btfss	status,2
  3388  0473  1D03               	goto	u1941
  3389  0474  2C76               	goto	u1940
  3390  0475  2C77               u1941:
  3391  0476                     	goto	l233
  3392  0476  2D23               u1940:
  3393  0477                     	line	47
  3394                           	
  3395                           l2531:	
  3396  0477                     ;tempo.c: 46:         {;tempo.c: 47:             t->min = ++(t->min) % 60;
  3397                           	movlw	03Ch
  3398  0477  303C               	movwf	(___awmod@divisor)
  3399  0478  00F2               	movlw	0
  3400  0479  3000               	movwf	((___awmod@divisor))+1
  3401  047A  00F3               	movlw	low(01h)
  3402  047B  3001               	movwf	(??_temporizar+0)+0
  3403  047C  00C5               	movf	(temporizar@t),w
  3404  047D  0879               	addlw	02h
  3405  047E  3E02               	movwf	fsr0
  3406  047F  0084               	movf	(??_temporizar+0)+0,w
  3407  0480  0845               	addwf	indf,f
  3408  0481  0780               	movf	(indf),w
  3409  0482  0800               	movwf	(??_temporizar+1)+0
  3410  0483  00C6               	clrf	(??_temporizar+1)+0+1
  3411  0484  01C7               	movf	0+(??_temporizar+1)+0,w
  3412  0485  0846               	movwf	(___awmod@dividend)
  3413  0486  00F4               	movf	1+(??_temporizar+1)+0,w
  3414  0487  0847               	movwf	(___awmod@dividend+1)
  3415  0488  00F5               	fcall	___awmod
  3416  0489  120A  118A  2613  120A  118A  	movf	(0+(?___awmod)),w
  3417  048E  0872               	bcf	status, 5	;RP0=0, select bank0
  3418  048F  1283               	bcf	status, 6	;RP1=0, select bank0
  3419  0490  1303               	movwf	(??_temporizar+3)+0
  3420  0491  00C8               	movf	(temporizar@t),w
  3421  0492  0879               	addlw	02h
  3422  0493  3E02               	movwf	fsr0
  3423  0494  0084               	movf	(??_temporizar+3)+0,w
  3424  0495  0848               	bcf	status, 7	;select IRP bank0
  3425  0496  1383               	movwf	indf
  3426  0497  0080               	line	48
  3427                           ;tempo.c: 48:             EEPROM_write( adrs+0, t->min );
  3428                           	movf	(temporizar@t),w
  3429  0498  0879               	addlw	02h
  3430  0499  3E02               	movwf	fsr0
  3431  049A  0084               	movf	indf,w
  3432  049B  0800               	movwf	(??_temporizar+0)+0
  3433  049C  00C5               	movf	(??_temporizar+0)+0,w
  3434  049D  0845               	movwf	(EEPROM_write@data)
  3435  049E  00F7               	movf	(temporizar@adrs),w
  3436  049F  0844               	fcall	_EEPROM_write
  3437  04A0  120A  118A  276F  120A  118A  	line	49
  3438                           	
  3439                           l2533:	
  3440  04A5                     ;tempo.c: 49:             if( t->min == 0 )
  3441                           	movf	(temporizar@t),w
  3442  04A5  0879               	addlw	02h
  3443  04A6  3E02               	movwf	fsr0
  3444  04A7  0084               	bcf	status, 7	;select IRP bank0
  3445  04A8  1383               	movf	(indf),w
  3446  04A9  0800               	btfss	status,2
  3447  04AA  1D03               	goto	u1951
  3448  04AB  2CAD               	goto	u1950
  3449  04AC  2CAE               u1951:
  3450  04AD                     	goto	l233
  3451  04AD  2D23               u1950:
  3452  04AE                     	line	51
  3453                           	
  3454                           l2535:	
  3455  04AE                     ;tempo.c: 50:             {;tempo.c: 51:                 t->hor = ++(t->hor) % 24;
  3456                           	movlw	018h
  3457  04AE  3018               	movwf	(___awmod@divisor)
  3458  04AF  00F2               	movlw	0
  3459  04B0  3000               	movwf	((___awmod@divisor))+1
  3460  04B1  00F3               	movlw	low(01h)
  3461  04B2  3001               	bcf	status, 5	;RP0=0, select bank0
  3462  04B3  1283               	bcf	status, 6	;RP1=0, select bank0
  3463  04B4  1303               	movwf	(??_temporizar+0)+0
  3464  04B5  00C5               	movf	(temporizar@t),w
  3465  04B6  0879               	addlw	03h
  3466  04B7  3E03               	movwf	fsr0
  3467  04B8  0084               	movf	(??_temporizar+0)+0,w
  3468  04B9  0845               	addwf	indf,f
  3469  04BA  0780               	movf	(indf),w
  3470  04BB  0800               	movwf	(??_temporizar+1)+0
  3471  04BC  00C6               	clrf	(??_temporizar+1)+0+1
  3472  04BD  01C7               	movf	0+(??_temporizar+1)+0,w
  3473  04BE  0846               	movwf	(___awmod@dividend)
  3474  04BF  00F4               	movf	1+(??_temporizar+1)+0,w
  3475  04C0  0847               	movwf	(___awmod@dividend+1)
  3476  04C1  00F5               	fcall	___awmod
  3477  04C2  120A  118A  2613  120A  118A  	movf	(0+(?___awmod)),w
  3478  04C7  0872               	bcf	status, 5	;RP0=0, select bank0
  3479  04C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3480  04C9  1303               	movwf	(??_temporizar+3)+0
  3481  04CA  00C8               	movf	(temporizar@t),w
  3482  04CB  0879               	addlw	03h
  3483  04CC  3E03               	movwf	fsr0
  3484  04CD  0084               	movf	(??_temporizar+3)+0,w
  3485  04CE  0848               	bcf	status, 7	;select IRP bank0
  3486  04CF  1383               	movwf	indf
  3487  04D0  0080               	line	52
  3488                           ;tempo.c: 52:                 EEPROM_write( adrs+1, t->hor );
  3489                           	movf	(temporizar@t),w
  3490  04D1  0879               	addlw	03h
  3491  04D2  3E03               	movwf	fsr0
  3492  04D3  0084               	movf	indf,w
  3493  04D4  0800               	movwf	(??_temporizar+0)+0
  3494  04D5  00C5               	movf	(??_temporizar+0)+0,w
  3495  04D6  0845               	movwf	(EEPROM_write@data)
  3496  04D7  00F7               	movf	(temporizar@adrs),w
  3497  04D8  0844               	addlw	01h
  3498  04D9  3E01               	fcall	_EEPROM_write
  3499  04DA  120A  118A  276F  120A  118A  	line	53
  3500                           	
  3501                           l2537:	
  3502  04DF                     ;tempo.c: 53:                 if(t->hor == 0)
  3503                           	movf	(temporizar@t),w
  3504  04DF  0879               	addlw	03h
  3505  04E0  3E03               	movwf	fsr0
  3506  04E1  0084               	bcf	status, 7	;select IRP bank0
  3507  04E2  1383               	movf	(indf),w
  3508  04E3  0800               	btfss	status,2
  3509  04E4  1D03               	goto	u1961
  3510  04E5  2CE7               	goto	u1960
  3511  04E6  2CE8               u1961:
  3512  04E7                     	goto	l233
  3513  04E7  2D23               u1960:
  3514  04E8                     	line	55
  3515                           	
  3516                           l2539:	
  3517  04E8                     ;tempo.c: 54:                 {;tempo.c: 55:                     (t->dia)++;
  3518                           	movf	(temporizar@t),w
  3519  04E8  0879               	addlw	04h
  3520  04E9  3E04               	movwf	fsr0
  3521  04EA  0084               	movlw	01h
  3522  04EB  3001               	addwf	indf,f
  3523  04EC  0780               	incf	fsr0,f
  3524  04ED  0A84               	skipnc
  3525  04EE  1803               	incf	indf,f
  3526  04EF  0A80               	line	56
  3527                           	
  3528                           l2541:	
  3529  04F0                     ;tempo.c: 56:                     EEPROM_write( adrs+2, t->dia % 256 );
  3530                           	movf	(temporizar@t),w
  3531  04F0  0879               	addlw	04h
  3532  04F1  3E04               	movwf	fsr0
  3533  04F2  0084               	movf	indf,w
  3534  04F3  0800               	bcf	status, 5	;RP0=0, select bank0
  3535  04F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3536  04F5  1303               	movwf	(??_temporizar+0)+0
  3537  04F6  00C5               	movf	(??_temporizar+0)+0,w
  3538  04F7  0845               	movwf	(EEPROM_write@data)
  3539  04F8  00F7               	movf	(temporizar@adrs),w
  3540  04F9  0844               	addlw	02h
  3541  04FA  3E02               	fcall	_EEPROM_write
  3542  04FB  120A  118A  276F  120A  118A  	line	57
  3543                           	
  3544                           l2543:	
  3545  0500                     ;tempo.c: 57:                     EEPROM_write( adrs+3, t->dia / 256 );
  3546                           	movlw	0
  3547  0500  3000               	movwf	(___awdiv@divisor)
  3548  0501  00F2               	movlw	01h
  3549  0502  3001               	movwf	((___awdiv@divisor))+1
  3550  0503  00F3               	movf	(temporizar@t),w
  3551  0504  0879               	addlw	04h
  3552  0505  3E04               	movwf	fsr0
  3553  0506  0084               	bcf	status, 7	;select IRP bank0
  3554  0507  1383               	movf	indf,w
  3555  0508  0800               	movwf	(___awdiv@dividend)
  3556  0509  00F4               	incf	fsr0,f
  3557  050A  0A84               	movf	indf,w
  3558  050B  0800               	movwf	(___awdiv@dividend+1)
  3559  050C  00F5               	fcall	___awdiv
  3560  050D  120A  118A  25A0  120A  118A  	movf	(0+(?___awdiv)),w
  3561  0512  0872               	bcf	status, 5	;RP0=0, select bank0
  3562  0513  1283               	bcf	status, 6	;RP1=0, select bank0
  3563  0514  1303               	movwf	(??_temporizar+0)+0
  3564  0515  00C5               	movf	(??_temporizar+0)+0,w
  3565  0516  0845               	movwf	(EEPROM_write@data)
  3566  0517  00F7               	movf	(temporizar@adrs),w
  3567  0518  0844               	addlw	03h
  3568  0519  3E03               	fcall	_EEPROM_write
  3569  051A  120A  118A  276F  120A  118A  	goto	l233
  3570  051F  2D23               	line	58
  3571                           ;tempo.c: 58:                 }
  3572                           	
  3573                           l232:	
  3574  0520                     	goto	l233
  3575  0520  2D23               	line	59
  3576                           ;tempo.c: 59:             }
  3577                           	
  3578                           l231:	
  3579  0521                     	goto	l233
  3580  0521  2D23               	line	60
  3581                           ;tempo.c: 60:         }
  3582                           	
  3583                           l230:	
  3584  0522                     	goto	l233
  3585  0522  2D23               	line	61
  3586                           ;tempo.c: 61:     }
  3587                           	
  3588                           l229:	
  3589  0523                     	line	62
  3590                           	
  3591                           l233:	
  3592  0523                     	return
  3593  0523  0008               	opt stack 0
  3594                           GLOBAL	__end_of_temporizar
  3595                           	__end_of_temporizar:
  3596  0524                     	signat	_temporizar,8313
  3597                           	global	_EEPROM_write
  3598                           
  3599 ;; *************** function _EEPROM_write *****************
  3600 ;; Defined at:
  3601 ;;		line 13 in file "eeprom.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  addr            1    wreg     unsigned char 
  3604 ;;  data            1    7[COMMON] unsigned char 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  addr            1    8[COMMON] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         1       0       0       0       0
  3617 ;;      Locals:         1       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0
  3619 ;;      Totals:         2       0       0       0       0
  3620 ;;Total ram usage:        2 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    2
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;;		_temporizar
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3631                           	file	"eeprom.c"
  3632                           	line	13
  3633                           global __ptext2
  3634                           __ptext2:	;psect for function _EEPROM_write
  3635  076F                     psect	text2
  3636                           	file	"eeprom.c"
  3637                           	line	13
  3638                           	global	__size_of_EEPROM_write
  3639                           	__size_of_EEPROM_write	equ	__end_of_EEPROM_write-_EEPROM_write
  3640  0019                     	
  3641                           _EEPROM_write:	
  3642  076F                     ;incstack = 0
  3643                           	opt	stack 4
  3644                           ; Regs used in _EEPROM_write: [wreg]
  3645                           ;EEPROM_write@addr stored from wreg
  3646                           	movwf	(EEPROM_write@addr)
  3647  076F  00F8               	line	15
  3648                           	
  3649                           l2421:	
  3650  0770                     ;eeprom.c: 13: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 14:
                                  {;eeprom.c: 15:     INTCONbits.GIE = 0;
  3651                           	bcf	(11),7	;volatile
  3652  0770  138B               	line	16
  3653                           	
  3654                           l2423:	
  3655  0771                     ;eeprom.c: 16:     EEADR = addr;
  3656                           	movf	(EEPROM_write@addr),w
  3657  0771  0878               	bcf	status, 5	;RP0=0, select bank2
  3658  0772  1283               	bsf	status, 6	;RP1=1, select bank2
  3659  0773  1703               	movwf	(269)^0100h	;volatile
  3660  0774  008D               	line	17
  3661                           ;eeprom.c: 17:     EEDAT = data;
  3662                           	movf	(EEPROM_write@data),w
  3663  0775  0877               	movwf	(268)^0100h	;volatile
  3664  0776  008C               	line	18
  3665                           	
  3666                           l2425:	
  3667  0777                     ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  3668                           	bsf	status, 5	;RP0=1, select bank3
  3669  0777  1683               	bsf	status, 6	;RP1=1, select bank3
  3670  0778  1703               	bcf	(396)^0180h,7	;volsfr
  3671  0779  138C               	line	19
  3672                           	
  3673                           l2427:	
  3674  077A                     ;eeprom.c: 19:     EECON1bits.WREN = 1;
  3675                           	bsf	(396)^0180h,2	;volsfr
  3676  077A  150C               	line	20
  3677                           ;eeprom.c: 20:     EECON2 = 0x55;
  3678                           	movlw	low(055h)
  3679  077B  3055               	movwf	(397)^0180h	;volsfr
  3680  077C  008D               	line	21
  3681                           ;eeprom.c: 21:     EECON2 = 0xAA;
  3682                           	movlw	low(0AAh)
  3683  077D  30AA               	movwf	(397)^0180h	;volsfr
  3684  077E  008D               	line	22
  3685                           	
  3686                           l2429:	
  3687  077F                     ;eeprom.c: 22:     EECON1bits.WR = 1;
  3688                           	bsf	(396)^0180h,1	;volsfr
  3689  077F  148C               	line	23
  3690                           ;eeprom.c: 23:     while( EECON1bits.WR )
  3691                           	goto	l344
  3692  0780  2F81               	
  3693                           l345:	
  3694  0781                     	line	24
  3695                           ;eeprom.c: 24:         ;
  3696                           	
  3697                           l344:	
  3698  0781                     	line	23
  3699                           ;eeprom.c: 23:     while( EECON1bits.WR )
  3700                           	btfsc	(396)^0180h,1	;volsfr
  3701  0781  188C               	goto	u1721
  3702  0782  2F84               	goto	u1720
  3703  0783  2F85               u1721:
  3704  0784                     	goto	l344
  3705  0784  2F81               u1720:
  3706  0785                     	
  3707                           l346:	
  3708  0785                     	line	25
  3709                           ;eeprom.c: 25:     EECON1bits.WREN = 0;
  3710                           	bcf	(396)^0180h,2	;volsfr
  3711  0785  110C               	line	26
  3712                           ;eeprom.c: 26:     INTCONbits.GIE = 1;
  3713                           	bsf	(11),7	;volatile
  3714  0786  178B               	line	27
  3715                           	
  3716                           l347:	
  3717  0787                     	return
  3718  0787  0008               	opt stack 0
  3719                           GLOBAL	__end_of_EEPROM_write
  3720                           	__end_of_EEPROM_write:
  3721  0788                     	signat	_EEPROM_write,8313
  3722                           	global	_teclado_init
  3723                           
  3724 ;; *************** function _teclado_init *****************
  3725 ;; Defined at:
  3726 ;;		line 11 in file "teclado.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         0       0       0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    3
  3747 ;; This function calls:
  3748 ;;		_botao_init
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3754                           	file	"teclado.c"
  3755                           	line	11
  3756                           global __ptext3
  3757                           __ptext3:	;psect for function _teclado_init
  3758  07B6                     psect	text3
  3759                           	file	"teclado.c"
  3760                           	line	11
  3761                           	global	__size_of_teclado_init
  3762                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  3763  0014                     	
  3764                           _teclado_init:	
  3765  07B6                     ;incstack = 0
  3766                           	opt	stack 4
  3767                           ; Regs used in _teclado_init: [wreg+status,2+status,0+pclath+cstack]
  3768                           	line	13
  3769                           	
  3770                           l2045:	
  3771  07B6                     ;teclado.c: 13:     ANSELH = 0x00;
  3772                           	bsf	status, 5	;RP0=1, select bank3
  3773  07B6  1683               	bsf	status, 6	;RP1=1, select bank3
  3774  07B7  1703               	clrf	(393)^0180h	;volatile
  3775  07B8  0189               	line	14
  3776                           	
  3777                           l2047:	
  3778  07B9                     ;teclado.c: 14:     TRISB = 0xF0;
  3779                           	movlw	low(0F0h)
  3780  07B9  30F0               	bsf	status, 5	;RP0=1, select bank1
  3781  07BA  1683               	bcf	status, 6	;RP1=0, select bank1
  3782  07BB  1303               	movwf	(134)^080h	;volatile
  3783  07BC  0086               	line	15
  3784                           	
  3785                           l2049:	
  3786  07BD                     ;teclado.c: 15:     OPTION_REGbits.nRBPU = 0;
  3787                           	bcf	(129)^080h,7	;volatile
  3788  07BD  1381               	line	16
  3789                           	
  3790                           l2051:	
  3791  07BE                     ;teclado.c: 16:     WPUB = 0xF0;
  3792                           	movlw	low(0F0h)
  3793  07BE  30F0               	movwf	(149)^080h	;volatile
  3794  07BF  0095               	line	17
  3795                           	
  3796                           l2053:	
  3797  07C0                     ;teclado.c: 17:     PORTB = 0xFF;
  3798                           	movlw	low(0FFh)
  3799  07C0  30FF               	bcf	status, 5	;RP0=0, select bank0
  3800  07C1  1283               	bcf	status, 6	;RP1=0, select bank0
  3801  07C2  1303               	movwf	(6)	;volatile
  3802  07C3  0086               	line	18
  3803                           	
  3804                           l2055:	
  3805  07C4                     ;teclado.c: 18:     botao_init();
  3806                           	fcall	_botao_init
  3807  07C4  120A  158A  277C  120A  118A  	line	19
  3808                           	
  3809                           l366:	
  3810  07C9                     	return
  3811  07C9  0008               	opt stack 0
  3812                           GLOBAL	__end_of_teclado_init
  3813                           	__end_of_teclado_init:
  3814  07CA                     	signat	_teclado_init,89
  3815                           	global	_botao_init
  3816                           
  3817 ;; *************** function _botao_init *****************
  3818 ;; Defined at:
  3819 ;;		line 11 in file "botao.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		None
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3833 ;;      Params:         0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    2
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;;		_teclado_init
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3848                           	file	"botao.c"
  3849                           	line	11
  3850                           global __ptext4
  3851                           __ptext4:	;psect for function _botao_init
  3852  0F7C                     psect	text4
  3853                           	file	"botao.c"
  3854                           	line	11
  3855                           	global	__size_of_botao_init
  3856                           	__size_of_botao_init	equ	__end_of_botao_init-_botao_init
  3857  0007                     	
  3858                           _botao_init:	
  3859  0F7C                     ;incstack = 0
  3860                           	opt	stack 4
  3861                           ; Regs used in _botao_init: []
  3862                           	line	13
  3863                           	
  3864                           l1897:	
  3865  0F7C                     ;botao.c: 13:     TRISAbits.TRISA0= 1;
  3866                           	bsf	status, 5	;RP0=1, select bank1
  3867  0F7C  1683               	bcf	status, 6	;RP1=0, select bank1
  3868  0F7D  1303               	bsf	(133)^080h,0	;volatile
  3869  0F7E  1405               	line	14
  3870                           ;botao.c: 14:     TRISAbits.TRISA1 = 1;
  3871                           	bsf	(133)^080h,1	;volatile
  3872  0F7F  1485               	line	15
  3873                           ;botao.c: 15:     TRISAbits.TRISA2 = 1;
  3874                           	bsf	(133)^080h,2	;volatile
  3875  0F80  1505               	line	16
  3876                           ;botao.c: 16:     TRISAbits.TRISA3 = 1;
  3877                           	bsf	(133)^080h,3	;volatile
  3878  0F81  1585               	line	17
  3879                           	
  3880                           l246:	
  3881  0F82                     	return
  3882  0F82  0008               	opt stack 0
  3883                           GLOBAL	__end_of_botao_init
  3884                           	__end_of_botao_init:
  3885  0F83                     	signat	_botao_init,89
  3886                           	global	_resetTemporizador
  3887                           
  3888 ;; *************** function _resetTemporizador *****************
  3889 ;; Defined at:
  3890 ;;		line 70 in file "tempo.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  t               1    wreg     PTR struct temporizadorT
  3893 ;;		 -> tempo(24), 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  t               1    2[COMMON] PTR struct temporizadorT
  3896 ;;		 -> tempo(24), 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         1       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0
  3909 ;;      Totals:         1       0       0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    2
  3913 ;; This function calls:
  3914 ;;		Nothing
  3915 ;; This function is called by:
  3916 ;;		_main
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3920                           	file	"tempo.c"
  3921                           	line	70
  3922                           global __ptext5
  3923                           __ptext5:	;psect for function _resetTemporizador
  3924  0788                     psect	text5
  3925                           	file	"tempo.c"
  3926                           	line	70
  3927                           	global	__size_of_resetTemporizador
  3928                           	__size_of_resetTemporizador	equ	__end_of_resetTemporizador-_resetTemporizador
  3929  0017                     	
  3930                           _resetTemporizador:	
  3931  0788                     ;incstack = 0
  3932                           	opt	stack 5
  3933                           ; Regs used in _resetTemporizador: [wreg-fsr0h+status,2+status,0]
  3934                           ;resetTemporizador@t stored from wreg
  3935                           	movwf	(resetTemporizador@t)
  3936  0788  00F2               	line	72
  3937                           	
  3938                           l2073:	
  3939  0789                     ;tempo.c: 70: void resetTemporizador( struct temporizadorT * t );tempo.c: 71: {;tempo.c:
                                  72:     t->hab = 0;
  3940                           	movf	(resetTemporizador@t),w
  3941  0789  0872               	movwf	fsr0
  3942  078A  0084               	bcf	status, 7	;select IRP bank0
  3943  078B  1383               	clrf	indf
  3944  078C  0180               	line	73
  3945                           ;tempo.c: 73:     t->seg = 0;
  3946                           	incf	(resetTemporizador@t),w
  3947  078D  0A72               	movwf	fsr0
  3948  078E  0084               	clrf	indf
  3949  078F  0180               	line	74
  3950                           	
  3951                           l2075:	
  3952  0790                     ;tempo.c: 74:     t->min = 0;
  3953                           	movf	(resetTemporizador@t),w
  3954  0790  0872               	addlw	02h
  3955  0791  3E02               	movwf	fsr0
  3956  0792  0084               	clrf	indf
  3957  0793  0180               	line	75
  3958                           	
  3959                           l2077:	
  3960  0794                     ;tempo.c: 75:     t->hor = 0;
  3961                           	movf	(resetTemporizador@t),w
  3962  0794  0872               	addlw	03h
  3963  0795  3E03               	movwf	fsr0
  3964  0796  0084               	clrf	indf
  3965  0797  0180               	line	76
  3966                           	
  3967                           l2079:	
  3968  0798                     ;tempo.c: 76:     t->dia = 0;
  3969                           	movf	(resetTemporizador@t),w
  3970  0798  0872               	addlw	04h
  3971  0799  3E04               	movwf	fsr0
  3972  079A  0084               	clrf	indf
  3973  079B  0180               	incf	fsr0,f
  3974  079C  0A84               	clrf	indf
  3975  079D  0180               	line	77
  3976                           	
  3977                           l239:	
  3978  079E                     	return
  3979  079E  0008               	opt stack 0
  3980                           GLOBAL	__end_of_resetTemporizador
  3981                           	__end_of_resetTemporizador:
  3982  079F                     	signat	_resetTemporizador,4217
  3983                           	global	_lcd_print
  3984                           
  3985 ;; *************** function _lcd_print *****************
  3986 ;; Defined at:
  3987 ;;		line 158 in file "lcd.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;  lin             1    wreg     unsigned char 
  3990 ;;  col             1    8[COMMON] unsigned char 
  3991 ;;  str             1    9[COMMON] PTR const unsigned char 
  3992 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  3993 ;;		 -> STR_4(2), STR_3(2), STR_2(17), STR_1(17), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  lin             1    2[BANK0 ] unsigned char 
  3996 ;;  pos             1    1[BANK0 ] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  1    wreg      void 
  3999 ;; Registers used:
  4000 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4006 ;;      Params:         2       0       0       0       0
  4007 ;;      Locals:         0       2       0       0       0
  4008 ;;      Temps:          0       1       0       0       0
  4009 ;;      Totals:         2       3       0       0       0
  4010 ;;Total ram usage:        5 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:    4
  4013 ;; This function calls:
  4014 ;;		_lcd_dataReg
  4015 ;;		_lcd_lincol
  4016 ;; This function is called by:
  4017 ;;		_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4021                           	file	"lcd.c"
  4022                           	line	158
  4023                           global __ptext6
  4024                           __ptext6:	;psect for function _lcd_print
  4025  06B5                     psect	text6
  4026                           	file	"lcd.c"
  4027                           	line	158
  4028                           	global	__size_of_lcd_print
  4029                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  4030  0037                     	
  4031                           _lcd_print:	
  4032  06B5                     ;incstack = 0
  4033                           	opt	stack 3
  4034                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4035                           ;lcd_print@lin stored from wreg
  4036                           	bcf	status, 5	;RP0=0, select bank0
  4037  06B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4038  06B6  1303               	movwf	(lcd_print@lin)
  4039  06B7  00C2               	line	160
  4040                           	
  4041                           l2513:	
  4042  06B8                     ;lcd.c: 158: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 159: {;lcd.c: 160:     char pos = col;
  4043                           	movf	(lcd_print@col),w
  4044  06B8  0878               	movwf	(??_lcd_print+0)+0
  4045  06B9  00C0               	movf	(??_lcd_print+0)+0,w
  4046  06BA  0840               	movwf	(lcd_print@pos)
  4047  06BB  00C1               	line	161
  4048                           	
  4049                           l2515:	
  4050  06BC                     ;lcd.c: 161:     lcd_lincol( lin, col );
  4051                           	movf	(lcd_print@col),w
  4052  06BC  0878               	movwf	(??_lcd_print+0)+0
  4053  06BD  00C0               	movf	(??_lcd_print+0)+0,w
  4054  06BE  0840               	movwf	(lcd_lincol@col)
  4055  06BF  00F5               	movf	(lcd_print@lin),w
  4056  06C0  0842               	fcall	_lcd_lincol
  4057  06C1  120A  118A  27DE  120A  118A  	line	163
  4058                           ;lcd.c: 163:     while( *str )
  4059                           	goto	l2523
  4060  06C6  2EDE               	
  4061                           l198:	
  4062  06C7                     	line	165
  4063                           	
  4064                           l2517:	
  4065  06C7                     ;lcd.c: 164:     {;lcd.c: 165:         lcd_dataReg( *str );
  4066                           	movf	(lcd_print@str),w
  4067  06C7  0879               	movwf	fsr0
  4068  06C8  0084               	fcall	stringdir
  4069  06C9  120A  118A  2744  120A  118A  	fcall	_lcd_dataReg
  4070  06CE  120A  118A  26EC  120A  118A  	line	166
  4071                           	
  4072                           l2519:	
  4073  06D3                     ;lcd.c: 166:         ++str;
  4074                           	movlw	low(01h)
  4075  06D3  3001               	bcf	status, 5	;RP0=0, select bank0
  4076  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  4077  06D5  1303               	movwf	(??_lcd_print+0)+0
  4078  06D6  00C0               	movf	(??_lcd_print+0)+0,w
  4079  06D7  0840               	addwf	(lcd_print@str),f
  4080  06D8  07F9               	line	167
  4081                           	
  4082                           l2521:	
  4083  06D9                     ;lcd.c: 167:         ++pos;
  4084                           	movlw	low(01h)
  4085  06D9  3001               	movwf	(??_lcd_print+0)+0
  4086  06DA  00C0               	movf	(??_lcd_print+0)+0,w
  4087  06DB  0840               	addwf	(lcd_print@pos),f
  4088  06DC  07C1               	goto	l2523
  4089  06DD  2EDE               	line	168
  4090                           ;lcd.c: 168:     }
  4091                           	
  4092                           l197:	
  4093  06DE                     	line	163
  4094                           	
  4095                           l2523:	
  4096  06DE                     ;lcd.c: 163:     while( *str )
  4097                           	movf	(lcd_print@str),w
  4098  06DE  0879               	movwf	fsr0
  4099  06DF  0084               	fcall	stringdir
  4100  06E0  120A  118A  2744  120A  118A  	xorlw	0
  4101  06E5  3A00               	skipz
  4102  06E6  1D03               	goto	u1921
  4103  06E7  2EE9               	goto	u1920
  4104  06E8  2EEA               u1921:
  4105  06E9                     	goto	l2517
  4106  06E9  2EC7               u1920:
  4107  06EA                     	goto	l200
  4108  06EA  2EEB               	
  4109                           l199:	
  4110  06EB                     	line	169
  4111                           	
  4112                           l200:	
  4113  06EB                     	return
  4114  06EB  0008               	opt stack 0
  4115                           GLOBAL	__end_of_lcd_print
  4116                           	__end_of_lcd_print:
  4117  06EC                     	signat	_lcd_print,12409
  4118                           	global	_lcd_num
  4119                           
  4120 ;; *************** function _lcd_num *****************
  4121 ;; Defined at:
  4122 ;;		line 180 in file "lcd.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  lin             1    wreg     unsigned char 
  4125 ;;  col             1    4[BANK0 ] unsigned char 
  4126 ;;  num             2    5[BANK0 ] int 
  4127 ;;  tam             1    7[BANK0 ] unsigned char 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;  lin             1   11[BANK0 ] unsigned char 
  4130 ;;  div             2   14[BANK0 ] int 
  4131 ;;  sinal           1   13[BANK0 ] unsigned char 
  4132 ;;  size            1   12[BANK0 ] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       4       0       0       0
  4143 ;;      Locals:         0       5       0       0       0
  4144 ;;      Temps:          0       3       0       0       0
  4145 ;;      Totals:         0      12       0       0       0
  4146 ;;Total ram usage:       12 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    4
  4149 ;; This function calls:
  4150 ;;		___awdiv
  4151 ;;		___awmod
  4152 ;;		_lcd_dataReg
  4153 ;;		_lcd_lincol
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4159                           	line	180
  4160                           global __ptext7
  4161                           __ptext7:	;psect for function _lcd_num
  4162  0358                     psect	text7
  4163                           	file	"lcd.c"
  4164                           	line	180
  4165                           	global	__size_of_lcd_num
  4166                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  4167  00EE                     	
  4168                           _lcd_num:	
  4169  0358                     ;incstack = 0
  4170                           	opt	stack 3
  4171                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4172                           ;lcd_num@lin stored from wreg
  4173                           	bcf	status, 5	;RP0=0, select bank0
  4174  0358  1283               	bcf	status, 6	;RP1=0, select bank0
  4175  0359  1303               	movwf	(lcd_num@lin)
  4176  035A  00CB               	line	187
  4177                           	
  4178                           l2545:	
  4179  035B                     ;lcd.c: 180: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 181:            
                                          int num, unsigned char tam );lcd.c: 182: {;lcd.c: 183:     int div;;lcd.c: 184:
                                      unsigned char size;;lcd.c: 185:     char sinal;;lcd.c: 187:     sinal = num < 0;
  4180                           	btfsc	(lcd_num@num+1),7
  4181  035B  1BC6               	goto	u1971
  4182  035C  2B5E               	goto	u1970
  4183  035D  2B60               u1971:
  4184  035E                     	movlw	1
  4185  035E  3001               	goto	u1980
  4186  035F  2B61               u1970:
  4187  0360                     	movlw	0
  4188  0360  3000               u1980:
  4189  0361                     	movwf	(??_lcd_num+0)+0
  4190  0361  00C8               	movf	(??_lcd_num+0)+0,w
  4191  0362  0848               	movwf	(lcd_num@sinal)
  4192  0363  00CD               	line	188
  4193                           	
  4194                           l2547:	
  4195  0364                     ;lcd.c: 188:     if( sinal )
  4196                           	movf	((lcd_num@sinal)),w
  4197  0364  084D               	btfsc	status,2
  4198  0365  1903               	goto	u1991
  4199  0366  2B68               	goto	u1990
  4200  0367  2B69               u1991:
  4201  0368                     	goto	l2551
  4202  0368  2B6F               u1990:
  4203  0369                     	line	189
  4204                           	
  4205                           l2549:	
  4206  0369                     ;lcd.c: 189:         num = (~num) + 1;
  4207                           	comf	(lcd_num@num),f
  4208  0369  09C5               	comf	(lcd_num@num+1),f
  4209  036A  09C6               	incf	(lcd_num@num),f
  4210  036B  0AC5               	skipnz
  4211  036C  1903               	incf	(lcd_num@num+1),f
  4212  036D  0AC6               	goto	l2551
  4213  036E  2B6F               	
  4214                           l203:	
  4215  036F                     	line	191
  4216                           	
  4217                           l2551:	
  4218  036F                     ;lcd.c: 191:     lcd_lincol(lin, col);
  4219                           	movf	(lcd_num@col),w
  4220  036F  0844               	movwf	(??_lcd_num+0)+0
  4221  0370  00C8               	movf	(??_lcd_num+0)+0,w
  4222  0371  0848               	movwf	(lcd_lincol@col)
  4223  0372  00F5               	movf	(lcd_num@lin),w
  4224  0373  084B               	fcall	_lcd_lincol
  4225  0374  120A  118A  27DE  120A  118A  	line	193
  4226                           	
  4227                           l2553:	
  4228  0379                     ;lcd.c: 193:     div=10000;
  4229                           	movlw	010h
  4230  0379  3010               	bcf	status, 5	;RP0=0, select bank0
  4231  037A  1283               	bcf	status, 6	;RP1=0, select bank0
  4232  037B  1303               	movwf	(lcd_num@div)
  4233  037C  00CE               	movlw	027h
  4234  037D  3027               	movwf	((lcd_num@div))+1
  4235  037E  00CF               	line	194
  4236                           	
  4237                           l2555:	
  4238  037F                     ;lcd.c: 194:     size = 5;
  4239                           	movlw	low(05h)
  4240  037F  3005               	movwf	(??_lcd_num+0)+0
  4241  0380  00C8               	movf	(??_lcd_num+0)+0,w
  4242  0381  0848               	movwf	(lcd_num@size)
  4243  0382  00CC               	line	195
  4244                           ;lcd.c: 195:     while( div >= 1 )
  4245                           	goto	l2563
  4246  0383  2BB3               	
  4247                           l205:	
  4248  0384                     	line	197
  4249                           	
  4250                           l2557:	
  4251  0384                     ;lcd.c: 196:     {;lcd.c: 197:         if( num/div == 0 )
  4252                           	bcf	status, 5	;RP0=0, select bank0
  4253  0384  1283               	bcf	status, 6	;RP1=0, select bank0
  4254  0385  1303               	movf	(lcd_num@div+1),w
  4255  0386  084F               	movwf	(___awdiv@divisor+1)
  4256  0387  00F3               	movf	(lcd_num@div),w
  4257  0388  084E               	movwf	(___awdiv@divisor)
  4258  0389  00F2               	movf	(lcd_num@num+1),w
  4259  038A  0846               	movwf	(___awdiv@dividend+1)
  4260  038B  00F5               	movf	(lcd_num@num),w
  4261  038C  0845               	movwf	(___awdiv@dividend)
  4262  038D  00F4               	fcall	___awdiv
  4263  038E  120A  118A  25A0  120A  118A  	movf	((0+(?___awdiv))),w
  4264  0393  0872               iorwf	((1+(?___awdiv))),w
  4265  0394  0473               	btfss	status,2
  4266  0395  1D03               	goto	u2001
  4267  0396  2B98               	goto	u2000
  4268  0397  2B99               u2001:
  4269  0398                     	goto	l2569
  4270  0398  2BCD               u2000:
  4271  0399                     	line	198
  4272                           	
  4273                           l2559:	
  4274  0399                     ;lcd.c: 198:             --size;
  4275                           	movlw	01h
  4276  0399  3001               	bcf	status, 5	;RP0=0, select bank0
  4277  039A  1283               	bcf	status, 6	;RP1=0, select bank0
  4278  039B  1303               	subwf	(lcd_num@size),f
  4279  039C  02CC               	goto	l2561
  4280  039D  2B9F               	line	199
  4281                           ;lcd.c: 199:         else
  4282                           	
  4283                           l206:	
  4284  039E                     	line	200
  4285                           ;lcd.c: 200:             break;
  4286                           	goto	l2569
  4287  039E  2BCD               	
  4288                           l207:	
  4289  039F                     	line	201
  4290                           	
  4291                           l2561:	
  4292  039F                     ;lcd.c: 201:         div/=10;
  4293                           	movlw	0Ah
  4294  039F  300A               	movwf	(___awdiv@divisor)
  4295  03A0  00F2               	movlw	0
  4296  03A1  3000               	movwf	((___awdiv@divisor))+1
  4297  03A2  00F3               	movf	(lcd_num@div+1),w
  4298  03A3  084F               	movwf	(___awdiv@dividend+1)
  4299  03A4  00F5               	movf	(lcd_num@div),w
  4300  03A5  084E               	movwf	(___awdiv@dividend)
  4301  03A6  00F4               	fcall	___awdiv
  4302  03A7  120A  118A  25A0  120A  118A  	movf	(1+(?___awdiv)),w
  4303  03AC  0873               	bcf	status, 5	;RP0=0, select bank0
  4304  03AD  1283               	bcf	status, 6	;RP1=0, select bank0
  4305  03AE  1303               	movwf	(lcd_num@div+1)
  4306  03AF  00CF               	movf	(0+(?___awdiv)),w
  4307  03B0  0872               	movwf	(lcd_num@div)
  4308  03B1  00CE               	goto	l2563
  4309  03B2  2BB3               	line	202
  4310                           ;lcd.c: 202:     }
  4311                           	
  4312                           l204:	
  4313  03B3                     	line	195
  4314                           	
  4315                           l2563:	
  4316  03B3                     ;lcd.c: 195:     while( div >= 1 )
  4317                           	movf	(lcd_num@div+1),w
  4318  03B3  084F               	xorlw	80h
  4319  03B4  3A80               	movwf	btemp+1
  4320  03B5  00FF               	movlw	(0)^80h
  4321  03B6  3080               	subwf	btemp+1,w
  4322  03B7  027F               	skipz
  4323  03B8  1D03               	goto	u2015
  4324  03B9  2BBC               	movlw	01h
  4325  03BA  3001               	subwf	(lcd_num@div),w
  4326  03BB  024E               u2015:
  4327  03BC                     
  4328                           	skipnc
  4329  03BC  1803               	goto	u2011
  4330  03BD  2BBF               	goto	u2010
  4331  03BE  2BC0               u2011:
  4332  03BF                     	goto	l2557
  4333  03BF  2B84               u2010:
  4334  03C0                     	goto	l2569
  4335  03C0  2BCD               	
  4336                           l208:	
  4337  03C1                     	line	204
  4338                           ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  4339                           	goto	l2569
  4340  03C1  2BCD               	
  4341                           l210:	
  4342  03C2                     	line	207
  4343                           	
  4344                           l2565:	
  4345  03C2                     ;lcd.c: 205:     {;lcd.c: 207:         lcd_dataReg('0');
  4346                           	movlw	low(030h)
  4347  03C2  3030               	fcall	_lcd_dataReg
  4348  03C3  120A  118A  26EC  120A  118A  	line	208
  4349                           	
  4350                           l2567:	
  4351  03C8                     ;lcd.c: 208:         --tam;
  4352                           	movlw	01h
  4353  03C8  3001               	bcf	status, 5	;RP0=0, select bank0
  4354  03C9  1283               	bcf	status, 6	;RP1=0, select bank0
  4355  03CA  1303               	subwf	(lcd_num@tam),f
  4356  03CB  02C7               	goto	l2569
  4357  03CC  2BCD               	line	209
  4358                           ;lcd.c: 209:     }
  4359                           	
  4360                           l209:	
  4361  03CD                     	line	204
  4362                           	
  4363                           l2569:	
  4364  03CD                     ;lcd.c: 204:     while( tam > (size+sinal) && tam > 1 )
  4365                           	bcf	status, 5	;RP0=0, select bank0
  4366  03CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4367  03CE  1303               	movf	(lcd_num@size),w
  4368  03CF  084C               	addwf	(lcd_num@sinal),w
  4369  03D0  074D               	movwf	(??_lcd_num+0)+0
  4370  03D1  00C8               	clrf	(??_lcd_num+0)+0+1
  4371  03D2  01C9               	rlf	1+(??_lcd_num+0)+0,f
  4372  03D3  0DC9               	
  4373                           	movf	1+(??_lcd_num+0)+0,w
  4374  03D4  0849               	xorlw	80h
  4375  03D5  3A80               	movwf	(??_lcd_num+2)+0
  4376  03D6  00CA               	movlw	80h
  4377  03D7  3080               	subwf	(??_lcd_num+2)+0,w
  4378  03D8  024A               	skipz
  4379  03D9  1D03               	goto	u2025
  4380  03DA  2BDD               	movf	(lcd_num@tam),w
  4381  03DB  0847               	subwf	0+(??_lcd_num+0)+0,w
  4382  03DC  0248               u2025:
  4383  03DD                     
  4384                           	skipnc
  4385  03DD  1803               	goto	u2021
  4386  03DE  2BE0               	goto	u2020
  4387  03DF  2BE1               u2021:
  4388  03E0                     	goto	l2573
  4389  03E0  2BEB               u2020:
  4390  03E1                     	
  4391                           l2571:	
  4392  03E1                     	movlw	low(02h)
  4393  03E1  3002               	bcf	status, 5	;RP0=0, select bank0
  4394  03E2  1283               	bcf	status, 6	;RP1=0, select bank0
  4395  03E3  1303               	subwf	(lcd_num@tam),w
  4396  03E4  0247               	skipnc
  4397  03E5  1803               	goto	u2031
  4398  03E6  2BE8               	goto	u2030
  4399  03E7  2BE9               u2031:
  4400  03E8                     	goto	l2565
  4401  03E8  2BC2               u2030:
  4402  03E9                     	goto	l2573
  4403  03E9  2BEB               	
  4404                           l212:	
  4405  03EA                     	goto	l2573
  4406  03EA  2BEB               	
  4407                           l213:	
  4408  03EB                     	line	211
  4409                           	
  4410                           l2573:	
  4411  03EB                     ;lcd.c: 211:     if( sinal )
  4412                           	bcf	status, 5	;RP0=0, select bank0
  4413  03EB  1283               	bcf	status, 6	;RP1=0, select bank0
  4414  03EC  1303               	movf	((lcd_num@sinal)),w
  4415  03ED  084D               	btfsc	status,2
  4416  03EE  1903               	goto	u2041
  4417  03EF  2BF1               	goto	u2040
  4418  03F0  2BF2               u2041:
  4419  03F1                     	goto	l215
  4420  03F1  2BF9               u2040:
  4421  03F2                     	line	212
  4422                           	
  4423                           l2575:	
  4424  03F2                     ;lcd.c: 212:         lcd_dataReg('-');
  4425                           	movlw	low(02Dh)
  4426  03F2  302D               	fcall	_lcd_dataReg
  4427  03F3  120A  118A  26EC  120A  118A  	goto	l215
  4428  03F8  2BF9               	
  4429                           l214:	
  4430  03F9                     	line	214
  4431                           ;lcd.c: 214:     do
  4432                           	
  4433                           l215:	
  4434  03F9                     	line	216
  4435                           ;lcd.c: 215:     {;lcd.c: 216:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  4436                           	bcf	status, 5	;RP0=0, select bank0
  4437  03F9  1283               	bcf	status, 6	;RP1=0, select bank0
  4438  03FA  1303               	movf	(lcd_num@div+1),w
  4439  03FB  084F               	movwf	(___awdiv@divisor+1)
  4440  03FC  00F3               	movf	(lcd_num@div),w
  4441  03FD  084E               	movwf	(___awdiv@divisor)
  4442  03FE  00F2               	movf	(lcd_num@num+1),w
  4443  03FF  0846               	movwf	(___awdiv@dividend+1)
  4444  0400  00F5               	movf	(lcd_num@num),w
  4445  0401  0845               	movwf	(___awdiv@dividend)
  4446  0402  00F4               	fcall	___awdiv
  4447  0403  120A  118A  25A0  120A  118A  	movf	(0+(?___awdiv)),w
  4448  0408  0872               	addlw	030h
  4449  0409  3E30               	fcall	_lcd_dataReg
  4450  040A  120A  118A  26EC  120A  118A  	line	217
  4451                           ;lcd.c: 217:         num = num % div;
  4452                           	bcf	status, 5	;RP0=0, select bank0
  4453  040F  1283               	bcf	status, 6	;RP1=0, select bank0
  4454  0410  1303               	movf	(lcd_num@div+1),w
  4455  0411  084F               	movwf	(___awmod@divisor+1)
  4456  0412  00F3               	movf	(lcd_num@div),w
  4457  0413  084E               	movwf	(___awmod@divisor)
  4458  0414  00F2               	movf	(lcd_num@num+1),w
  4459  0415  0846               	movwf	(___awmod@dividend+1)
  4460  0416  00F5               	movf	(lcd_num@num),w
  4461  0417  0845               	movwf	(___awmod@dividend)
  4462  0418  00F4               	fcall	___awmod
  4463  0419  120A  118A  2613  120A  118A  	movf	(1+(?___awmod)),w
  4464  041E  0873               	bcf	status, 5	;RP0=0, select bank0
  4465  041F  1283               	bcf	status, 6	;RP1=0, select bank0
  4466  0420  1303               	movwf	(lcd_num@num+1)
  4467  0421  00C6               	movf	(0+(?___awmod)),w
  4468  0422  0872               	movwf	(lcd_num@num)
  4469  0423  00C5               	line	218
  4470                           ;lcd.c: 218:         div/=10;
  4471                           	movlw	0Ah
  4472  0424  300A               	movwf	(___awdiv@divisor)
  4473  0425  00F2               	movlw	0
  4474  0426  3000               	movwf	((___awdiv@divisor))+1
  4475  0427  00F3               	movf	(lcd_num@div+1),w
  4476  0428  084F               	movwf	(___awdiv@dividend+1)
  4477  0429  00F5               	movf	(lcd_num@div),w
  4478  042A  084E               	movwf	(___awdiv@dividend)
  4479  042B  00F4               	fcall	___awdiv
  4480  042C  120A  118A  25A0  120A  118A  	movf	(1+(?___awdiv)),w
  4481  0431  0873               	bcf	status, 5	;RP0=0, select bank0
  4482  0432  1283               	bcf	status, 6	;RP1=0, select bank0
  4483  0433  1303               	movwf	(lcd_num@div+1)
  4484  0434  00CF               	movf	(0+(?___awdiv)),w
  4485  0435  0872               	movwf	(lcd_num@div)
  4486  0436  00CE               	line	219
  4487                           	
  4488                           l2577:	
  4489  0437                     ;lcd.c: 219:     }
  4490                           	movf	(lcd_num@div+1),w
  4491  0437  084F               	xorlw	80h
  4492  0438  3A80               	movwf	btemp+1
  4493  0439  00FF               	movlw	(0)^80h
  4494  043A  3080               	subwf	btemp+1,w
  4495  043B  027F               	skipz
  4496  043C  1D03               	goto	u2055
  4497  043D  2C40               	movlw	01h
  4498  043E  3001               	subwf	(lcd_num@div),w
  4499  043F  024E               u2055:
  4500  0440                     
  4501                           	skipnc
  4502  0440  1803               	goto	u2051
  4503  0441  2C43               	goto	u2050
  4504  0442  2C44               u2051:
  4505  0443                     	goto	l215
  4506  0443  2BF9               u2050:
  4507  0444                     	goto	l217
  4508  0444  2C45               	
  4509                           l216:	
  4510  0445                     	line	221
  4511                           	
  4512                           l217:	
  4513  0445                     	return
  4514  0445  0008               	opt stack 0
  4515                           GLOBAL	__end_of_lcd_num
  4516                           	__end_of_lcd_num:
  4517  0446                     	signat	_lcd_num,16505
  4518                           	global	_lcd_lincol
  4519                           
  4520 ;; *************** function _lcd_lincol *****************
  4521 ;; Defined at:
  4522 ;;		line 113 in file "lcd.c"
  4523 ;; Parameters:    Size  Location     Type
  4524 ;;  lin             1    wreg     unsigned char 
  4525 ;;  col             1    5[COMMON] unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  lin             1    7[COMMON] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, pclath, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         1       0       0       0       0
  4538 ;;      Locals:         1       0       0       0       0
  4539 ;;      Temps:          1       0       0       0       0
  4540 ;;      Totals:         3       0       0       0       0
  4541 ;;Total ram usage:        3 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; Hardware stack levels required when called:    3
  4544 ;; This function calls:
  4545 ;;		_lcd_instReg
  4546 ;; This function is called by:
  4547 ;;		_lcd_print
  4548 ;;		_lcd_num
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4552                           	line	113
  4553                           global __ptext8
  4554                           __ptext8:	;psect for function _lcd_lincol
  4555  07DE                     psect	text8
  4556                           	file	"lcd.c"
  4557                           	line	113
  4558                           	global	__size_of_lcd_lincol
  4559                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  4560  0013                     	
  4561                           _lcd_lincol:	
  4562  07DE                     ;incstack = 0
  4563                           	opt	stack 3
  4564                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  4565                           ;lcd_lincol@lin stored from wreg
  4566                           	movwf	(lcd_lincol@lin)
  4567  07DE  00F7               	line	115
  4568                           	
  4569                           l1933:	
  4570  07DF                     ;lcd.c: 113: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 114: {;lcd.c:
                                  115:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  4571                           	movf	(lcd_lincol@lin),w
  4572  07DF  0877               	movwf	(??_lcd_lincol+0)+0
  4573  07E0  00F6               	movlw	06h
  4574  07E1  3006               u1105:
  4575  07E2                     	clrc
  4576  07E2  1003               	rlf	(??_lcd_lincol+0)+0,f
  4577  07E3  0DF6               	addlw	-1
  4578  07E4  3EFF               	skipz
  4579  07E5  1D03               	goto	u1105
  4580  07E6  2FE2               	movf	(lcd_lincol@col),w
  4581  07E7  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  4582  07E8  0776               	andlw	07Fh
  4583  07E9  397F               	addlw	080h
  4584  07EA  3E80               	fcall	_lcd_instReg
  4585  07EB  120A  118A  2524  120A  118A  	line	116
  4586                           	
  4587                           l188:	
  4588  07F0                     	return
  4589  07F0  0008               	opt stack 0
  4590                           GLOBAL	__end_of_lcd_lincol
  4591                           	__end_of_lcd_lincol:
  4592  07F1                     	signat	_lcd_lincol,8313
  4593                           	global	_lcd_dataReg
  4594                           
  4595 ;; *************** function _lcd_dataReg *****************
  4596 ;; Defined at:
  4597 ;;		line 95 in file "lcd.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  d               1    wreg     unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  d               1    4[COMMON] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4611 ;;      Params:         0       0       0       0       0
  4612 ;;      Locals:         1       0       0       0       0
  4613 ;;      Temps:          2       0       0       0       0
  4614 ;;      Totals:         3       0       0       0       0
  4615 ;;Total ram usage:        3 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    2
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_lcd_print
  4622 ;;		_lcd_num
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4626                           	line	95
  4627                           global __ptext9
  4628                           __ptext9:	;psect for function _lcd_dataReg
  4629  06EC                     psect	text9
  4630                           	file	"lcd.c"
  4631                           	line	95
  4632                           	global	__size_of_lcd_dataReg
  4633                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  4634  002C                     	
  4635                           _lcd_dataReg:	
  4636  06EC                     ;incstack = 0
  4637                           	opt	stack 4
  4638                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  4639                           ;lcd_dataReg@d stored from wreg
  4640                           	movwf	(lcd_dataReg@d)
  4641  06EC  00F4               	line	97
  4642                           	
  4643                           l1915:	
  4644  06ED                     ;lcd.c: 95: void lcd_dataReg( unsigned char d );lcd.c: 96: {;lcd.c: 97:     PORTDbits.RD
                                 4 = 1;
  4645                           	bcf	status, 5	;RP0=0, select bank0
  4646  06ED  1283               	bcf	status, 6	;RP1=0, select bank0
  4647  06EE  1303               	bsf	(8),4	;volatile
  4648  06EF  1608               	line	98
  4649                           	
  4650                           l1917:	
  4651  06F0                     ;lcd.c: 98:     PORTD = ((PORTD & 0xF0)|(d >> 4&0x0F));
  4652                           	movf	(lcd_dataReg@d),w
  4653  06F0  0874               	movwf	(??_lcd_dataReg+0)+0
  4654  06F1  00F2               	movlw	04h
  4655  06F2  3004               u1095:
  4656  06F3                     	clrc
  4657  06F3  1003               	rrf	(??_lcd_dataReg+0)+0,f
  4658  06F4  0CF2               	addlw	-1
  4659  06F5  3EFF               	skipz
  4660  06F6  1D03               	goto	u1095
  4661  06F7  2EF3               	movlw	low(0Fh)
  4662  06F8  300F               	andwf	0+(??_lcd_dataReg+0)+0,w
  4663  06F9  0572               	movwf	(??_lcd_dataReg+1)+0
  4664  06FA  00F3               	movf	(8),w	;volatile
  4665  06FB  0808               	andlw	0F0h
  4666  06FC  39F0               	iorwf	0+(??_lcd_dataReg+1)+0,w
  4667  06FD  0473               	movwf	(8)	;volatile
  4668  06FE  0088               	line	99
  4669                           	
  4670                           l1919:	
  4671  06FF                     ;lcd.c: 99:     PORTDbits.RD5 = 0;
  4672                           	bcf	(8),5	;volatile
  4673  06FF  1288               	line	100
  4674                           	
  4675                           l1921:	
  4676  0700                     ;lcd.c: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4677                           	opt asmopt_push
  4678                           opt asmopt_off
  4679                           	movlw	13
  4680  0700  300D               movwf	((??_lcd_dataReg+0)+0),f
  4681  0701  00F2               	u2127:
  4682  0702                     decfsz	(??_lcd_dataReg+0)+0,f
  4683  0702  0BF2               	goto	u2127
  4684  0703  2F02               opt asmopt_pop
  4685                           
  4686                           	line	101
  4687                           	
  4688                           l1923:	
  4689  0704                     ;lcd.c: 101:     PORTDbits.RD5 = 1;
  4690                           	bcf	status, 5	;RP0=0, select bank0
  4691  0704  1283               	bcf	status, 6	;RP1=0, select bank0
  4692  0705  1303               	bsf	(8),5	;volatile
  4693  0706  1688               	line	103
  4694                           	
  4695                           l1925:	
  4696  0707                     ;lcd.c: 103:     PORTDbits.RD4 = 1;
  4697                           	bsf	(8),4	;volatile
  4698  0707  1608               	line	104
  4699                           	
  4700                           l1927:	
  4701  0708                     ;lcd.c: 104:     PORTD = ((PORTD & 0xF0)|(d&0x0F));
  4702                           	movlw	low(0Fh)
  4703  0708  300F               	andwf	(lcd_dataReg@d),w
  4704  0709  0574               	movwf	(??_lcd_dataReg+0)+0
  4705  070A  00F2               	movf	(8),w	;volatile
  4706  070B  0808               	andlw	0F0h
  4707  070C  39F0               	iorwf	0+(??_lcd_dataReg+0)+0,w
  4708  070D  0472               	movwf	(8)	;volatile
  4709  070E  0088               	line	105
  4710                           	
  4711                           l1929:	
  4712  070F                     ;lcd.c: 105:     PORTDbits.RD5 = 0;
  4713                           	bcf	(8),5	;volatile
  4714  070F  1288               	line	106
  4715                           ;lcd.c: 106:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4716                           	opt asmopt_push
  4717                           opt asmopt_off
  4718                           	movlw	13
  4719  0710  300D               movwf	((??_lcd_dataReg+0)+0),f
  4720  0711  00F2               	u2137:
  4721  0712                     decfsz	(??_lcd_dataReg+0)+0,f
  4722  0712  0BF2               	goto	u2137
  4723  0713  2F12               opt asmopt_pop
  4724                           
  4725                           	line	107
  4726                           	
  4727                           l1931:	
  4728  0714                     ;lcd.c: 107:     PORTDbits.RD5 = 1;
  4729                           	bcf	status, 5	;RP0=0, select bank0
  4730  0714  1283               	bcf	status, 6	;RP1=0, select bank0
  4731  0715  1303               	bsf	(8),5	;volatile
  4732  0716  1688               	line	108
  4733                           	
  4734                           l185:	
  4735  0717                     	return
  4736  0717  0008               	opt stack 0
  4737                           GLOBAL	__end_of_lcd_dataReg
  4738                           	__end_of_lcd_dataReg:
  4739  0718                     	signat	_lcd_dataReg,4217
  4740                           	global	___awmod
  4741                           
  4742 ;; *************** function ___awmod *****************
  4743 ;; Defined at:
  4744 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  divisor         2    2[COMMON] int 
  4747 ;;  dividend        2    4[COMMON] int 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  sign            1    8[COMMON] unsigned char 
  4750 ;;  counter         1    7[COMMON] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  2    2[COMMON] int 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         4       0       0       0       0
  4761 ;;      Locals:         2       0       0       0       0
  4762 ;;      Temps:          1       0       0       0       0
  4763 ;;      Totals:         7       0       0       0       0
  4764 ;;Total ram usage:        7 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    2
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_lcd_num
  4771 ;;		_temporizar
  4772 ;;		_temporizar0
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4776                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4777                           	line	5
  4778                           global __ptext10
  4779                           __ptext10:	;psect for function ___awmod
  4780  0613                     psect	text10
  4781                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4782                           	line	5
  4783                           	global	__size_of___awmod
  4784                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4785  0063                     	
  4786                           ___awmod:	
  4787  0613                     ;incstack = 0
  4788                           	opt	stack 4
  4789                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4790                           	line	12
  4791                           	
  4792                           l2475:	
  4793  0613                     	clrf	(___awmod@sign)
  4794  0613  01F8               	line	13
  4795                           	
  4796                           l2477:	
  4797  0614                     	btfss	(___awmod@dividend+1),7
  4798  0614  1FF5               	goto	u1831
  4799  0615  2E17               	goto	u1830
  4800  0616  2E18               u1831:
  4801  0617                     	goto	l2483
  4802  0617  2E20               u1830:
  4803  0618                     	line	14
  4804                           	
  4805                           l2479:	
  4806  0618                     	comf	(___awmod@dividend),f
  4807  0618  09F4               	comf	(___awmod@dividend+1),f
  4808  0619  09F5               	incf	(___awmod@dividend),f
  4809  061A  0AF4               	skipnz
  4810  061B  1903               	incf	(___awmod@dividend+1),f
  4811  061C  0AF5               	line	15
  4812                           	
  4813                           l2481:	
  4814  061D                     	clrf	(___awmod@sign)
  4815  061D  01F8               	incf	(___awmod@sign),f
  4816  061E  0AF8               	goto	l2483
  4817  061F  2E20               	line	16
  4818                           	
  4819                           l622:	
  4820  0620                     	line	17
  4821                           	
  4822                           l2483:	
  4823  0620                     	btfss	(___awmod@divisor+1),7
  4824  0620  1FF3               	goto	u1841
  4825  0621  2E23               	goto	u1840
  4826  0622  2E24               u1841:
  4827  0623                     	goto	l2487
  4828  0623  2E2A               u1840:
  4829  0624                     	line	18
  4830                           	
  4831                           l2485:	
  4832  0624                     	comf	(___awmod@divisor),f
  4833  0624  09F2               	comf	(___awmod@divisor+1),f
  4834  0625  09F3               	incf	(___awmod@divisor),f
  4835  0626  0AF2               	skipnz
  4836  0627  1903               	incf	(___awmod@divisor+1),f
  4837  0628  0AF3               	goto	l2487
  4838  0629  2E2A               	
  4839                           l623:	
  4840  062A                     	line	19
  4841                           	
  4842                           l2487:	
  4843  062A                     	movf	((___awmod@divisor)),w
  4844  062A  0872               iorwf	((___awmod@divisor+1)),w
  4845  062B  0473               	btfsc	status,2
  4846  062C  1903               	goto	u1851
  4847  062D  2E2F               	goto	u1850
  4848  062E  2E30               u1851:
  4849  062F                     	goto	l2505
  4850  062F  2E65               u1850:
  4851  0630                     	line	20
  4852                           	
  4853                           l2489:	
  4854  0630                     	clrf	(___awmod@counter)
  4855  0630  01F7               	incf	(___awmod@counter),f
  4856  0631  0AF7               	line	21
  4857                           	goto	l2495
  4858  0632  2E3F               	
  4859                           l626:	
  4860  0633                     	line	22
  4861                           	
  4862                           l2491:	
  4863  0633                     	movlw	01h
  4864  0633  3001               	
  4865                           u1865:
  4866  0634                     	clrc
  4867  0634  1003               	rlf	(___awmod@divisor),f
  4868  0635  0DF2               	rlf	(___awmod@divisor+1),f
  4869  0636  0DF3               	addlw	-1
  4870  0637  3EFF               	skipz
  4871  0638  1D03               	goto	u1865
  4872  0639  2E34               	line	23
  4873                           	
  4874                           l2493:	
  4875  063A                     	movlw	low(01h)
  4876  063A  3001               	movwf	(??___awmod+0)+0
  4877  063B  00F6               	movf	(??___awmod+0)+0,w
  4878  063C  0876               	addwf	(___awmod@counter),f
  4879  063D  07F7               	goto	l2495
  4880  063E  2E3F               	line	24
  4881                           	
  4882                           l625:	
  4883  063F                     	line	21
  4884                           	
  4885                           l2495:	
  4886  063F                     	btfss	(___awmod@divisor+1),(15)&7
  4887  063F  1FF3               	goto	u1871
  4888  0640  2E42               	goto	u1870
  4889  0641  2E43               u1871:
  4890  0642                     	goto	l2491
  4891  0642  2E33               u1870:
  4892  0643                     	goto	l2497
  4893  0643  2E45               	
  4894                           l627:	
  4895  0644                     	goto	l2497
  4896  0644  2E45               	line	25
  4897                           	
  4898                           l628:	
  4899  0645                     	line	26
  4900                           	
  4901                           l2497:	
  4902  0645                     	movf	(___awmod@divisor+1),w
  4903  0645  0873               	subwf	(___awmod@dividend+1),w
  4904  0646  0275               	skipz
  4905  0647  1D03               	goto	u1885
  4906  0648  2E4B               	movf	(___awmod@divisor),w
  4907  0649  0872               	subwf	(___awmod@dividend),w
  4908  064A  0274               u1885:
  4909  064B                     	skipc
  4910  064B  1C03               	goto	u1881
  4911  064C  2E4E               	goto	u1880
  4912  064D  2E4F               u1881:
  4913  064E                     	goto	l2501
  4914  064E  2E56               u1880:
  4915  064F                     	line	27
  4916                           	
  4917                           l2499:	
  4918  064F                     	movf	(___awmod@divisor),w
  4919  064F  0872               	subwf	(___awmod@dividend),f
  4920  0650  02F4               	movf	(___awmod@divisor+1),w
  4921  0651  0873               	skipc
  4922  0652  1C03               	decf	(___awmod@dividend+1),f
  4923  0653  03F5               	subwf	(___awmod@dividend+1),f
  4924  0654  02F5               	goto	l2501
  4925  0655  2E56               	
  4926                           l629:	
  4927  0656                     	line	28
  4928                           	
  4929                           l2501:	
  4930  0656                     	movlw	01h
  4931  0656  3001               	
  4932                           u1895:
  4933  0657                     	clrc
  4934  0657  1003               	rrf	(___awmod@divisor+1),f
  4935  0658  0CF3               	rrf	(___awmod@divisor),f
  4936  0659  0CF2               	addlw	-1
  4937  065A  3EFF               	skipz
  4938  065B  1D03               	goto	u1895
  4939  065C  2E57               	line	29
  4940                           	
  4941                           l2503:	
  4942  065D                     	movlw	01h
  4943  065D  3001               	subwf	(___awmod@counter),f
  4944  065E  02F7               	btfss	status,2
  4945  065F  1D03               	goto	u1901
  4946  0660  2E62               	goto	u1900
  4947  0661  2E63               u1901:
  4948  0662                     	goto	l2497
  4949  0662  2E45               u1900:
  4950  0663                     	goto	l2505
  4951  0663  2E65               	
  4952                           l630:	
  4953  0664                     	goto	l2505
  4954  0664  2E65               	line	30
  4955                           	
  4956                           l624:	
  4957  0665                     	line	31
  4958                           	
  4959                           l2505:	
  4960  0665                     	movf	((___awmod@sign)),w
  4961  0665  0878               	btfsc	status,2
  4962  0666  1903               	goto	u1911
  4963  0667  2E69               	goto	u1910
  4964  0668  2E6A               u1911:
  4965  0669                     	goto	l2509
  4966  0669  2E70               u1910:
  4967  066A                     	line	32
  4968                           	
  4969                           l2507:	
  4970  066A                     	comf	(___awmod@dividend),f
  4971  066A  09F4               	comf	(___awmod@dividend+1),f
  4972  066B  09F5               	incf	(___awmod@dividend),f
  4973  066C  0AF4               	skipnz
  4974  066D  1903               	incf	(___awmod@dividend+1),f
  4975  066E  0AF5               	goto	l2509
  4976  066F  2E70               	
  4977                           l631:	
  4978  0670                     	line	33
  4979                           	
  4980                           l2509:	
  4981  0670                     	movf	(___awmod@dividend+1),w
  4982  0670  0875               	movwf	(?___awmod+1)
  4983  0671  00F3               	movf	(___awmod@dividend),w
  4984  0672  0874               	movwf	(?___awmod)
  4985  0673  00F2               	goto	l632
  4986  0674  2E75               	
  4987                           l2511:	
  4988  0675                     	line	34
  4989                           	
  4990                           l632:	
  4991  0675                     	return
  4992  0675  0008               	opt stack 0
  4993                           GLOBAL	__end_of___awmod
  4994                           	__end_of___awmod:
  4995  0676                     	signat	___awmod,8314
  4996                           	global	___awdiv
  4997                           
  4998 ;; *************** function ___awdiv *****************
  4999 ;; Defined at:
  5000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  divisor         2    2[COMMON] int 
  5003 ;;  dividend        2    4[COMMON] int 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  quotient        2    2[BANK0 ] int 
  5006 ;;  sign            1    1[BANK0 ] unsigned char 
  5007 ;;  counter         1    0[BANK0 ] unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2    2[COMMON] int 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2, status,0
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5017 ;;      Params:         4       0       0       0       0
  5018 ;;      Locals:         0       4       0       0       0
  5019 ;;      Temps:          1       0       0       0       0
  5020 ;;      Totals:         5       4       0       0       0
  5021 ;;Total ram usage:        9 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    2
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_lcd_num
  5028 ;;		_temporizar
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  5032                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5033                           	line	5
  5034                           global __ptext11
  5035                           __ptext11:	;psect for function ___awdiv
  5036  05A0                     psect	text11
  5037                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5038                           	line	5
  5039                           	global	__size_of___awdiv
  5040                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5041  0073                     	
  5042                           ___awdiv:	
  5043  05A0                     ;incstack = 0
  5044                           	opt	stack 4
  5045                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5046                           	line	13
  5047                           	
  5048                           l2431:	
  5049  05A0                     	bcf	status, 5	;RP0=0, select bank0
  5050  05A0  1283               	bcf	status, 6	;RP1=0, select bank0
  5051  05A1  1303               	clrf	(___awdiv@sign)
  5052  05A2  01C1               	line	14
  5053                           	
  5054                           l2433:	
  5055  05A3                     	btfss	(___awdiv@divisor+1),7
  5056  05A3  1FF3               	goto	u1731
  5057  05A4  2DA6               	goto	u1730
  5058  05A5  2DA7               u1731:
  5059  05A6                     	goto	l2439
  5060  05A6  2DAF               u1730:
  5061  05A7                     	line	15
  5062                           	
  5063                           l2435:	
  5064  05A7                     	comf	(___awdiv@divisor),f
  5065  05A7  09F2               	comf	(___awdiv@divisor+1),f
  5066  05A8  09F3               	incf	(___awdiv@divisor),f
  5067  05A9  0AF2               	skipnz
  5068  05AA  1903               	incf	(___awdiv@divisor+1),f
  5069  05AB  0AF3               	line	16
  5070                           	
  5071                           l2437:	
  5072  05AC                     	clrf	(___awdiv@sign)
  5073  05AC  01C1               	incf	(___awdiv@sign),f
  5074  05AD  0AC1               	goto	l2439
  5075  05AE  2DAF               	line	17
  5076                           	
  5077                           l609:	
  5078  05AF                     	line	18
  5079                           	
  5080                           l2439:	
  5081  05AF                     	btfss	(___awdiv@dividend+1),7
  5082  05AF  1FF5               	goto	u1741
  5083  05B0  2DB2               	goto	u1740
  5084  05B1  2DB3               u1741:
  5085  05B2                     	goto	l2445
  5086  05B2  2DBD               u1740:
  5087  05B3                     	line	19
  5088                           	
  5089                           l2441:	
  5090  05B3                     	comf	(___awdiv@dividend),f
  5091  05B3  09F4               	comf	(___awdiv@dividend+1),f
  5092  05B4  09F5               	incf	(___awdiv@dividend),f
  5093  05B5  0AF4               	skipnz
  5094  05B6  1903               	incf	(___awdiv@dividend+1),f
  5095  05B7  0AF5               	line	20
  5096                           	
  5097                           l2443:	
  5098  05B8                     	movlw	low(01h)
  5099  05B8  3001               	movwf	(??___awdiv+0)+0
  5100  05B9  00F6               	movf	(??___awdiv+0)+0,w
  5101  05BA  0876               	xorwf	(___awdiv@sign),f
  5102  05BB  06C1               	goto	l2445
  5103  05BC  2DBD               	line	21
  5104                           	
  5105                           l610:	
  5106  05BD                     	line	22
  5107                           	
  5108                           l2445:	
  5109  05BD                     	clrf	(___awdiv@quotient)
  5110  05BD  01C2               	clrf	(___awdiv@quotient+1)
  5111  05BE  01C3               	line	23
  5112                           	
  5113                           l2447:	
  5114  05BF                     	movf	((___awdiv@divisor)),w
  5115  05BF  0872               iorwf	((___awdiv@divisor+1)),w
  5116  05C0  0473               	btfsc	status,2
  5117  05C1  1903               	goto	u1751
  5118  05C2  2DC4               	goto	u1750
  5119  05C3  2DC5               u1751:
  5120  05C4                     	goto	l2467
  5121  05C4  2E02               u1750:
  5122  05C5                     	line	24
  5123                           	
  5124                           l2449:	
  5125  05C5                     	clrf	(___awdiv@counter)
  5126  05C5  01C0               	incf	(___awdiv@counter),f
  5127  05C6  0AC0               	line	25
  5128                           	goto	l2455
  5129  05C7  2DD4               	
  5130                           l613:	
  5131  05C8                     	line	26
  5132                           	
  5133                           l2451:	
  5134  05C8                     	movlw	01h
  5135  05C8  3001               	
  5136                           u1765:
  5137  05C9                     	clrc
  5138  05C9  1003               	rlf	(___awdiv@divisor),f
  5139  05CA  0DF2               	rlf	(___awdiv@divisor+1),f
  5140  05CB  0DF3               	addlw	-1
  5141  05CC  3EFF               	skipz
  5142  05CD  1D03               	goto	u1765
  5143  05CE  2DC9               	line	27
  5144                           	
  5145                           l2453:	
  5146  05CF                     	movlw	low(01h)
  5147  05CF  3001               	movwf	(??___awdiv+0)+0
  5148  05D0  00F6               	movf	(??___awdiv+0)+0,w
  5149  05D1  0876               	addwf	(___awdiv@counter),f
  5150  05D2  07C0               	goto	l2455
  5151  05D3  2DD4               	line	28
  5152                           	
  5153                           l612:	
  5154  05D4                     	line	25
  5155                           	
  5156                           l2455:	
  5157  05D4                     	btfss	(___awdiv@divisor+1),(15)&7
  5158  05D4  1FF3               	goto	u1771
  5159  05D5  2DD7               	goto	u1770
  5160  05D6  2DD8               u1771:
  5161  05D7                     	goto	l2451
  5162  05D7  2DC8               u1770:
  5163  05D8                     	goto	l2457
  5164  05D8  2DDA               	
  5165                           l614:	
  5166  05D9                     	goto	l2457
  5167  05D9  2DDA               	line	29
  5168                           	
  5169                           l615:	
  5170  05DA                     	line	30
  5171                           	
  5172                           l2457:	
  5173  05DA                     	movlw	01h
  5174  05DA  3001               	
  5175                           u1785:
  5176  05DB                     	clrc
  5177  05DB  1003               	rlf	(___awdiv@quotient),f
  5178  05DC  0DC2               	rlf	(___awdiv@quotient+1),f
  5179  05DD  0DC3               	addlw	-1
  5180  05DE  3EFF               	skipz
  5181  05DF  1D03               	goto	u1785
  5182  05E0  2DDB               	line	31
  5183                           	movf	(___awdiv@divisor+1),w
  5184  05E1  0873               	subwf	(___awdiv@dividend+1),w
  5185  05E2  0275               	skipz
  5186  05E3  1D03               	goto	u1795
  5187  05E4  2DE7               	movf	(___awdiv@divisor),w
  5188  05E5  0872               	subwf	(___awdiv@dividend),w
  5189  05E6  0274               u1795:
  5190  05E7                     	skipc
  5191  05E7  1C03               	goto	u1791
  5192  05E8  2DEA               	goto	u1790
  5193  05E9  2DEB               u1791:
  5194  05EA                     	goto	l2463
  5195  05EA  2DF3               u1790:
  5196  05EB                     	line	32
  5197                           	
  5198                           l2459:	
  5199  05EB                     	movf	(___awdiv@divisor),w
  5200  05EB  0872               	subwf	(___awdiv@dividend),f
  5201  05EC  02F4               	movf	(___awdiv@divisor+1),w
  5202  05ED  0873               	skipc
  5203  05EE  1C03               	decf	(___awdiv@dividend+1),f
  5204  05EF  03F5               	subwf	(___awdiv@dividend+1),f
  5205  05F0  02F5               	line	33
  5206                           	
  5207                           l2461:	
  5208  05F1                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5209  05F1  1442               	goto	l2463
  5210  05F2  2DF3               	line	34
  5211                           	
  5212                           l616:	
  5213  05F3                     	line	35
  5214                           	
  5215                           l2463:	
  5216  05F3                     	movlw	01h
  5217  05F3  3001               	
  5218                           u1805:
  5219  05F4                     	clrc
  5220  05F4  1003               	rrf	(___awdiv@divisor+1),f
  5221  05F5  0CF3               	rrf	(___awdiv@divisor),f
  5222  05F6  0CF2               	addlw	-1
  5223  05F7  3EFF               	skipz
  5224  05F8  1D03               	goto	u1805
  5225  05F9  2DF4               	line	36
  5226                           	
  5227                           l2465:	
  5228  05FA                     	movlw	01h
  5229  05FA  3001               	subwf	(___awdiv@counter),f
  5230  05FB  02C0               	btfss	status,2
  5231  05FC  1D03               	goto	u1811
  5232  05FD  2DFF               	goto	u1810
  5233  05FE  2E00               u1811:
  5234  05FF                     	goto	l2457
  5235  05FF  2DDA               u1810:
  5236  0600                     	goto	l2467
  5237  0600  2E02               	
  5238                           l617:	
  5239  0601                     	goto	l2467
  5240  0601  2E02               	line	37
  5241                           	
  5242                           l611:	
  5243  0602                     	line	38
  5244                           	
  5245                           l2467:	
  5246  0602                     	movf	((___awdiv@sign)),w
  5247  0602  0841               	btfsc	status,2
  5248  0603  1903               	goto	u1821
  5249  0604  2E06               	goto	u1820
  5250  0605  2E07               u1821:
  5251  0606                     	goto	l2471
  5252  0606  2E0D               u1820:
  5253  0607                     	line	39
  5254                           	
  5255                           l2469:	
  5256  0607                     	comf	(___awdiv@quotient),f
  5257  0607  09C2               	comf	(___awdiv@quotient+1),f
  5258  0608  09C3               	incf	(___awdiv@quotient),f
  5259  0609  0AC2               	skipnz
  5260  060A  1903               	incf	(___awdiv@quotient+1),f
  5261  060B  0AC3               	goto	l2471
  5262  060C  2E0D               	
  5263                           l618:	
  5264  060D                     	line	40
  5265                           	
  5266                           l2471:	
  5267  060D                     	movf	(___awdiv@quotient+1),w
  5268  060D  0843               	movwf	(?___awdiv+1)
  5269  060E  00F3               	movf	(___awdiv@quotient),w
  5270  060F  0842               	movwf	(?___awdiv)
  5271  0610  00F2               	goto	l619
  5272  0611  2E12               	
  5273                           l2473:	
  5274  0612                     	line	41
  5275                           	
  5276                           l619:	
  5277  0612                     	return
  5278  0612  0008               	opt stack 0
  5279                           GLOBAL	__end_of___awdiv
  5280                           	__end_of___awdiv:
  5281  0613                     	signat	___awdiv,8314
  5282                           	global	_lcd_init
  5283                           
  5284 ;; *************** function _lcd_init *****************
  5285 ;; Defined at:
  5286 ;;		line 123 in file "lcd.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0, pclath, cstack
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0
  5303 ;;      Totals:         0       0       0       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    3
  5307 ;; This function calls:
  5308 ;;		_delay
  5309 ;;		_lcd_instReg
  5310 ;; This function is called by:
  5311 ;;		_main
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5315                           	file	"lcd.c"
  5316                           	line	123
  5317                           global __ptext12
  5318                           __ptext12:	;psect for function _lcd_init
  5319  0676                     psect	text12
  5320                           	file	"lcd.c"
  5321                           	line	123
  5322                           	global	__size_of_lcd_init
  5323                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  5324  003F                     	
  5325                           _lcd_init:	
  5326  0676                     ;incstack = 0
  5327                           	opt	stack 4
  5328                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5329                           	line	125
  5330                           	
  5331                           l2017:	
  5332  0676                     ;lcd.c: 125:     delay(100);
  5333                           	movlw	064h
  5334  0676  3064               	movwf	(delay@t)
  5335  0677  00F2               	movlw	0
  5336  0678  3000               	movwf	((delay@t))+1
  5337  0679  00F3               	fcall	_delay
  5338  067A  120A  118A  279F  120A  118A  	line	126
  5339                           	
  5340                           l2019:	
  5341  067F                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  5342                           	bsf	status, 5	;RP0=1, select bank1
  5343  067F  1683               	bcf	status, 6	;RP1=0, select bank1
  5344  0680  1303               	bcf	(136)^080h,4	;volatile
  5345  0681  1208               	line	127
  5346                           	
  5347                           l2021:	
  5348  0682                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  5349                           	bcf	(136)^080h,5	;volatile
  5350  0682  1288               	line	128
  5351                           	
  5352                           l2023:	
  5353  0683                     ;lcd.c: 128:     TRISDbits.TRISD0 = 0;
  5354                           	bcf	(136)^080h,0	;volatile
  5355  0683  1008               	line	129
  5356                           	
  5357                           l2025:	
  5358  0684                     ;lcd.c: 129:     TRISDbits.TRISD1 = 0;
  5359                           	bcf	(136)^080h,1	;volatile
  5360  0684  1088               	line	130
  5361                           	
  5362                           l2027:	
  5363  0685                     ;lcd.c: 130:     TRISDbits.TRISD2 = 0;
  5364                           	bcf	(136)^080h,2	;volatile
  5365  0685  1108               	line	131
  5366                           	
  5367                           l2029:	
  5368  0686                     ;lcd.c: 131:     TRISDbits.TRISD3 = 0;
  5369                           	bcf	(136)^080h,3	;volatile
  5370  0686  1188               	line	133
  5371                           ;lcd.c: 133:     delay(100);
  5372                           	movlw	064h
  5373  0687  3064               	movwf	(delay@t)
  5374  0688  00F2               	movlw	0
  5375  0689  3000               	movwf	((delay@t))+1
  5376  068A  00F3               	fcall	_delay
  5377  068B  120A  118A  279F  120A  118A  	line	134
  5378                           	
  5379                           l2031:	
  5380  0690                     ;lcd.c: 134:     PORTDbits.RD5 = 1;
  5381                           	bcf	status, 5	;RP0=0, select bank0
  5382  0690  1283               	bcf	status, 6	;RP1=0, select bank0
  5383  0691  1303               	bsf	(8),5	;volatile
  5384  0692  1688               	line	135
  5385                           ;lcd.c: 135:     lcd_instReg( 0x20|0x00|0x08 );
  5386                           	movlw	low(028h)
  5387  0693  3028               	fcall	_lcd_instReg
  5388  0694  120A  118A  2524  120A  118A  	line	136
  5389                           ;lcd.c: 136:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  5390                           	movlw	low(0Ch)
  5391  0699  300C               	fcall	_lcd_instReg
  5392  069A  120A  118A  2524  120A  118A  	line	137
  5393                           ;lcd.c: 137:     lcd_instReg( 0x01 );
  5394                           	movlw	low(01h)
  5395  069F  3001               	fcall	_lcd_instReg
  5396  06A0  120A  118A  2524  120A  118A  	line	138
  5397                           ;lcd.c: 138:     lcd_instReg( 0x02 );
  5398                           	movlw	low(02h)
  5399  06A5  3002               	fcall	_lcd_instReg
  5400  06A6  120A  118A  2524  120A  118A  	line	139
  5401                           ;lcd.c: 139:     delay(100);
  5402                           	movlw	064h
  5403  06AB  3064               	movwf	(delay@t)
  5404  06AC  00F2               	movlw	0
  5405  06AD  3000               	movwf	((delay@t))+1
  5406  06AE  00F3               	fcall	_delay
  5407  06AF  120A  118A  279F  120A  118A  	line	140
  5408                           	
  5409                           l191:	
  5410  06B4                     	return
  5411  06B4  0008               	opt stack 0
  5412                           GLOBAL	__end_of_lcd_init
  5413                           	__end_of_lcd_init:
  5414  06B5                     	signat	_lcd_init,89
  5415                           	global	_lcd_instReg
  5416                           
  5417 ;; *************** function _lcd_instReg *****************
  5418 ;; Defined at:
  5419 ;;		line 60 in file "lcd.c"
  5420 ;; Parameters:    Size  Location     Type
  5421 ;;  i               1    wreg     unsigned char 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  i               1    4[COMMON] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5433 ;;      Params:         0       0       0       0       0
  5434 ;;      Locals:         1       0       0       0       0
  5435 ;;      Temps:          2       0       0       0       0
  5436 ;;      Totals:         3       0       0       0       0
  5437 ;;Total ram usage:        3 bytes
  5438 ;; Hardware stack levels used:    1
  5439 ;; Hardware stack levels required when called:    2
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_lcd_lincol
  5444 ;;		_lcd_init
  5445 ;;		_lcd_clr
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5449                           	line	60
  5450                           global __ptext13
  5451                           __ptext13:	;psect for function _lcd_instReg
  5452  0524                     psect	text13
  5453                           	file	"lcd.c"
  5454                           	line	60
  5455                           	global	__size_of_lcd_instReg
  5456                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  5457  007C                     	
  5458                           _lcd_instReg:	
  5459  0524                     ;incstack = 0
  5460                           	opt	stack 3
  5461                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  5462                           ;lcd_instReg@i stored from wreg
  5463                           	movwf	(lcd_instReg@i)
  5464  0524  00F4               	line	62
  5465                           	
  5466                           l1855:	
  5467  0525                     ;lcd.c: 60: void lcd_instReg( unsigned char i );lcd.c: 61: {;lcd.c: 62:     PORTDbits.RD
                                 4 = 0;
  5468                           	bcf	status, 5	;RP0=0, select bank0
  5469  0525  1283               	bcf	status, 6	;RP1=0, select bank0
  5470  0526  1303               	bcf	(8),4	;volatile
  5471  0527  1208               	line	63
  5472                           	
  5473                           l1857:	
  5474  0528                     ;lcd.c: 63:     PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  5475                           	movf	(lcd_instReg@i),w
  5476  0528  0874               	movwf	(??_lcd_instReg+0)+0
  5477  0529  00F2               	movlw	04h
  5478  052A  3004               u1005:
  5479  052B                     	clrc
  5480  052B  1003               	rrf	(??_lcd_instReg+0)+0,f
  5481  052C  0CF2               	addlw	-1
  5482  052D  3EFF               	skipz
  5483  052E  1D03               	goto	u1005
  5484  052F  2D2B               	movlw	low(0Fh)
  5485  0530  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  5486  0531  0572               	movwf	(??_lcd_instReg+1)+0
  5487  0532  00F3               	movf	(8),w	;volatile
  5488  0533  0808               	andlw	0F0h
  5489  0534  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  5490  0535  0473               	movwf	(8)	;volatile
  5491  0536  0088               	line	65
  5492                           	
  5493                           l1859:	
  5494  0537                     ;lcd.c: 65:     PORTDbits.RD5 = 0;
  5495                           	bcf	(8),5	;volatile
  5496  0537  1288               	line	66
  5497                           ;lcd.c: 66:     if( i == 0x01 || i == 0x02 )
  5498                           		decf	((lcd_instReg@i)),w
  5499  0538  0374               	btfsc	status,2
  5500  0539  1903               	goto	u1011
  5501  053A  2D3C               	goto	u1010
  5502  053B  2D3D               u1011:
  5503  053C                     	goto	l1863
  5504  053C  2D44               u1010:
  5505  053D                     	
  5506                           l1861:	
  5507  053D                     		movlw	2
  5508  053D  3002               	xorwf	((lcd_instReg@i)),w
  5509  053E  0674               	btfss	status,2
  5510  053F  1D03               	goto	u1021
  5511  0540  2D42               	goto	u1020
  5512  0541  2D43               u1021:
  5513  0542                     	goto	l1865
  5514  0542  2D4E               u1020:
  5515  0543                     	goto	l1863
  5516  0543  2D44               	
  5517                           l175:	
  5518  0544                     	line	67
  5519                           	
  5520                           l1863:	
  5521  0544                     ;lcd.c: 67:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5522                           	opt asmopt_push
  5523                           opt asmopt_off
  5524                           movlw	3
  5525  0544  3003               movwf	((??_lcd_instReg+0)+0+1),f
  5526  0545  00F3               	movlw	151
  5527  0546  3097               movwf	((??_lcd_instReg+0)+0),f
  5528  0547  00F2               	u2147:
  5529  0548                     decfsz	((??_lcd_instReg+0)+0),f
  5530  0548  0BF2               	goto	u2147
  5531  0549  2D48               	decfsz	((??_lcd_instReg+0)+0+1),f
  5532  054A  0BF3               	goto	u2147
  5533  054B  2D48               	nop2
  5534  054C  2D4D               opt asmopt_pop
  5535                           
  5536                           	goto	l1867
  5537  054D  2D53               	line	68
  5538                           ;lcd.c: 68:     else
  5539                           	
  5540                           l173:	
  5541  054E                     	line	69
  5542                           	
  5543                           l1865:	
  5544  054E                     ;lcd.c: 69:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5545                           	opt asmopt_push
  5546                           opt asmopt_off
  5547                           	movlw	13
  5548  054E  300D               movwf	((??_lcd_instReg+0)+0),f
  5549  054F  00F2               	u2157:
  5550  0550                     decfsz	(??_lcd_instReg+0)+0,f
  5551  0550  0BF2               	goto	u2157
  5552  0551  2D50               opt asmopt_pop
  5553                           
  5554                           	goto	l1867
  5555  0552  2D53               	
  5556                           l176:	
  5557  0553                     	line	70
  5558                           	
  5559                           l1867:	
  5560  0553                     ;lcd.c: 70:     PORTDbits.RD5 = 1;
  5561                           	bcf	status, 5	;RP0=0, select bank0
  5562  0553  1283               	bcf	status, 6	;RP1=0, select bank0
  5563  0554  1303               	bsf	(8),5	;volatile
  5564  0555  1688               	line	73
  5565                           	
  5566                           l1869:	
  5567  0556                     ;lcd.c: 73:     if( (i & 0xF0) == (0x20 | 0x00) )
  5568                           	movlw	low(0F0h)
  5569  0556  30F0               	andwf	(lcd_instReg@i),w
  5570  0557  0574               	movwf	(??_lcd_instReg+0)+0
  5571  0558  00F2               		movlw	32
  5572  0559  3020               	xorwf	((??_lcd_instReg+0)+0),w
  5573  055A  0672               	btfss	status,2
  5574  055B  1D03               	goto	u1031
  5575  055C  2D5E               	goto	u1030
  5576  055D  2D5F               u1031:
  5577  055E                     	goto	l1881
  5578  055E  2D78               u1030:
  5579  055F                     	line	75
  5580                           	
  5581                           l1871:	
  5582  055F                     ;lcd.c: 74:     {;lcd.c: 75:         PORTDbits.RD4 = 0;
  5583                           	bcf	(8),4	;volatile
  5584  055F  1208               	line	76
  5585                           	
  5586                           l1873:	
  5587  0560                     ;lcd.c: 76:         PORTD = ((PORTD & 0xF0)|(i>>4&0x0F));
  5588                           	movf	(lcd_instReg@i),w
  5589  0560  0874               	movwf	(??_lcd_instReg+0)+0
  5590  0561  00F2               	movlw	04h
  5591  0562  3004               u1045:
  5592  0563                     	clrc
  5593  0563  1003               	rrf	(??_lcd_instReg+0)+0,f
  5594  0564  0CF2               	addlw	-1
  5595  0565  3EFF               	skipz
  5596  0566  1D03               	goto	u1045
  5597  0567  2D63               	movlw	low(0Fh)
  5598  0568  300F               	andwf	0+(??_lcd_instReg+0)+0,w
  5599  0569  0572               	movwf	(??_lcd_instReg+1)+0
  5600  056A  00F3               	movf	(8),w	;volatile
  5601  056B  0808               	andlw	0F0h
  5602  056C  39F0               	iorwf	0+(??_lcd_instReg+1)+0,w
  5603  056D  0473               	movwf	(8)	;volatile
  5604  056E  0088               	line	77
  5605                           	
  5606                           l1875:	
  5607  056F                     ;lcd.c: 77:         PORTDbits.RD5 = 0;
  5608                           	bcf	(8),5	;volatile
  5609  056F  1288               	line	78
  5610                           	
  5611                           l1877:	
  5612  0570                     ;lcd.c: 78:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5613                           	opt asmopt_push
  5614                           opt asmopt_off
  5615                           	movlw	13
  5616  0570  300D               movwf	((??_lcd_instReg+0)+0),f
  5617  0571  00F2               	u2167:
  5618  0572                     decfsz	(??_lcd_instReg+0)+0,f
  5619  0572  0BF2               	goto	u2167
  5620  0573  2D72               opt asmopt_pop
  5621                           
  5622                           	line	79
  5623                           	
  5624                           l1879:	
  5625  0574                     ;lcd.c: 79:         PORTDbits.RD5 = 1;
  5626                           	bcf	status, 5	;RP0=0, select bank0
  5627  0574  1283               	bcf	status, 6	;RP1=0, select bank0
  5628  0575  1303               	bsf	(8),5	;volatile
  5629  0576  1688               	goto	l1881
  5630  0577  2D78               	line	80
  5631                           ;lcd.c: 80:     }
  5632                           	
  5633                           l177:	
  5634  0578                     	line	82
  5635                           	
  5636                           l1881:	
  5637  0578                     ;lcd.c: 82:     PORTDbits.RD4 = 0;
  5638                           	bcf	(8),4	;volatile
  5639  0578  1208               	line	83
  5640                           	
  5641                           l1883:	
  5642  0579                     ;lcd.c: 83:     PORTD = ((PORTD & 0xF0)|(i&0x0F));
  5643                           	movlw	low(0Fh)
  5644  0579  300F               	andwf	(lcd_instReg@i),w
  5645  057A  0574               	movwf	(??_lcd_instReg+0)+0
  5646  057B  00F2               	movf	(8),w	;volatile
  5647  057C  0808               	andlw	0F0h
  5648  057D  39F0               	iorwf	0+(??_lcd_instReg+0)+0,w
  5649  057E  0472               	movwf	(8)	;volatile
  5650  057F  0088               	line	84
  5651                           	
  5652                           l1885:	
  5653  0580                     ;lcd.c: 84:     PORTDbits.RD5 = 0;
  5654                           	bcf	(8),5	;volatile
  5655  0580  1288               	line	85
  5656                           	
  5657                           l1887:	
  5658  0581                     ;lcd.c: 85:     if( i == 0x01 || i == 0x02 )
  5659                           		decf	((lcd_instReg@i)),w
  5660  0581  0374               	btfsc	status,2
  5661  0582  1903               	goto	u1051
  5662  0583  2D85               	goto	u1050
  5663  0584  2D86               u1051:
  5664  0585                     	goto	l1891
  5665  0585  2D8D               u1050:
  5666  0586                     	
  5667                           l1889:	
  5668  0586                     		movlw	2
  5669  0586  3002               	xorwf	((lcd_instReg@i)),w
  5670  0587  0674               	btfss	status,2
  5671  0588  1D03               	goto	u1061
  5672  0589  2D8B               	goto	u1060
  5673  058A  2D8C               u1061:
  5674  058B                     	goto	l1893
  5675  058B  2D97               u1060:
  5676  058C                     	goto	l1891
  5677  058C  2D8D               	
  5678                           l180:	
  5679  058D                     	line	86
  5680                           	
  5681                           l1891:	
  5682  058D                     ;lcd.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5683                           	opt asmopt_push
  5684                           opt asmopt_off
  5685                           movlw	3
  5686  058D  3003               movwf	((??_lcd_instReg+0)+0+1),f
  5687  058E  00F3               	movlw	151
  5688  058F  3097               movwf	((??_lcd_instReg+0)+0),f
  5689  0590  00F2               	u2177:
  5690  0591                     decfsz	((??_lcd_instReg+0)+0),f
  5691  0591  0BF2               	goto	u2177
  5692  0592  2D91               	decfsz	((??_lcd_instReg+0)+0+1),f
  5693  0593  0BF3               	goto	u2177
  5694  0594  2D91               	nop2
  5695  0595  2D96               opt asmopt_pop
  5696                           
  5697                           	goto	l1895
  5698  0596  2D9C               	line	87
  5699                           ;lcd.c: 87:     else
  5700                           	
  5701                           l178:	
  5702  0597                     	line	88
  5703                           	
  5704                           l1893:	
  5705  0597                     ;lcd.c: 88:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5706                           	opt asmopt_push
  5707                           opt asmopt_off
  5708                           	movlw	13
  5709  0597  300D               movwf	((??_lcd_instReg+0)+0),f
  5710  0598  00F2               	u2187:
  5711  0599                     decfsz	(??_lcd_instReg+0)+0,f
  5712  0599  0BF2               	goto	u2187
  5713  059A  2D99               opt asmopt_pop
  5714                           
  5715                           	goto	l1895
  5716  059B  2D9C               	
  5717                           l181:	
  5718  059C                     	line	89
  5719                           	
  5720                           l1895:	
  5721  059C                     ;lcd.c: 89:     PORTDbits.RD5 = 1;
  5722                           	bcf	status, 5	;RP0=0, select bank0
  5723  059C  1283               	bcf	status, 6	;RP1=0, select bank0
  5724  059D  1303               	bsf	(8),5	;volatile
  5725  059E  1688               	line	90
  5726                           	
  5727                           l182:	
  5728  059F                     	return
  5729  059F  0008               	opt stack 0
  5730                           GLOBAL	__end_of_lcd_instReg
  5731                           	__end_of_lcd_instReg:
  5732  05A0                     	signat	_lcd_instReg,4217
  5733                           	global	_delay
  5734                           
  5735 ;; *************** function _delay *****************
  5736 ;; Defined at:
  5737 ;;		line 7 in file "delay.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  t               2    2[COMMON] unsigned int 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5751 ;;      Params:         2       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0
  5753 ;;      Temps:          1       0       0       0       0
  5754 ;;      Totals:         3       0       0       0       0
  5755 ;;Total ram usage:        3 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    2
  5758 ;; This function calls:
  5759 ;;		Nothing
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;;		_lcd_init
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5766                           	file	"delay.c"
  5767                           	line	7
  5768                           global __ptext14
  5769                           __ptext14:	;psect for function _delay
  5770  079F                     psect	text14
  5771                           	file	"delay.c"
  5772                           	line	7
  5773                           	global	__size_of_delay
  5774                           	__size_of_delay	equ	__end_of_delay-_delay
  5775  0017                     	
  5776                           _delay:	
  5777  079F                     ;incstack = 0
  5778                           	opt	stack 4
  5779                           ; Regs used in _delay: [wreg+status,2+status,0]
  5780                           	line	9
  5781                           	
  5782                           l1909:	
  5783  079F                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  5784                           	goto	l1913
  5785  079F  2FAE               	
  5786                           l158:	
  5787  07A0                     	line	11
  5788                           	
  5789                           l1911:	
  5790  07A0                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  5791                           	opt asmopt_push
  5792                           opt asmopt_off
  5793                           	movlw	199
  5794  07A0  30C7               movwf	((??_delay+0)+0),f
  5795  07A1  00F4               	u2197:
  5796  07A2                     	nop2
  5797  07A2  2FA3               decfsz	(??_delay+0)+0,f
  5798  07A3  0BF4               	goto	u2197
  5799  07A4  2FA2               	nop2
  5800  07A5  2FA6               	nop2
  5801  07A6  2FA7               opt asmopt_pop
  5802                           
  5803                           	line	12
  5804                           ;delay.c: 12:         --t;
  5805                           	movlw	01h
  5806  07A7  3001               	subwf	(delay@t),f
  5807  07A8  02F2               	movlw	0
  5808  07A9  3000               	skipc
  5809  07AA  1C03               	decf	(delay@t+1),f
  5810  07AB  03F3               	subwf	(delay@t+1),f
  5811  07AC  02F3               	goto	l1913
  5812  07AD  2FAE               	line	13
  5813                           ;delay.c: 13:     }
  5814                           	
  5815                           l157:	
  5816  07AE                     	line	9
  5817                           	
  5818                           l1913:	
  5819  07AE                     ;delay.c: 9:     while( t )
  5820                           	movf	((delay@t)),w
  5821  07AE  0872               iorwf	((delay@t+1)),w
  5822  07AF  0473               	btfss	status,2
  5823  07B0  1D03               	goto	u1081
  5824  07B1  2FB3               	goto	u1080
  5825  07B2  2FB4               u1081:
  5826  07B3                     	goto	l1911
  5827  07B3  2FA0               u1080:
  5828  07B4                     	goto	l160
  5829  07B4  2FB5               	
  5830                           l159:	
  5831  07B5                     	line	14
  5832                           	
  5833                           l160:	
  5834  07B5                     	return
  5835  07B5  0008               	opt stack 0
  5836                           GLOBAL	__end_of_delay
  5837                           	__end_of_delay:
  5838  07B6                     	signat	_delay,4217
  5839                           	global	_habTemporizador
  5840                           
  5841 ;; *************** function _habTemporizador *****************
  5842 ;; Defined at:
  5843 ;;		line 65 in file "tempo.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  t               1    wreg     PTR struct temporizadorT
  5846 ;;		 -> tempo(24), 
  5847 ;;  h               1    2[COMMON] unsigned char 
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;  t               1    4[COMMON] PTR struct temporizadorT
  5850 ;;		 -> tempo(24), 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  1    wreg      void 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr0l, fsr0h
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5860 ;;      Params:         1       0       0       0       0
  5861 ;;      Locals:         1       0       0       0       0
  5862 ;;      Temps:          1       0       0       0       0
  5863 ;;      Totals:         3       0       0       0       0
  5864 ;;Total ram usage:        3 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    2
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_main
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5874                           	file	"tempo.c"
  5875                           	line	65
  5876                           global __ptext15
  5877                           __ptext15:	;psect for function _habTemporizador
  5878  0F93                     psect	text15
  5879                           	file	"tempo.c"
  5880                           	line	65
  5881                           	global	__size_of_habTemporizador
  5882                           	__size_of_habTemporizador	equ	__end_of_habTemporizador-_habTemporizador
  5883  0009                     	
  5884                           _habTemporizador:	
  5885  0F93                     ;incstack = 0
  5886                           	opt	stack 5
  5887                           ; Regs used in _habTemporizador: [wregfsr0]
  5888                           ;habTemporizador@t stored from wreg
  5889                           	movwf	(habTemporizador@t)
  5890  0F93  00F4               	line	67
  5891                           	
  5892                           l2097:	
  5893  0F94                     ;tempo.c: 65: void habTemporizador( struct temporizadorT * t, unsigned char h );tempo.c:
                                  66: {;tempo.c: 67:     t->hab = h;
  5894                           	movf	(habTemporizador@h),w
  5895  0F94  0872               	movwf	(??_habTemporizador+0)+0
  5896  0F95  00F3               	movf	(habTemporizador@t),w
  5897  0F96  0874               	movwf	fsr0
  5898  0F97  0084               	movf	(??_habTemporizador+0)+0,w
  5899  0F98  0873               	bcf	status, 7	;select IRP bank0
  5900  0F99  1383               	movwf	indf
  5901  0F9A  0080               	line	68
  5902                           	
  5903                           l236:	
  5904  0F9B                     	return
  5905  0F9B  0008               	opt stack 0
  5906                           GLOBAL	__end_of_habTemporizador
  5907                           	__end_of_habTemporizador:
  5908  0F9C                     	signat	_habTemporizador,8313
  5909                           	global	_b3
  5910                           
  5911 ;; *************** function _b3 *****************
  5912 ;; Defined at:
  5913 ;;		line 128 in file "botao.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      unsigned char 
  5920 ;; Registers used:
  5921 ;;		wreg, status,0
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5927 ;;      Params:         0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0
  5930 ;;      Totals:         0       0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    2
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_main
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5941                           	file	"botao.c"
  5942                           	line	128
  5943                           global __ptext16
  5944                           __ptext16:	;psect for function _b3
  5945  0FC4                     psect	text16
  5946                           	file	"botao.c"
  5947                           	line	128
  5948                           	global	__size_of_b3
  5949                           	__size_of_b3	equ	__end_of_b3-_b3
  5950  000A                     	
  5951                           _b3:	
  5952  0FC4                     ;incstack = 0
  5953                           	opt	stack 5
  5954                           ; Regs used in _b3: [wreg+status,0]
  5955                           	line	130
  5956                           	
  5957                           l2107:	
  5958  0FC4                     ;botao.c: 130:     return( !PORTAbits.RA3 );
  5959                           	clrc
  5960  0FC4  1003               	bcf	status, 5	;RP0=0, select bank0
  5961  0FC5  1283               	bcf	status, 6	;RP1=0, select bank0
  5962  0FC6  1303               	btfss	(5),3	;volatile
  5963  0FC7  1D85               	setc
  5964  0FC8  1403               	movlw	0
  5965  0FC9  3000               	skipnc
  5966  0FCA  1803               	movlw	1
  5967  0FCB  3001               
  5968                           	goto	l309
  5969  0FCC  2FCD               	
  5970                           l2109:	
  5971  0FCD                     	line	131
  5972                           	
  5973                           l309:	
  5974  0FCD                     	return
  5975  0FCD  0008               	opt stack 0
  5976                           GLOBAL	__end_of_b3
  5977                           	__end_of_b3:
  5978  0FCE                     	signat	_b3,89
  5979                           	global	_b2
  5980                           
  5981 ;; *************** function _b2 *****************
  5982 ;; Defined at:
  5983 ;;		line 94 in file "botao.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5997 ;;      Params:         0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0
  6000 ;;      Totals:         0       0       0       0       0
  6001 ;;Total ram usage:        0 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    2
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_main
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6011                           	line	94
  6012                           global __ptext17
  6013                           __ptext17:	;psect for function _b2
  6014  0FBA                     psect	text17
  6015                           	file	"botao.c"
  6016                           	line	94
  6017                           	global	__size_of_b2
  6018                           	__size_of_b2	equ	__end_of_b2-_b2
  6019  000A                     	
  6020                           _b2:	
  6021  0FBA                     ;incstack = 0
  6022                           	opt	stack 5
  6023                           ; Regs used in _b2: [wreg+status,0]
  6024                           	line	96
  6025                           	
  6026                           l2103:	
  6027  0FBA                     ;botao.c: 96:     return( !PORTAbits.RA2 );
  6028                           	clrc
  6029  0FBA  1003               	bcf	status, 5	;RP0=0, select bank0
  6030  0FBB  1283               	bcf	status, 6	;RP1=0, select bank0
  6031  0FBC  1303               	btfss	(5),2	;volatile
  6032  0FBD  1D05               	setc
  6033  0FBE  1403               	movlw	0
  6034  0FBF  3000               	skipnc
  6035  0FC0  1803               	movlw	1
  6036  0FC1  3001               
  6037                           	goto	l289
  6038  0FC2  2FC3               	
  6039                           l2105:	
  6040  0FC3                     	line	97
  6041                           	
  6042                           l289:	
  6043  0FC3                     	return
  6044  0FC3  0008               	opt stack 0
  6045                           GLOBAL	__end_of_b2
  6046                           	__end_of_b2:
  6047  0FC4                     	signat	_b2,89
  6048                           	global	_b1
  6049                           
  6050 ;; *************** function _b1 *****************
  6051 ;; Defined at:
  6052 ;;		line 60 in file "botao.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      unsigned char 
  6059 ;; Registers used:
  6060 ;;		wreg, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0
  6069 ;;      Totals:         0       0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    2
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6080                           	line	60
  6081                           global __ptext18
  6082                           __ptext18:	;psect for function _b1
  6083  0FB0                     psect	text18
  6084                           	file	"botao.c"
  6085                           	line	60
  6086                           	global	__size_of_b1
  6087                           	__size_of_b1	equ	__end_of_b1-_b1
  6088  000A                     	
  6089                           _b1:	
  6090  0FB0                     ;incstack = 0
  6091                           	opt	stack 5
  6092                           ; Regs used in _b1: [wreg+status,0]
  6093                           	line	62
  6094                           	
  6095                           l2099:	
  6096  0FB0                     ;botao.c: 62:    return( !PORTAbits.RA1 );
  6097                           	clrc
  6098  0FB0  1003               	bcf	status, 5	;RP0=0, select bank0
  6099  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  6100  0FB2  1303               	btfss	(5),1	;volatile
  6101  0FB3  1C85               	setc
  6102  0FB4  1403               	movlw	0
  6103  0FB5  3000               	skipnc
  6104  0FB6  1803               	movlw	1
  6105  0FB7  3001               
  6106                           	goto	l269
  6107  0FB8  2FB9               	
  6108                           l2101:	
  6109  0FB9                     	line	63
  6110                           	
  6111                           l269:	
  6112  0FB9                     	return
  6113  0FB9  0008               	opt stack 0
  6114                           GLOBAL	__end_of_b1
  6115                           	__end_of_b1:
  6116  0FBA                     	signat	_b1,89
  6117                           	global	_b0
  6118                           
  6119 ;; *************** function _b0 *****************
  6120 ;; Defined at:
  6121 ;;		line 22 in file "botao.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;		None
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;		None
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      unsigned char 
  6128 ;; Registers used:
  6129 ;;		wreg, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         0       0       0       0       0
  6136 ;;      Locals:         0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0
  6138 ;;      Totals:         0       0       0       0       0
  6139 ;;Total ram usage:        0 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    2
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_main
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6149                           	line	22
  6150                           global __ptext19
  6151                           __ptext19:	;psect for function _b0
  6152  0FA6                     psect	text19
  6153                           	file	"botao.c"
  6154                           	line	22
  6155                           	global	__size_of_b0
  6156                           	__size_of_b0	equ	__end_of_b0-_b0
  6157  000A                     	
  6158                           _b0:	
  6159  0FA6                     ;incstack = 0
  6160                           	opt	stack 5
  6161                           ; Regs used in _b0: [wreg+status,0]
  6162                           	line	24
  6163                           	
  6164                           l2093:	
  6165  0FA6                     ;botao.c: 24:     return( !PORTAbits.RA0 );
  6166                           	clrc
  6167  0FA6  1003               	bcf	status, 5	;RP0=0, select bank0
  6168  0FA7  1283               	bcf	status, 6	;RP1=0, select bank0
  6169  0FA8  1303               	btfss	(5),0	;volatile
  6170  0FA9  1C05               	setc
  6171  0FAA  1403               	movlw	0
  6172  0FAB  3000               	skipnc
  6173  0FAC  1803               	movlw	1
  6174  0FAD  3001               
  6175                           	goto	l249
  6176  0FAE  2FAF               	
  6177                           l2095:	
  6178  0FAF                     	line	25
  6179                           	
  6180                           l249:	
  6181  0FAF                     	return
  6182  0FAF  0008               	opt stack 0
  6183                           GLOBAL	__end_of_b0
  6184                           	__end_of_b0:
  6185  0FB0                     	signat	_b0,89
  6186                           	global	_T0_status
  6187                           
  6188 ;; *************** function _T0_status *****************
  6189 ;; Defined at:
  6190 ;;		line 59 in file "timers.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  2    2[COMMON] unsigned int 
  6197 ;; Registers used:
  6198 ;;		wreg
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6204 ;;      Params:         2       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0
  6207 ;;      Totals:         2       0       0       0       0
  6208 ;;Total ram usage:        2 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    2
  6211 ;; This function calls:
  6212 ;;		Nothing
  6213 ;; This function is called by:
  6214 ;;		_main
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6218                           	file	"timers.c"
  6219                           	line	59
  6220                           global __ptext20
  6221                           __ptext20:	;psect for function _T0_status
  6222  0F83                     psect	text20
  6223                           	file	"timers.c"
  6224                           	line	59
  6225                           	global	__size_of_T0_status
  6226                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  6227  0008                     	
  6228                           _T0_status:	
  6229  0F83                     ;incstack = 0
  6230                           	opt	stack 5
  6231                           ; Regs used in _T0_status: [wreg]
  6232                           	line	61
  6233                           	
  6234                           l2111:	
  6235  0F83                     ;timers.c: 61:     return( T0count );
  6236                           	bcf	status, 5	;RP0=0, select bank0
  6237  0F83  1283               	bcf	status, 6	;RP1=0, select bank0
  6238  0F84  1303               	movf	(_T0count+1),w
  6239  0F85  0825               	movwf	(?_T0_status+1)
  6240  0F86  00F3               	movf	(_T0count),w
  6241  0F87  0824               	movwf	(?_T0_status)
  6242  0F88  00F2               	goto	l96
  6243  0F89  2F8A               	
  6244                           l2113:	
  6245  0F8A                     	line	62
  6246                           	
  6247                           l96:	
  6248  0F8A                     	return
  6249  0F8A  0008               	opt stack 0
  6250                           GLOBAL	__end_of_T0_status
  6251                           	__end_of_T0_status:
  6252  0F8B                     	signat	_T0_status,90
  6253                           	global	_T0_start
  6254                           
  6255 ;; *************** function _T0_start *****************
  6256 ;; Defined at:
  6257 ;;		line 42 in file "timers.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  c               2    2[COMMON] unsigned int 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6271 ;;      Params:         2       0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0
  6274 ;;      Totals:         2       0       0       0       0
  6275 ;;Total ram usage:        2 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    2
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_main
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6285                           	line	42
  6286                           global __ptext21
  6287                           __ptext21:	;psect for function _T0_start
  6288  0F9C                     psect	text21
  6289                           	file	"timers.c"
  6290                           	line	42
  6291                           	global	__size_of_T0_start
  6292                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  6293  000A                     	
  6294                           _T0_start:	
  6295  0F9C                     ;incstack = 0
  6296                           	opt	stack 5
  6297                           ; Regs used in _T0_start: [wreg]
  6298                           	line	44
  6299                           	
  6300                           l2069:	
  6301  0F9C                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  6302                           	movlw	low(06h)
  6303  0F9C  3006               	bcf	status, 5	;RP0=0, select bank0
  6304  0F9D  1283               	bcf	status, 6	;RP1=0, select bank0
  6305  0F9E  1303               	movwf	(1)	;volatile
  6306  0F9F  0081               	line	45
  6307                           ;timers.c: 45:     T0count = c;
  6308                           	movf	(T0_start@c+1),w
  6309  0FA0  0873               	movwf	(_T0count+1)
  6310  0FA1  00A5               	movf	(T0_start@c),w
  6311  0FA2  0872               	movwf	(_T0count)
  6312  0FA3  00A4               	line	46
  6313                           	
  6314                           l2071:	
  6315  0FA4                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  6316                           	bsf	(11),5	;volatile
  6317  0FA4  168B               	line	47
  6318                           	
  6319                           l87:	
  6320  0FA5                     	return
  6321  0FA5  0008               	opt stack 0
  6322                           GLOBAL	__end_of_T0_start
  6323                           	__end_of_T0_start:
  6324  0FA6                     	signat	_T0_start,4217
  6325                           	global	_T0_init
  6326                           
  6327 ;; *************** function _T0_init *****************
  6328 ;; Defined at:
  6329 ;;		line 21 in file "timers.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;		None
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         0       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0
  6346 ;;      Totals:         0       0       0       0       0
  6347 ;;Total ram usage:        0 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    2
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_main
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6357                           	line	21
  6358                           global __ptext22
  6359                           __ptext22:	;psect for function _T0_init
  6360  0FDE                     psect	text22
  6361                           	file	"timers.c"
  6362                           	line	21
  6363                           	global	__size_of_T0_init
  6364                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  6365  0010                     	
  6366                           _T0_init:	
  6367  0FDE                     ;incstack = 0
  6368                           	opt	stack 5
  6369                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  6370                           	line	23
  6371                           	
  6372                           l2033:	
  6373  0FDE                     ;timers.c: 23:     INTCONbits.GIE = 0;
  6374                           	bcf	(11),7	;volatile
  6375  0FDE  138B               	line	24
  6376                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  6377                           	bsf	status, 5	;RP0=1, select bank1
  6378  0FDF  1683               	bcf	status, 6	;RP1=0, select bank1
  6379  0FE0  1303               	bcf	(129)^080h,3	;volatile
  6380  0FE1  1181               	line	25
  6381                           	
  6382                           l2035:	
  6383  0FE2                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  6384                           	movf	(129)^080h,w	;volatile
  6385  0FE2  0801               	andlw	not (((1<<3)-1)<<0)
  6386  0FE3  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  6387  0FE4  3801               	movwf	(129)^080h	;volatile
  6388  0FE5  0081               	line	26
  6389                           	
  6390                           l2037:	
  6391  0FE6                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  6392                           	bcf	(129)^080h,5	;volatile
  6393  0FE6  1281               	line	27
  6394                           	
  6395                           l2039:	
  6396  0FE7                     ;timers.c: 27:     TMR0 = (256-250);
  6397                           	movlw	low(06h)
  6398  0FE7  3006               	bcf	status, 5	;RP0=0, select bank0
  6399  0FE8  1283               	bcf	status, 6	;RP1=0, select bank0
  6400  0FE9  1303               	movwf	(1)	;volatile
  6401  0FEA  0081               	line	28
  6402                           	
  6403                           l2041:	
  6404  0FEB                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  6405                           	bcf	(11),5	;volatile
  6406  0FEB  128B               	line	29
  6407                           	
  6408                           l2043:	
  6409  0FEC                     ;timers.c: 29:     INTCONbits.GIE = 1;
  6410                           	bsf	(11),7	;volatile
  6411  0FEC  178B               	line	30
  6412                           	
  6413                           l80:	
  6414  0FED                     	return
  6415  0FED  0008               	opt stack 0
  6416                           GLOBAL	__end_of_T0_init
  6417                           	__end_of_T0_init:
  6418  0FEE                     	signat	_T0_init,89
  6419                           	global	_EEPROM_read
  6420                           
  6421 ;; *************** function _EEPROM_read *****************
  6422 ;; Defined at:
  6423 ;;		line 4 in file "eeprom.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  addr            1    wreg     unsigned char 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  addr            1    2[COMMON] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      unsigned char 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6437 ;;      Params:         0       0       0       0       0
  6438 ;;      Locals:         1       0       0       0       0
  6439 ;;      Temps:          0       0       0       0       0
  6440 ;;      Totals:         1       0       0       0       0
  6441 ;;Total ram usage:        1 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    2
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6451                           	file	"eeprom.c"
  6452                           	line	4
  6453                           global __ptext23
  6454                           __ptext23:	;psect for function _EEPROM_read
  6455  07F1                     psect	text23
  6456                           	file	"eeprom.c"
  6457                           	line	4
  6458                           	global	__size_of_EEPROM_read
  6459                           	__size_of_EEPROM_read	equ	__end_of_EEPROM_read-_EEPROM_read
  6460  000F                     	
  6461                           _EEPROM_read:	
  6462  07F1                     ;incstack = 0
  6463                           	opt	stack 5
  6464                           ; Regs used in _EEPROM_read: [wreg+status,2]
  6465                           ;EEPROM_read@addr stored from wreg
  6466                           	movwf	(EEPROM_read@addr)
  6467  07F1  00F2               	line	6
  6468                           	
  6469                           l2081:	
  6470  07F2                     ;eeprom.c: 4: char EEPROM_read( unsigned char addr );eeprom.c: 5: {;eeprom.c: 6:     EEA
                                 DRH = 0;
  6471                           	bcf	status, 5	;RP0=0, select bank2
  6472  07F2  1283               	bsf	status, 6	;RP1=1, select bank2
  6473  07F3  1703               	clrf	(271)^0100h	;volatile
  6474  07F4  018F               	line	7
  6475                           	
  6476                           l2083:	
  6477  07F5                     ;eeprom.c: 7:     EEADR = addr;
  6478                           	movf	(EEPROM_read@addr),w
  6479  07F5  0872               	movwf	(269)^0100h	;volatile
  6480  07F6  008D               	line	8
  6481                           	
  6482                           l2085:	
  6483  07F7                     ;eeprom.c: 8:     EECON1bits.EEPGD = 0;
  6484                           	bsf	status, 5	;RP0=1, select bank3
  6485  07F7  1683               	bsf	status, 6	;RP1=1, select bank3
  6486  07F8  1703               	bcf	(396)^0180h,7	;volsfr
  6487  07F9  138C               	line	9
  6488                           	
  6489                           l2087:	
  6490  07FA                     ;eeprom.c: 9:     EECON1bits.RD = 1;
  6491                           	bsf	(396)^0180h,0	;volsfr
  6492  07FA  140C               	line	10
  6493                           	
  6494                           l2089:	
  6495  07FB                     ;eeprom.c: 10:     return( EEDAT );
  6496                           	bcf	status, 5	;RP0=0, select bank2
  6497  07FB  1283               	bsf	status, 6	;RP1=1, select bank2
  6498  07FC  1703               	movf	(268)^0100h,w	;volatile
  6499  07FD  080C               	goto	l341
  6500  07FE  2FFF               	
  6501                           l2091:	
  6502  07FF                     	line	11
  6503                           	
  6504                           l341:	
  6505  07FF                     	return
  6506  07FF  0008               	opt stack 0
  6507                           GLOBAL	__end_of_EEPROM_read
  6508                           	__end_of_EEPROM_read:
  6509  0800                     	signat	_EEPROM_read,4217
  6510                           	global	_isr
  6511                           
  6512 ;; *************** function _isr *****************
  6513 ;; Defined at:
  6514 ;;		line 7 in file "interrupt.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, pclath, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6528 ;;      Params:         0       0       0       0       0
  6529 ;;      Locals:         0       0       0       0       0
  6530 ;;      Temps:          2       0       0       0       0
  6531 ;;      Totals:         2       0       0       0       0
  6532 ;;Total ram usage:        2 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    1
  6535 ;; This function calls:
  6536 ;;		_T0_int
  6537 ;;		_T1_int
  6538 ;;		_T2_int
  6539 ;; This function is called by:
  6540 ;;		Interrupt level 1
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6544                           	file	"interrupt.c"
  6545                           	line	7
  6546                           global __ptext24
  6547                           __ptext24:	;psect for function _isr
  6548  0718                     psect	text24
  6549                           	file	"interrupt.c"
  6550                           	line	7
  6551                           	global	__size_of_isr
  6552                           	__size_of_isr	equ	__end_of_isr-_isr
  6553  002C                     	
  6554                           _isr:	
  6555  0718                     ;incstack = 0
  6556                           	opt	stack 3
  6557                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6558                           psect	intentry,class=CODE,delta=2
  6559                           global __pintentry
  6560                           __pintentry:
  6561  0004                     global interrupt_function
  6562                           interrupt_function:
  6563  0004                     	global saved_w
  6564                           	saved_w	set	btemp+0
  6565  007E                     	movwf	saved_w
  6566  0004  00FE               	swapf	status,w
  6567  0005  0E03               	movwf	(??_isr+0)
  6568  0006  00F0               	movf	pclath,w
  6569  0007  080A               	movwf	(??_isr+1)
  6570  0008  00F1               	ljmp	_isr
  6571  0009  120A  118A  2F18   psect	text24
  6572                           	line	9
  6573                           	
  6574                           i1l2303:	
  6575  0718                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  6576                           	btfss	(11),2	;volatile
  6577  0718  1D0B               	goto	u150_21
  6578  0719  2F1B               	goto	u150_20
  6579  071A  2F1C               u150_21:
  6580  071B                     	goto	i1l2309
  6581  071B  2F23               u150_20:
  6582  071C                     	line	11
  6583                           	
  6584                           i1l2305:	
  6585  071C                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  6586                           	bcf	(11),2	;volatile
  6587  071C  110B               	line	12
  6588                           	
  6589                           i1l2307:	
  6590  071D                     ;interrupt.c: 12:         T0_int();
  6591                           	fcall	_T0_int
  6592  071D  120A  158A  27EE  120A  118A  	goto	i1l2309
  6593  0722  2F23               	line	13
  6594                           ;interrupt.c: 13:     }
  6595                           	
  6596                           i1l149:	
  6597  0723                     	line	14
  6598                           	
  6599                           i1l2309:	
  6600  0723                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  6601                           	bcf	status, 5	;RP0=0, select bank0
  6602  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  6603  0724  1303               	btfss	(12),0	;volatile
  6604  0725  1C0C               	goto	u151_21
  6605  0726  2F28               	goto	u151_20
  6606  0727  2F29               u151_21:
  6607  0728                     	goto	i1l2315
  6608  0728  2F30               u151_20:
  6609  0729                     	line	16
  6610                           	
  6611                           i1l2311:	
  6612  0729                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  6613                           	bcf	(12),0	;volatile
  6614  0729  100C               	line	17
  6615                           	
  6616                           i1l2313:	
  6617  072A                     ;interrupt.c: 17:         T1_int();
  6618                           	fcall	_T1_int
  6619  072A  120A  118A  27CA  120A  118A  	goto	i1l2315
  6620  072F  2F30               	line	18
  6621                           ;interrupt.c: 18:     }
  6622                           	
  6623                           i1l150:	
  6624  0730                     	line	19
  6625                           	
  6626                           i1l2315:	
  6627  0730                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  6628                           	bcf	status, 5	;RP0=0, select bank0
  6629  0730  1283               	bcf	status, 6	;RP1=0, select bank0
  6630  0731  1303               	btfss	(12),1	;volatile
  6631  0732  1C8C               	goto	u152_21
  6632  0733  2F35               	goto	u152_20
  6633  0734  2F36               u152_21:
  6634  0735                     	goto	i1l152
  6635  0735  2F3D               u152_20:
  6636  0736                     	line	21
  6637                           	
  6638                           i1l2317:	
  6639  0736                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  6640                           	bcf	(12),1	;volatile
  6641  0736  108C               	line	22
  6642                           	
  6643                           i1l2319:	
  6644  0737                     ;interrupt.c: 22:         T2_int();
  6645                           	fcall	_T2_int
  6646  0737  120A  158A  27CE  120A  118A  	goto	i1l152
  6647  073C  2F3D               	line	23
  6648                           ;interrupt.c: 23:     }
  6649                           	
  6650                           i1l151:	
  6651  073D                     	line	24
  6652                           	
  6653                           i1l152:	
  6654  073D                     	movf	(??_isr+1),w
  6655  073D  0871               	movwf	pclath
  6656  073E  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  6657  073F  0E70               	movwf	status
  6658  0740  0083               	swapf	saved_w,f
  6659  0741  0EFE               	swapf	saved_w,w
  6660  0742  0E7E               	retfie
  6661  0743  0009               	opt stack 0
  6662                           GLOBAL	__end_of_isr
  6663                           	__end_of_isr:
  6664  0744                     	signat	_isr,89
  6665                           	global	_T2_int
  6666                           
  6667 ;; *************** function _T2_int *****************
  6668 ;; Defined at:
  6669 ;;		line 132 in file "timers.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6683 ;;      Params:         0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_isr
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6696                           	file	"timers.c"
  6697                           	line	132
  6698                           global __ptext25
  6699                           __ptext25:	;psect for function _T2_int
  6700  0FCE                     psect	text25
  6701                           	file	"timers.c"
  6702                           	line	132
  6703                           	global	__size_of_T2_int
  6704                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  6705  0010                     	
  6706                           _T2_int:	
  6707  0FCE                     ;incstack = 0
  6708                           	opt	stack 3
  6709                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  6710                           	line	134
  6711                           	
  6712                           i1l2181:	
  6713  0FCE                     ;timers.c: 134:     if( T2count )
  6714                           	bcf	status, 5	;RP0=0, select bank0
  6715  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  6716  0FCF  1303               	movf	((_T2count)),w
  6717  0FD0  0820               iorwf	((_T2count+1)),w
  6718  0FD1  0421               	btfsc	status,2
  6719  0FD2  1903               	goto	u146_21
  6720  0FD3  2FD5               	goto	u146_20
  6721  0FD4  2FD6               u146_21:
  6722  0FD5                     	goto	i1l122
  6723  0FD5  2FDD               u146_20:
  6724  0FD6                     	line	136
  6725                           	
  6726                           i1l2183:	
  6727  0FD6                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  6728                           	movlw	01h
  6729  0FD6  3001               	subwf	(_T2count),f
  6730  0FD7  02A0               	movlw	0
  6731  0FD8  3000               	skipc
  6732  0FD9  1C03               	decf	(_T2count+1),f
  6733  0FDA  03A1               	subwf	(_T2count+1),f
  6734  0FDB  02A1               	goto	i1l122
  6735  0FDC  2FDD               	line	137
  6736                           ;timers.c: 137:     }
  6737                           	
  6738                           i1l121:	
  6739  0FDD                     	line	138
  6740                           	
  6741                           i1l122:	
  6742  0FDD                     	return
  6743  0FDD  0008               	opt stack 0
  6744                           GLOBAL	__end_of_T2_int
  6745                           	__end_of_T2_int:
  6746  0FDE                     	signat	_T2_int,89
  6747                           	global	_T1_int
  6748                           
  6749 ;; *************** function _T1_int *****************
  6750 ;; Defined at:
  6751 ;;		line 80 in file "timers.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6765 ;;      Params:         0       0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0
  6767 ;;      Temps:          0       0       0       0       0
  6768 ;;      Totals:         0       0       0       0       0
  6769 ;;Total ram usage:        0 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; This function calls:
  6772 ;;		Nothing
  6773 ;; This function is called by:
  6774 ;;		_isr
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6778                           	line	80
  6779                           global __ptext26
  6780                           __ptext26:	;psect for function _T1_int
  6781  07CA                     psect	text26
  6782                           	file	"timers.c"
  6783                           	line	80
  6784                           	global	__size_of_T1_int
  6785                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  6786  0014                     	
  6787                           _T1_int:	
  6788  07CA                     ;incstack = 0
  6789                           	opt	stack 3
  6790                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  6791                           	line	82
  6792                           	
  6793                           i1l2175:	
  6794  07CA                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  6795                           	movlw	low(0FCh)
  6796  07CA  30FC               	bcf	status, 5	;RP0=0, select bank0
  6797  07CB  1283               	bcf	status, 6	;RP1=0, select bank0
  6798  07CC  1303               	movwf	(15)	;volatile
  6799  07CD  008F               	line	83
  6800                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  6801                           	movlw	low(018h)
  6802  07CE  3018               	movwf	(14)	;volatile
  6803  07CF  008E               	line	84
  6804                           	
  6805                           i1l2177:	
  6806  07D0                     ;timers.c: 84:     if( T1count )
  6807                           	movf	((_T1count)),w
  6808  07D0  0822               iorwf	((_T1count+1)),w
  6809  07D1  0423               	btfsc	status,2
  6810  07D2  1903               	goto	u145_21
  6811  07D3  2FD5               	goto	u145_20
  6812  07D4  2FD6               u145_21:
  6813  07D5                     	goto	i1l103
  6814  07D5  2FDD               u145_20:
  6815  07D6                     	line	86
  6816                           	
  6817                           i1l2179:	
  6818  07D6                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  6819                           	movlw	01h
  6820  07D6  3001               	subwf	(_T1count),f
  6821  07D7  02A2               	movlw	0
  6822  07D8  3000               	skipc
  6823  07D9  1C03               	decf	(_T1count+1),f
  6824  07DA  03A3               	subwf	(_T1count+1),f
  6825  07DB  02A3               	goto	i1l103
  6826  07DC  2FDD               	line	87
  6827                           ;timers.c: 87:     }
  6828                           	
  6829                           i1l102:	
  6830  07DD                     	line	88
  6831                           	
  6832                           i1l103:	
  6833  07DD                     	return
  6834  07DD  0008               	opt stack 0
  6835                           GLOBAL	__end_of_T1_int
  6836                           	__end_of_T1_int:
  6837  07DE                     	signat	_T1_int,89
  6838                           	global	_T0_int
  6839                           
  6840 ;; *************** function _T0_int *****************
  6841 ;; Defined at:
  6842 ;;		line 33 in file "timers.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;		None
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;		None
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6856 ;;      Params:         0       0       0       0       0
  6857 ;;      Locals:         0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0
  6859 ;;      Totals:         0       0       0       0       0
  6860 ;;Total ram usage:        0 bytes
  6861 ;; Hardware stack levels used:    1
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_isr
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  6869                           	line	33
  6870                           global __ptext27
  6871                           __ptext27:	;psect for function _T0_int
  6872  0FEE                     psect	text27
  6873                           	file	"timers.c"
  6874                           	line	33
  6875                           	global	__size_of_T0_int
  6876                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  6877  0012                     	
  6878                           _T0_int:	
  6879  0FEE                     ;incstack = 0
  6880                           	opt	stack 3
  6881                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  6882                           	line	35
  6883                           	
  6884                           i1l2169:	
  6885  0FEE                     ;timers.c: 35:     TMR0 = (256-250);
  6886                           	movlw	low(06h)
  6887  0FEE  3006               	bcf	status, 5	;RP0=0, select bank0
  6888  0FEF  1283               	bcf	status, 6	;RP1=0, select bank0
  6889  0FF0  1303               	movwf	(1)	;volatile
  6890  0FF1  0081               	line	36
  6891                           	
  6892                           i1l2171:	
  6893  0FF2                     ;timers.c: 36:     if( T0count )
  6894                           	movf	((_T0count)),w
  6895  0FF2  0824               iorwf	((_T0count+1)),w
  6896  0FF3  0425               	btfsc	status,2
  6897  0FF4  1903               	goto	u144_21
  6898  0FF5  2FF7               	goto	u144_20
  6899  0FF6  2FF8               u144_21:
  6900  0FF7                     	goto	i1l84
  6901  0FF7  2FFF               u144_20:
  6902  0FF8                     	line	38
  6903                           	
  6904                           i1l2173:	
  6905  0FF8                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  6906                           	movlw	01h
  6907  0FF8  3001               	subwf	(_T0count),f
  6908  0FF9  02A4               	movlw	0
  6909  0FFA  3000               	skipc
  6910  0FFB  1C03               	decf	(_T0count+1),f
  6911  0FFC  03A5               	subwf	(_T0count+1),f
  6912  0FFD  02A5               	goto	i1l84
  6913  0FFE  2FFF               	line	39
  6914                           ;timers.c: 39:     }
  6915                           	
  6916                           i1l83:	
  6917  0FFF                     	line	40
  6918                           	
  6919                           i1l84:	
  6920  0FFF                     	return
  6921  0FFF  0008               	opt stack 0
  6922                           GLOBAL	__end_of_T0_int
  6923                           	__end_of_T0_int:
  6924  1000                     	signat	_T0_int,89
  6925                           global	___latbits
  6926                           ___latbits	equ	2
  6927  0002                     	global	btemp
  6928                           	btemp set 07Eh
  6929  007E                     
  6930                           	DABS	1,126,2	;btemp
  6931                           	global	wtemp0
  6932                           	wtemp0 set btemp+0
  6933  007E                     	end


Data Sizes:
    Strings     21
    Constant    16
    Data        2
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     21      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    resetTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    habTemporizador@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    temporizar@t	PTR struct temporizadorT size(1) Largest target is 24
		 -> tempo(BANK0[24]), 

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _main->_temporizar
    _temporizar->_EEPROM_write
    _temporizar->___awmod
    _EEPROM_write->___awdiv
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _temporizar->___awdiv
    _EEPROM_write->___awdiv
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   17623
                                             16 BANK0      5     5      0
                        _EEPROM_read
                       _EEPROM_write
                            _T0_init
                           _T0_start
                          _T0_status
                                 _b0
                                 _b1
                                 _b2
                                 _b3
                         _botao_init
                              _delay
                    _habTemporizador
                           _lcd_init
                            _lcd_num
                          _lcd_print
                  _resetTemporizador
                       _teclado_init
                         _temporizar
 ---------------------------------------------------------------------------------
 (1) _temporizar                                           6     5      1    5813
                                              9 COMMON     1     1      0
                                              4 BANK0      5     4      1
                       _EEPROM_write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1    1682
                                              7 COMMON     2     1      1
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
                         _botao_init
 ---------------------------------------------------------------------------------
 (2) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _resetTemporizador                                    1     1      0     242
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2    2020
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    6261
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1693
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     503
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _habTemporizador                                      3     2      1     480
                                              2 COMMON     3     2      1
                                 _b0 (ARG)
                                 _b1 (ARG)
                                 _b2 (ARG)
                                 _b3 (ARG)
 ---------------------------------------------------------------------------------
 (1) _b3                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b2                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b0                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_start                                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_read                                          1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_read
   _EEPROM_write
     ___awdiv (ARG)
   _T0_init
   _T0_start
   _T0_status
   _b0
   _b1
   _b2
   _b3
   _botao_init
   _delay
   _habTemporizador
     _b0 (ARG)
     _b1 (ARG)
     _b2 (ARG)
     _b3 (ARG)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _resetTemporizador
   _teclado_init
     _botao_init
   _temporizar
     _EEPROM_write
       ___awdiv (ARG)
     ___awdiv
     ___awmod

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      35       5       66.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      41      12        0.0%
ABS                  0      0      41       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon May 23 10:50:48 2022

                         pc 0002                 __CFG_CP$OFF 0000                lcd_dataReg@d 0074  
                        l50 0355                          l51 0355                          l45 0085  
                        l46 00A2                          l47 012F                          l80 0FED  
                        l48 0353                          l49 0354                          l87 0FA5  
                        l96 0F8A                  _b0Anterior 007B                          _b0 0FA6  
                        _b1 0FB0                          _b2 0FBA                          _b3 0FC4  
              ___awdiv@sign 0041                          fsr 0004                  _b1Anterior 007A  
            temporizar@adrs 0044                         ?_b0 0070                         ?_b1 0070  
                       ?_b2 0070                         ?_b3 0070                  _b2Anterior 0027  
                       l200 06EB                         l210 03C2                         l203 036F  
                       l212 03EA                         l204 03B3                         l213 03EB  
                       l205 0384                         l214 03F9                         l206 039E  
                       l230 0522                         l215 03F9                         l207 039F  
                       l231 0521                         l160 07B5                         l216 0445  
                       l208 03C1                         l232 0520                         l217 0445  
                       l209 03CD                         l233 0523                         l236 0F9B  
                       l180 058D                         l341 07FF                         l309 0FCD  
                       l157 07AE                         l181 059C                         l173 054E  
                       l229 0523                         l158 07A0                         l182 059F  
                       l246 0F82                         l159 07B5                         l175 0544  
                       l191 06B4                         l239 079E                         l176 0553  
                       l344 0781                         l249 0FAF                         l177 0578  
                       l185 0717                         l345 0781                         l178 0597  
                       l610 05BD                         l346 0785                         l611 0602  
                       l347 0787                         l612 05D4                         l188 07F0  
                       l269 0FB9                         l613 05C8                         l197 06DE  
                       l614 05D9                         l630 0664                         l622 0620  
                       l198 06C7                         l366 07C9                         l615 05DA  
                       l631 0670                         l623 062A                         l199 06EB  
                       l616 05F3                         l632 0675                         l624 0665  
                       l289 0FC3                         l617 0601                         l609 05AF  
                       l625 063F                         l618 060D                         l626 0633  
                       l619 0612                         l627 0644                         l628 0645  
                       l629 0656                         _PR2 0092                __CFG_CPD$OFF 0000  
                _b3Anterior 0026                         _isr 0718                         fsr0 0004  
                       indf 0000                ___awmod@sign 0078                        ??_b0 0072  
                      ??_b1 0072                        ??_b2 0072                        ??_b3 0072  
              __CFG_LVP$OFF 0000                 lcd_num@size 004C                        l2101 0FB9  
                      l2021 0682                        l2111 0F83                        l2103 0FBA  
                      l2031 0690                        l2023 0683                        l2041 0FEB  
                      l2033 0FDE                        l2113 0F8A                        l2105 0FC3  
                      l2025 0684                        l2017 0676                        l2043 0FEC  
                      l2035 0FE2                        l2107 0FC4                        l2027 0685  
                      l2019 067F                        l2051 07BE                        l2037 0FE6  
                      l2109 0FCD                        l2029 0686                        l2053 07C0  
                      l2045 07B6                        l2039 0FE7                        l2071 0FA4  
                      l2055 07C4                        l2047 07B9                        l2081 07F2  
                      l2073 0789                        l2049 07BD                        l2091 07FF  
                      l2083 07F5                        l2075 0790                        l2085 07F7  
                      l2069 0F9C                        l2093 0FA6                        l2501 0656  
                      l2077 0794                        l2421 0770                        l2087 07FA  
                      l2095 0FAF                        l2431 05A0                        l2511 0675  
                      l2503 065D                        l2079 0798                        l2423 0771  
                      l2089 07FB                        l2097 0F94                        l2441 05B3  
                      l2433 05A3                        l2505 0665                        l2521 06D9  
                      l2513 06B8                        l2425 0777                        l2601 0074  
                      l2099 0FB0                        l2451 05C8                        l2443 05B8  
                      l2435 05A7                        l2507 066A                        l2523 06DE  
                      l2515 06BC                        l2427 077A                        l2531 0477  
                      l2611 0095                        l2603 007A                        l2461 05F1  
                      l2453 05CF                        l2445 05BD                        l2437 05AC  
                      l2509 0670                        l2517 06C7                        l2429 077F  
                      l2541 04F0                        l2533 04A5                        l2525 0447  
                      l2621 00BF                        l2613 009B                        l2605 007D  
                      l1911 07A0                        l2471 060D                        l2463 05F3  
                      l2455 05D4                        l2447 05BF                        l2439 05AF  
                      l2551 036F                        l2519 06D3                        l2543 0500  
                      l2535 04AE                        l2527 044F                        l2631 00FC  
                      l2623 00CD                        l2607 0084                        l2615 00A2  
                      l1913 07AE                        l2473 0612                        l2465 05FA  
                      l2457 05DA                        l2449 05C5                        l2481 061D  
                      l1921 0700                        l2561 039F                        l2553 0379  
                      l2545 035B                        l2537 04DF                        l2529 0470  
                      l2641 013F                        l2633 010A                        l2625 00D8  
                      l2617 00A9                        l2609 0085                        l2459 05EB  
                      l2467 0602                        l2491 0633                        l2483 0620  
                      l2475 0613                        l1931 0714                        l1923 0704  
                      l1915 06ED                        l2571 03E1                        l2563 03B3  
                      l2555 037F                        l2547 0364                        l2539 04E8  
                      l2651 0183                        l2643 014F                        l2635 0115  
                      l2627 00E6                        l2619 00B4                        l1909 079F  
                      l1861 053D                        l2469 0607                        l2493 063A  
                      l2485 0624                        l2477 0614                        l1925 0707  
                      l1917 06F0                        l1933 07DF                        l2573 03EB  
                      l2565 03C2                        l2557 0384                        l2549 0369  
                      l2661 01C0                        l2653 018C                        l2645 015F  
                      l2637 0120                        l2629 00F1                        l2581 002B  
                      l1871 055F                        l1863 0544                        l1855 0525  
                      l2495 063F                        l2487 062A                        l2479 0618  
                      l1927 0708                        l1919 06FF                        l2575 03F2  
                      l2567 03C8                        l2559 0399                        l2671 0210  
                      l2663 01D0                        l2655 0198                        l2647 016F  
                      l2639 012F                        l2591 004C                        l2583 0030  
                      l1873 0560                        l1881 0578                        l1865 054E  
                      l1857 0528                        l2497 0645                        l2489 0630  
                      l1929 070F                        l2577 0437                        l2569 03CD  
                      l2681 02C5                        l2673 0224                        l2665 01E0  
                      l2657 01A4                        l2649 017A                        l2593 0059  
                      l2585 0035                        l1891 058D                        l1883 0579  
                      l1875 056F                        l1867 0553                        l1859 0537  
                      l2499 064F                        l2683 0300                        l2675 025F  
                      l2667 01F0                        l2659 01B0                        l2595 0062  
                      l2587 003A                        l2579 0028                        l1893 0597  
                      l1885 0580                        l1877 0570                        l1869 0556  
                      l2685 0317                        l2677 0276                        l2669 0200  
                      l2597 0068                        l2589 003F                        l1895 059C  
                      l1887 0581                        l1879 0574                        l2679 02B1  
                      l2599 006E                        l1889 0586                        l1897 0F7C  
                      ?_isr 0070                        STR_1 075A                        STR_2 075A  
                      STR_3 076D                        STR_4 076B                        STR_5 076D  
                      STR_6 076D                        STR_7 076B                        STR_8 076D  
                      u1010 053D                        u1011 053C                        u1020 0543  
                      u1021 0542                        u1005 052B                        u1030 055F  
                      u1031 055E                        u2000 0399                        u1105 07E2  
                      u2001 0398                        u1050 0586                        u2010 03C0  
                      u1051 0585                        u2011 03BF                        u1060 058C  
                      u2020 03E1                        u1061 058B                        u1045 0563  
                      u2021 03E0                        u2030 03E9                        u2031 03E8  
                      u2015 03BC                        u1080 07B4                        u2040 03F2  
                      u1081 07B3                        u2041 03F1                        u2025 03DD  
                      u2050 0444                        u2051 0443                        u2060 0083  
                      u2061 0082                        u2070 00A1                        u2127 0702  
                      u1095 06F3                        u2055 0440                        u2071 00A0  
                      u2080 017A                        u2137 0712                        u2081 0179  
                      u2147 0548                        u2157 0550                        u2167 0572  
                      u1720 0785                        u2177 0591                        u1721 0784  
                      u1810 0600                        u1730 05A7                        u2187 0599  
                      u1811 05FF                        u1731 05A6                        u1820 0607  
                      u1740 05B3                        u1900 0663                        u2197 07A2  
                      u1821 0606                        u1805 05F4                        u1741 05B2  
                      u1901 0662                        u1750 05C5                        u1910 066A  
                      u1830 0618                        u1751 05C4                        u1911 0669  
                      u1831 0617                        u1840 0624                        u1920 06EA  
                      u1841 0623                        u1921 06E9                        u1770 05D8  
                      u1850 0630                        u1930 044F                        u1771 05D7  
                      u1851 062F                        u1931 044E                        u1940 0477  
                      u1765 05C9                        u1941 0476                        u1790 05EB  
                      u1870 0643                        u1950 04AE                        u1791 05EA  
                      u1871 0642                        u1951 04AD                        u1880 064F  
                      u1960 04E8                        u1785 05DB                        u1881 064E  
                      u1865 0634                        u1961 04E7                        u1970 0360  
                      u1795 05E7                        u1971 035E                        u1980 0361  
                      u1885 064B                        u1990 0369                        u1895 0657  
                      u1991 0368                        i1l83 0FFF                        i1l84 0FFF  
                      _TMR0 0001                        _TMR2 0011                        _WPUB 0095  
           __end_of_T0_init 0FEE                __CFG_WRT$OFF 0000                        _main 0028  
                      btemp 007E                        start 000C               __CFG_IESO$OFF 0000  
              lcd_instReg@i 0074            ?_habTemporizador 0072                       ??_isr 0070  
              lcd_num@sinal 004D        __end_of_EEPROM_write 0788                       ?_main 0070  
           __end_of___awdiv 0613                       _EEADR 010D                       _EEDAT 010C  
             __CFG_WDTE$OFF 0000             __end_of___awmod 0676                       _ANSEL 0188  
           ___awdiv@divisor 0072                       i1l102 07DD                       i1l103 07DD  
                     i1l121 0FDD                       i1l122 0FDD                       i1l150 0730  
                     i1l151 073D                       i1l152 073D                       i1l149 0723  
           ___awdiv@counter 0040                       _TMR1H 000F                       _TMR1L 000E  
                     _PORTB 0006                       _PORTD 0008                       _TRISB 0086  
     __end_of_tecladoMatriz 075A                lcd_print@col 0078                lcd_print@lin 0042  
            __CFG_FCMEN$OFF 0000                lcd_print@pos 0041                lcd_print@str 0079  
        __size_of_T0_status 0008            __end_of_T0_start 0FA6             __end_of_lcd_num 0446  
                     _delay 079F                       _tempo 0028                       main@i 0054  
            __CFG_BOREN$OFF 0000                       pclath 000A                       status 0003  
                     wtemp0 007E             EEPROM_read@addr 0072               lcd_lincol@col 0075  
             lcd_lincol@lin 0077              __CFG_MCLRE$OFF 0000        __size_of_EEPROM_read 000F  
           __initialization 000F                __end_of_main 0358           _resetTemporizador 0788  
                    ??_main 0050          ?_resetTemporizador 0070                   ??_T0_init 0072  
                    ?_delay 0072                      _EEADRH 010F                      _EECON2 018D  
          ___awdiv@dividend 0074         ??_resetTemporizador 0072                      _ANSELH 0189  
                    i1l2311 0729                      i1l2303 0718                      i1l2313 072A  
                    i1l2305 071C                      i1l2171 0FF2                      i1l2315 0730  
                    i1l2307 071D                      i1l2173 0FF8                      i1l2181 0FCE  
                    i1l2317 0736                      i1l2309 0723                      i1l2175 07CA  
                    i1l2183 0FD6                      i1l2319 0737                      i1l2169 0FEE  
                    i1l2177 07D0                      i1l2179 07D6                      u150_20 071C  
                    u150_21 071B                      u151_20 0729                      u151_21 0728  
                    u144_20 0FF8                      u152_20 0736                      u144_21 0FF7  
                    u152_21 0735                      u145_20 07D6                      u145_21 07D5  
                    u146_20 0FD6                      u146_21 0FD5                      _T0_int 0FEE  
                    _T1_int 07CA                      _T2_int 0FCE              __CFG_PWRTE$OFF 0000  
      __size_of_lcd_dataReg 002C           __end_of_T0_status 0F8B            __end_of_lcd_init 06B5  
                 ??___awdiv 0076                   ??___awmod 0076        __size_of_lcd_instReg 007C  
 __end_of_resetTemporizador 079F                      delay@t 0072            ___awdiv@quotient 0042  
           ___awmod@divisor 0072             ___awmod@counter 0077                   ??_lcd_num 0048  
              __pdataCOMMON 007A                      saved_w 007E          resetTemporizador@t 0072  
   __end_of__initialization 0024              __pcstackCOMMON 0070       __size_of_EEPROM_write 0019  
                 ?_T0_start 0072               __end_of_delay 07B6                  __end_of_b0 0FB0  
                __end_of_b1 0FBA                  __end_of_b2 0FC4                  __end_of_b3 0FCE  
            _OPTION_REGbits 0081                     ??_delay 0074          __size_of_lcd_print 0037  
                __pbssBANK0 0020                     ?_T0_int 0070                     ?_T1_int 0070  
                   ?_T2_int 0070               ?_teclado_init 0070                _EEPROM_write 076F  
                __pmaintext 0028                  ??_T0_start 0074                  __pintentry 0004  
__size_of_resetTemporizador 0017                   T0_start@c 0072                  _lcd_lincol 07DE  
                _botao_init 0F7C                     _T0_init 0FDE                     _T0count 0024  
                   _T1count 0022                     _T2count 0020                   ?_lcd_init 0070  
                __stringtab 0744              ??_teclado_init 0072             __size_of_T0_int 0012  
           __size_of_T1_int 0014             __size_of_T2_int 0010            EEPROM_write@addr 0078  
          EEPROM_write@data 0077           __end_of_lcd_print 06EC                     ___awdiv 05A0  
                   ___awmod 0613                     __ptext1 0446                     __ptext2 076F  
                   __ptext3 07B6                     __ptext4 0F7C                     __ptext5 0788  
                   __ptext6 06B5                     __ptext7 0358                     __ptext8 07DE  
                   __ptext9 06EC                     _lcd_num 0358                   _T1CONbits 0010  
  __size_of_habTemporizador 0009                   _T2CONbits 0012                __size_of_isr 002C  
          ___awmod@dividend 0074            habTemporizador@h 0072            habTemporizador@t 0074  
                   clrloop0 0F8C                  ??_lcd_init 0075        end_of_initialization 0024  
             ??_EEPROM_read 0072                   _T0_status 0F83                  _temporizar 0446  
                 _PORTAbits 0005                   _PORTDbits 0008                   _TRISAbits 0085  
               ?_lcd_lincol 0075                   _TRISDbits 0088                 ?_botao_init 0070  
               temporizar@t 0079               ??_lcd_dataReg 0072                  lcd_num@col 0044  
                lcd_num@div 004E                  lcd_num@lin 004B                  lcd_num@tam 0047  
                lcd_num@num 0045              __end_of_T0_int 1000              __end_of_T1_int 07DE  
            __end_of_T2_int 0FDE               ??_lcd_instReg 0072         __end_of_EEPROM_read 0800  
                ?_T0_status 0072               __pidataCOMMON 0F7A           __size_of_T0_start 000A  
      __end_of_teclado_init 07CA         start_initialization 000F               _tecladoMatriz 074A  
               __end_of_isr 0744           ??_habTemporizador 0073                    ??_T0_int 0070  
                  ??_T1_int 0070                    ??_T2_int 0070    __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __end_of_lcd_dataReg 0718         __size_of_lcd_lincol 0013         __size_of_botao_init 0007  
       __end_of_lcd_instReg 05A0                 ?_temporizar 0044                   ___latbits 0002  
             __pcstackBANK0 0040                    ?_T0_init 0070           __size_of_lcd_init 003F  
               _EEPROM_read 07F1                    ?___awdiv 0072                    ?___awmod 0072  
               ??_T0_status 0074                   __pstrings 0744                   _lcd_print 06B5  
                  ?_lcd_num 0044              __size_of_delay 0017                 __size_of_b0 000A  
               __size_of_b1 000A                 __size_of_b2 000A                 __size_of_b3 000A  
         interrupt_function 0004                 _lcd_dataReg 06EC         __size_of_temporizar 00DE  
                 clear_ram0 0F8B                    _PIE1bits 008C                    _PIR1bits 000C  
               _lcd_instReg 0524       __size_of_teclado_init 0014                    _T0_start 0F9C  
                ?_lcd_print 0078                 __stringbase 0749                ??_lcd_lincol 0076  
              ??_botao_init 0072            __size_of_T0_init 0010                _teclado_init 07B6  
                _EECON1bits 018C          __end_of_lcd_lincol 07F1          __end_of_botao_init 0F83  
          __size_of___awdiv 0073            __size_of___awmod 0063          __end_of__stringtab 074A  
           _habTemporizador 0F93            __size_of_lcd_num 00EE                    __ptext10 0613  
                  __ptext11 05A0                    __ptext20 0F83                    __ptext12 0676  
                  __ptext21 0F9C                    __ptext13 0524                    __ptext22 0FDE  
                  __ptext14 079F                    __ptext23 07F1                    __ptext15 0F93  
                  __ptext24 0718                    __ptext16 0FC4                    __ptext25 0FCE  
                  __ptext17 0FBA                    __ptext26 07CA                    __ptext18 0FB0  
                  __ptext27 0FEE                    __ptext19 0FA6           __CFG_BOR4V$BOR40V 0000  
                  _lcd_init 0676               ?_EEPROM_write 0077               __size_of_main 0330  
              ??_temporizar 0045                 ??_lcd_print 0040                  _INTCONbits 000B  
                  intlevel1 0000              ??_EEPROM_write 0078                ?_EEPROM_read 0070  
        __end_of_temporizar 0524                   stringcode 0744     __end_of_habTemporizador 0F9C  
                  stringdir 0744                    stringtab 0744                ?_lcd_dataReg 0070  
              ?_lcd_instReg 0070  
